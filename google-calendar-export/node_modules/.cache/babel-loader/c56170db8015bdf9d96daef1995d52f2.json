{"ast":null,"code":"var _jsxFileName = \"/Users/yigit/Downloads/robotdegilim.xyz/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nfunction App() {\n  var info = {\n    \"l1\": {\n      \"summary\": \"ENG211/1\",\n      \"start\": {\n        \"dateTime\": \"2020-10-12T08:40:00+03:00\",\n        \"timeZone\": \"Turkey\"\n      },\n      \"end\": {\n        \"dateTime\": \"2020-10-12T08:40:00+03:00\",\n        \"timeZone\": \"Turkey\"\n      },\n      \"recurrence\": [\"RRULE:FREQ=WEEKLY;COUNT=1\"]\n    },\n    \"l2\": {\n      \"summary\": \"MATH219/3\",\n      \"start\": {\n        \"dateTime\": \"2020-10-13T13:40:00+03:00\",\n        \"timeZone\": \"Turkey\"\n      },\n      \"end\": {\n        \"dateTime\": \"2020-10-13T15:30:00+03:00\",\n        \"timeZone\": \"Turkey\"\n      },\n      \"recurrence\": [\"RRULE:FREQ=WEEKLY;COUNT=1\"]\n    },\n    \"l3\": {\n      \"summary\": \"EE281/3\",\n      \"start\": {\n        \"dateTime\": \"2020-10-13T15:40:00+03:00\",\n        \"timeZone\": \"Turkey\"\n      },\n      \"end\": {\n        \"dateTime\": \"2020-10-13T17:30:00+03:00\",\n        \"timeZone\": \"Turkey\"\n      },\n      \"recurrence\": [\"RRULE:FREQ=WEEKLY;COUNT=1\"]\n    },\n    \"l4\": {\n      \"summary\": \"ENG211/1\",\n      \"start\": {\n        \"dateTime\": \"2020-10-14T14:40:00+03:00\",\n        \"timeZone\": \"Turkey\"\n      },\n      \"end\": {\n        \"dateTime\": \"2020-10-14T15:30:00+03:00\",\n        \"timeZone\": \"Turkey\"\n      },\n      \"recurrence\": [\"RRULE:FREQ=WEEKLY;COUNT=1\"]\n    },\n    \"l5\": {\n      \"summary\": \"EE281/3\",\n      \"start\": {\n        \"dateTime\": \"2020-10-15T15:40:00+03:00\",\n        \"timeZone\": \"Turkey\"\n      },\n      \"end\": {\n        \"dateTime\": \"2020-10-15T16:30:00+03:00\",\n        \"timeZone\": \"Turkey\"\n      },\n      \"recurrence\": [\"RRULE:FREQ=WEEKLY;COUNT=1\"]\n    },\n    \"l6\": {\n      \"summary\": \"MATH291/3\",\n      \"start\": {\n        \"dateTime\": \"2020-10-16T08:40:00+03:00\",\n        \"timeZone\": \"Turkey\"\n      },\n      \"end\": {\n        \"dateTime\": \"2020-10-16T10:30:00+03:00\",\n        \"timeZone\": \"Turkey\"\n      },\n      \"recurrence\": [\"RRULE:FREQ=WEEKLY;COUNT=1\"]\n    }\n  };\n  var calendarInfo = JSON.parse(info);\n  var gapi = window.gapi;\n  /* \n    Update with your own Client Id and Api key \n  */\n\n  var CLIENT_ID = \"531687826330-d2raf921gt5ur2q5lspcv25ceak6v7e7.apps.googleusercontent.com\";\n  var API_KEY = \"AIzaSyC1JqJ83f1CZ8Otm-lDrpCX443r7OWewbw\";\n  var DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"];\n  var SCOPES = \"https://www.googleapis.com/auth/calendar.events\";\n\n  const handleClick = () => {\n    gapi.load('client:auth2', () => {\n      console.log('loaded client');\n      gapi.client.init({\n        apiKey: API_KEY,\n        clientId: CLIENT_ID,\n        discoveryDocs: DISCOVERY_DOCS,\n        scope: SCOPES\n      });\n      gapi.client.load('calendar', 'v3', () => console.log('added to calendar!'));\n      gapi.auth2.getAuthInstance().signIn().then(() => {\n        for (var i = 0; i < calendarInfo.length; i++) {\n          var obj = calendarInfo[i];\n          var event = {\n            'summary': obj.summary,\n            'start': {\n              'dateTime': obj.start.dateTime,\n              'timeZone': obj.start.timeZone\n            },\n            'end': {\n              'dateTime': obj.end.dateTime,\n              'timeZone': obj.end.timeZone\n            },\n            'recurrence': ['RRULE:FREQ=DAILY;COUNT=2'],\n            'reminders': {\n              'useDefault': false,\n              'overrides': [{\n                'method': 'email',\n                'minutes': 24 * 60\n              }, {\n                'method': 'popup',\n                'minutes': 10\n              }]\n            }\n          };\n          var request = gapi.client.calendar.events.insert({\n            'calendarId': 'primary',\n            'resource': event\n          });\n          request.execute(event => {\n            console.log(event);\n            window.open(event.htmlLink);\n          });\n        }\n        /*\n            Uncomment the following block to get events\n        */\n\n        /*\n        // get events\n        gapi.client.calendar.events.list({\n          'calendarId': 'primary',\n          'timeMin': (new Date()).toISOString(),\n          'showDeleted': false,\n          'singleEvents': true,\n          'maxResults': 10,\n          'orderBy': 'startTime'\n        }).then(response => {\n          const events = response.result.items\n          console.log('EVENTS: ', events)\n        })\n        */\n\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, \"Click to add event to Google Calendar\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontSize: 18\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, \"Uncomment the get events code to get events\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontSize: 18\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, \"Don't forget to add your Client Id and Api key\"), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      width: 100,\n      height: 50\n    },\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  }, \"Export Your Schedule\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/yigit/Downloads/robotdegilim.xyz/src/App.js"],"names":["React","App","info","calendarInfo","JSON","parse","gapi","window","CLIENT_ID","API_KEY","DISCOVERY_DOCS","SCOPES","handleClick","load","console","log","client","init","apiKey","clientId","discoveryDocs","scope","auth2","getAuthInstance","signIn","then","i","length","obj","event","summary","start","dateTime","timeZone","end","request","calendar","events","insert","execute","open","htmlLink","logo","fontSize","width","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n\n  var info = {   \n    \"l1\": {\n        \"summary\": \"ENG211/1\",\n        \"start\": {\n            \"dateTime\": \"2020-10-12T08:40:00+03:00\",\n            \"timeZone\": \"Turkey\"\n        },\n        \"end\": {\n            \"dateTime\": \"2020-10-12T08:40:00+03:00\",\n            \"timeZone\": \"Turkey\"\n        },\n        \"recurrence\": [\n            \"RRULE:FREQ=WEEKLY;COUNT=1\"\n        ]\n    },\n\n    \"l2\": {\n        \"summary\": \"MATH219/3\",\n        \"start\": {\n            \"dateTime\": \"2020-10-13T13:40:00+03:00\",\n            \"timeZone\": \"Turkey\"\n        },\n        \"end\": {\n            \"dateTime\": \"2020-10-13T15:30:00+03:00\",\n            \"timeZone\": \"Turkey\"\n        },\n        \"recurrence\": [\n            \"RRULE:FREQ=WEEKLY;COUNT=1\"\n        ]\n    },\n\n    \"l3\": {\n        \"summary\": \"EE281/3\",\n        \"start\": {\n            \"dateTime\": \"2020-10-13T15:40:00+03:00\",\n            \"timeZone\": \"Turkey\"\n        },\n        \"end\": {\n            \"dateTime\": \"2020-10-13T17:30:00+03:00\",\n            \"timeZone\": \"Turkey\"\n        },\n        \"recurrence\": [\n            \"RRULE:FREQ=WEEKLY;COUNT=1\"\n        ]\n    },\n\n    \"l4\": {\n        \"summary\": \"ENG211/1\",\n        \"start\": {\n            \"dateTime\": \"2020-10-14T14:40:00+03:00\",\n            \"timeZone\": \"Turkey\"\n        },\n        \"end\": {\n            \"dateTime\": \"2020-10-14T15:30:00+03:00\",\n            \"timeZone\": \"Turkey\"\n        },\n        \"recurrence\": [\n            \"RRULE:FREQ=WEEKLY;COUNT=1\"\n        ]\n    },\n\n    \"l5\": {\n        \"summary\": \"EE281/3\",\n        \"start\": {\n            \"dateTime\": \"2020-10-15T15:40:00+03:00\",\n            \"timeZone\": \"Turkey\"\n        },\n        \"end\": {\n            \"dateTime\": \"2020-10-15T16:30:00+03:00\",\n            \"timeZone\": \"Turkey\"\n        },\n        \"recurrence\": [\n            \"RRULE:FREQ=WEEKLY;COUNT=1\"\n        ]\n    },\n\n    \"l6\": {\n        \"summary\": \"MATH291/3\",\n        \"start\": {\n            \"dateTime\": \"2020-10-16T08:40:00+03:00\",\n            \"timeZone\": \"Turkey\"\n        },\n        \"end\": {\n            \"dateTime\": \"2020-10-16T10:30:00+03:00\",\n            \"timeZone\": \"Turkey\"\n        },\n        \"recurrence\": [\n            \"RRULE:FREQ=WEEKLY;COUNT=1\"\n        ]\n    }\n}\n\n  var calendarInfo = JSON.parse(info)\n\n  var gapi = window.gapi\n  /* \n    Update with your own Client Id and Api key \n  */\n  var CLIENT_ID = \"531687826330-d2raf921gt5ur2q5lspcv25ceak6v7e7.apps.googleusercontent.com\"\n  var API_KEY = \"AIzaSyC1JqJ83f1CZ8Otm-lDrpCX443r7OWewbw\"\n  var DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"]\n  var SCOPES = \"https://www.googleapis.com/auth/calendar.events\"\n\n  const handleClick = () => {\n    gapi.load('client:auth2', () => {\n      console.log('loaded client')\n\n      gapi.client.init({\n        apiKey: API_KEY,\n        clientId: CLIENT_ID,\n        discoveryDocs: DISCOVERY_DOCS,\n        scope: SCOPES,\n      })\n\n      gapi.client.load('calendar', 'v3', () => console.log('added to calendar!'))\n\n      gapi.auth2.getAuthInstance().signIn()\n      .then(() => {\n\n        for(var i = 0; i < calendarInfo.length; i++) {\n          var obj = calendarInfo[i];\n\n          var event = {\n            'summary': obj.summary,\n            'start': {\n              'dateTime': obj.start.dateTime,\n              'timeZone': obj.start.timeZone\n            },\n            'end': {\n              'dateTime': obj.end.dateTime,\n              'timeZone': obj.end.timeZone\n            },\n            'recurrence': [\n              'RRULE:FREQ=DAILY;COUNT=2'\n            ],\n            'reminders': {\n              'useDefault': false,\n              'overrides': [\n                {'method': 'email', 'minutes': 24 * 60},\n                {'method': 'popup', 'minutes': 10}\n              ]\n            }\n          }\n  \n          var request = gapi.client.calendar.events.insert({\n            'calendarId': 'primary',\n            'resource': event,\n          })\n  \n          request.execute(event => {\n            console.log(event)\n            window.open(event.htmlLink)\n          })\n        }\n        \n        \n        \n\n        /*\n            Uncomment the following block to get events\n        */\n        /*\n        // get events\n        gapi.client.calendar.events.list({\n          'calendarId': 'primary',\n          'timeMin': (new Date()).toISOString(),\n          'showDeleted': false,\n          'singleEvents': true,\n          'maxResults': 10,\n          'orderBy': 'startTime'\n        }).then(response => {\n          const events = response.result.items\n          console.log('EVENTS: ', events)\n        })\n        */\n    \n\n      })\n    })\n  }\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>Click to add event to Google Calendar</p>\n        <p style={{fontSize: 18}}>Uncomment the get events code to get events</p>\n        <p style={{fontSize: 18}}>Don't forget to add your Client Id and Api key</p>\n        <button style={{width: 100, height: 50}} onClick={handleClick}>Export Your Schedule</button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}