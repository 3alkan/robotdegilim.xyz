{"version":3,"sources":["ExportCalendar.js","WeeklyProgram.js","Client.js","data/Course.js","schedule.js","SectionInfo.js","CourseAdvancedSettings.js","CourseCard.js","AddCourseWidget.js","AddDontFillWidget.js","AdvancedSettings.js","Colorset.js","Controls.js","WelcomeDialog.js","App.js","serviceWorker.js","index.js"],"names":["ExportCalendar","props","gapi","window","CLIENT_ID","API_KEY","DISCOVERY_DOCS","SCOPES","date","day","parseInt","slice","hour","min","events","Array","undefined","this","map","e","type","push","summary","title","start","timeZone","dateTime","convertDay","startDate","end","endDate","recurrence","convertEvents","popUped","console","log","load","client","init","apiKey","clientId","discoveryDocs","scope","auth2","getAuthInstance","signIn","then","event","calendar","insert","execute","htmlLink","open","className","Button","variant","color","startIcon","onClick","handleExport","React","Component","DayScaleRow","WeeklyProgram","AppointmentContent","data","restProps","style","background","main","text","section","classroom","IconButton","onDontFillDelete","fontSize","TimeTableCell","onDontFillAdd","handleDontFillAdd","state","currentScenario","scrollTo","html2canvas","document","getElementById","canvas","toDataURL","a","createElement","body","appendChild","href","download","click","removeChild","delta","setState","Math","scenarios","length","max","val","newCurrentScenario","isNaN","coursesToDisplay","scenario","currentScenarioChanged","c","lectureTimes","lt","i","startHour","endHour","abbreviation","sectionNumber","convertTime","startMin","endMin","dontFills","df","description","formatDate","AppointmentLayer","_","convertToEntry","isMobile","id","Paper","currentDate","startDayHour","endDayHour","cellDuration","dayScaleRowComponent","appointmentLayerComponent","CustomAppointment","timeTableCellComponent","appointmentContentComponent","handleScenarioChange","Typography","TextField","value","onChange","handleScenarioChangeAbsolute","target","doCapture","Client","coursesUrl","mustUrl","dept","semester","url","axios","get","courses","Object","keys","code","courseToPush","search","name","category","sections","sn","s","sectionToPush","instructor","criteria","minYear","maxYear","t","surnameStart","surnameEnd","getAllCourses","getCourses","getMusts","surnameCheck","surname","course_surname_start","course_surname_end","alphabet","A","B","C","Ç","D","E","F","G","Ğ","H","I","İ","J","K","L","M","N","O","Ö","P","Q","R","S","Ş","T","U","Ü","V","W","X","Y","Z","surFirstVal","surSecondVal","surStartFirstVal","surStartSecondVal","surEndFirstVal","surEndSecondVal","apply_criteria_sections","department","grade","course","section_passed","toggle","j","criterion","dept_passed","surn_passed","checkDepartment","checkSurname","splice","lectures_intersect","lt1","lt2","check_collision","section1","section2","s1_lt","s2_lt","check_collision_df","df_t","times","compute_schedule","courseNumber","recursive_computation","depth","scenarioToPosh","collision","checkCollision","pop","apply_criteria_courses","SectionInfo","days","toString","ret","sectionDetails","ternary","formatTime","secondary","Divider","renderCriteria","renderTimes","CourseAdvancedSettings","onSettingsChange","settings","disableCourse","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","FormControlLabel","control","Checkbox","checked","handleSurnameCheck","label","handleDepartmentCheck","handleCollisionCheck","handleDisableCourse","CourseCard","selectedSections","sectionCount","onToggle","newSelectedSections","fill","handleToggle","boxes","FormGroup","row","toggleSections","sectionNo","size","onDelete","renderCheckBoxes","handleSettingsChange","renderSectionDetails","AddCourseWidget","onCourseAdd","FormControl","Select","inputProps","MenuItem","Autocomplete","options","filter","getOptionLabel","option","width","renderInput","params","v","handleCourseAdd","AddDontFillWidget","labelId","menuItems","Date","renderDayPick","renderHourPick","renderMinPick","maxLength","handleAddDontFill","AdvancedSettings","Colorset","colors","textSection","iterator","Controls","alertMsg","errorDept","errorSemester","errorSurname","restoreAvailable","restoredInfo","selectedCourses","restoredCourses","allCourses","restoredSettings","colorset","restoreData","zoom","ls","n","exists","handleAddCourse","getCourseByCode","catch","newSelectedCourses","getNextColor","scenariosToSubmit","scenarioToPush","currentCourse","currentSection","getSectionByNumber","currentColor","getColorByCourseCode","onSchedule","getDay","getHours","getMinutes","set","courseData","formattedDf","formatDf","calculatedSchedule","handleScheduleComplete","Snackbar","autoHideDuration","onClose","handleAlertClose","elevation","severity","required","error","toUpperCase","InputLabel","renderSemesterSelections","FormHelperText","handleAddMustCourse","handleScheduleBegin","handleChangeSettings","saveData","margin","loadRestoredData","handleDeleteCourse","handleCourseSettings","desc","WelcomeDialog","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","theme","createMuiTheme","palette","App","newDontFills","handleDontFillDelete","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.21b271f8.chunk.js","sourcesContent":["import React from \"react\";\nimport {Button} from \"@material-ui/core\";\nimport BackupIcon from '@material-ui/icons/Backup';\nimport {gapi} from \"gapi-script\";\n\nexport class ExportCalendar extends React.Component{\n    constructor(props) {\n        super(props);\n        this.gapi = window.gapi;\n        this.CLIENT_ID = \"531687826330-d2raf921gt5ur2q5lspcv25ceak6v7e7.apps.googleusercontent.com\";\n        this.API_KEY = \"AIzaSyC1JqJ83f1CZ8Otm-lDrpCX443r7OWewbw\";\n        this.DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"];\n        this.SCOPES = \"https://www.googleapis.com/auth/calendar.events\";\n    }\n    convertDay(date){\n        //           0123456789012345\n        //example : '2021-02-20T09:40'\n        //2020-10-15T16:30:00+03:00\n        //console.log(date);\n        //console.log(typeof date);\n        const day = parseInt(date.slice(8, 10)) - 14;\n        const hour = parseInt(date.slice(11, 13));\n        const min = parseInt(date.slice(14));\n        return \"2020-10-\" + (12 + day) + \"T\" +\n            (hour < 10 ? \"0\" : \"\") + hour + \":\" + (min < 10 ? \"0\" : \"\") + min + \":00+03:00\";\n    }\n    convertEvents(){\n        /*\n        * var event = {\n            'summary': info[curr].summary,\n            'start': {\n              'dateTime': info[curr].start.dateTime,\n              'timeZone': info[curr].start.timeZone\n            },\n            'end': {\n              'dateTime': info[curr].end.dateTime,\n              'timeZone': info[curr].end.timeZone\n            },\n            'recurrence': [\n              'RRULE:FREQ=WEEKLY;COUNT=14'\n            ]\n          }\n        * */\n        const events = Array(0);\n        if (this.props.events === undefined){\n            return [];\n        }\n        this.props.events.map(e => {\n            if (e.type === \"course\"){\n                events.push({\n                    summary: e.title,\n                    start: {\n                        timeZone: \"Turkey\",\n                        dateTime: this.convertDay(e.startDate)\n                    },\n                    end: {\n                        timeZone: \"Turkey\",\n                        dateTime: this.convertDay(e.endDate)\n                    },\n                    recurrence: [\n                        'RRULE:FREQ=WEEKLY;COUNT=14'\n                    ]\n                });\n            }\n        });\n        return events;\n    }\n\n    handleExport(){\n        const events = this.convertEvents();\n        let popUped = false;\n        events.map(e => console.log(e));\n        gapi.load('client:auth2', () => {\n            gapi.client.init({\n                apiKey: this.API_KEY,\n                clientId: this.CLIENT_ID,\n                discoveryDocs: this.DISCOVERY_DOCS,\n                scope: this.SCOPES,\n            });\n            gapi.client.load('calendar', 'v3', () => console.log('added to calendar!'))\n\n            gapi.auth2.getAuthInstance().signIn().then(() => {\n                events.map(event => {\n                    let request = gapi.client.calendar.events.insert({\n                        'calendarId': 'primary',\n                        'resource': event,\n                    });\n                    request.execute(e => {\n                        console.log(e);\n                        if (e.htmlLink !== undefined && !popUped){\n                            popUped = true;\n                            window.open(e.htmlLink);\n                        }\n                    });\n                });\n            });\n        });\n    }\n    render() {\n        return (\n            <div className={\"export-calendar-wrapper\"}>\n                <Button variant={\"contained\"}\n                        color={\"secondary\"}\n                        startIcon={<BackupIcon />} onClick={() => this.handleExport()}>\n                    Export to Google\n                </Button>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport {Paper, IconButton, Typography, TextField, Button} from \"@material-ui/core\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport FastRewindIcon from '@material-ui/icons/FastRewind';\nimport FastForwardIcon from '@material-ui/icons/FastForward';\nimport {ViewState} from \"@devexpress/dx-react-scheduler\";\nimport {\n    Scheduler,\n    WeekView,\n    Appointments,\n} from '@devexpress/dx-react-scheduler-material-ui';\nimport {isMobile} from \"react-device-detect\";\n\nimport {ExportCalendar} from \"./ExportCalendar\";\n\nimport \"./WeeklyProgram.css\"\nimport html2canvas from 'html2canvas';\n\nconst currentDate = '2021-02-20';\n\n\n\nclass DayScaleRow extends React.Component{\n    render() {\n        return (\n            <div className={\"dayscale-row\"}>\n                <div className={\"dayscale-label\"}>\n                    Mon\n                </div>\n                <div className={\"dayscale-label\"}>\n                    Tue\n                </div>\n                <div className={\"dayscale-label\"}>\n                    Wed\n                </div>\n                <div className={\"dayscale-label\"}>\n                    Thu\n                </div>\n                <div className={\"dayscale-label\"}>\n                    Fri\n                </div>\n                <div className={\"dayscale-label\"}>\n                    Sat\n                </div>\n                <div className={\"dayscale-label\"}>\n                    Sun\n                </div>\n            </div>\n        )\n    }\n}\n\nexport class WeeklyProgram extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentScenario: 0\n        };\n    }\n\n\n    doCapture() {\n        window.scrollTo(0, 0);\n \n        // Convert the div to image (canvas)\n        html2canvas(document.getElementById(\"screenshot\")).then(function (canvas) {\n    \n            // Get the image data as JPEG and 0.9 quality (0.0 - 1.0)\n            console.log(canvas.toDataURL(\"image/jpeg\", 0.9));\n            const a = document.createElement('a');\n            document.body.appendChild(a);\n            a.href = canvas.toDataURL(\"image/jpeg\", 0.9);\n            a.download = \"schedule.jpeg\";\n            a.click();\n            document.body.removeChild(a);\n        });\n    }\n\n    handleScenarioChange(delta){\n        this.setState({\n            currentScenario: Math.min(this.props.scenarios.length-1, Math.max(0,\n                this.state.currentScenario + delta))});\n    }\n    handleScenarioChangeAbsolute(val){\n        const newCurrentScenario = isNaN(val) ? 1 : val;\n        this.setState({currentScenario: Math.min(this.props.scenarios.length-1, Math.max(0,\n                newCurrentScenario-1))});\n    }\n    handleDontFillAdd(startDate, endDate){\n        this.props.onDontFillAdd(startDate, endDate, \"FULL\");\n    }\n    convertTime(day, hour, min){\n        //example : '2021-02-20T09:40'\n        return \"2021-02-\" + (14 + day) + \"T\" + (hour < 10 ? \"0\" : \"\") + hour + \":\" + (min < 10 ? \"0\" : \"\") + min;\n    }\n    convertToEntry(){\n        /*if (this.props.scenarios.length <= 0){\n            return [];\n        }*/\n        const coursesToDisplay = Array(0);\n        let scenario = Array(0);\n        let currentScenarioChanged = false;\n        if (this.props.scenarios.length > 0 && this.state.currentScenario >= this.props.scenarios.length){\n            this.setState({currentScenario: 0});\n            currentScenarioChanged = true;\n        }\n        scenario = currentScenarioChanged ? this.props.scenarios[0] :\n            this.props.scenarios[this.state.currentScenario];\n        if (this.props.scenarios.length === 0){\n            scenario = [];\n        }\n        scenario.map(c => {\n            //console.log(c);\n            c.section.lectureTimes.map(lt => {\n                for(let i = lt.startHour; i<lt.endHour; i++){\n                    coursesToDisplay.push({\n                        type: \"course\",\n                        title: c.abbreviation,\n                        section: c.section.sectionNumber,\n                        classroom: lt.classroom !== undefined ? lt.classroom : \"-\",\n                        startDate: this.convertTime(lt.day, i, lt.startMin),\n                        endDate: this.convertTime(lt.day, i+1, lt.endMin),\n                        color: c.color\n                    })\n                }\n            });\n        });\n        this.props.dontFills.map(df => {\n            coursesToDisplay.push({\n                type: \"dontFill\",\n                title: df.description,\n                color: {\n                    main: \"#000000\",\n                    text: \"#FFFFFF\"\n                },\n                startDate: df.startDate,\n                endDate: df.endDate\n            });\n        });\n        return coursesToDisplay;\n    }\n    CustomAppointment({formatDate, ...restProps}){\n        return (\n            <WeekView.AppointmentLayer {...restProps} formatDate={(_) => \"\"} className={\"custom-appointment\"} />\n        )\n    }\n    AppointmentContent = ({data, ...restProps}) => {\n        return (\n            <Appointments.AppointmentContent data={data}\n                                             {...restProps}\n                                             className={\"program-appointment\"} style={{background: data.color.main}}>\n                {data.type === \"course\"?\n                    <div className={\"program-text-container\"}>\n                        <div className={\"program-title\"} style={{color: data.color.text}}>\n                            {data.title + \"/\" + data.section}\n                        </div>\n                        <div className={\"program-title\"} style={{color: data.color.text}}>\n                            {data.classroom}\n                        </div>\n                    </div> :\n                    <div className={\"program-text-container\"}>\n                        <div className={\"program-row\"}>\n                            <IconButton\n                                        onClick={() => this.props.onDontFillDelete(data.startDate)}>\n                                <CloseIcon className={\"dont-fill-button\"} fontSize={\"small\"} color={\"secondary\"}/>\n                            </IconButton>\n                            <div className={\"program-title-dont-fill\"} style={{color: data.color.text}}>\n                                {data.title}\n                            </div>\n                        </div>\n                    </div>}\n            </Appointments.AppointmentContent>\n        )\n    }\n    TimeTableCell = ({startDate, endDate, onDontFillAdd, ...restProps}) => {\n        return (\n            <WeekView.TimeTableCell\n                                    {...restProps}\n                                    onClick={() => this.handleDontFillAdd(startDate, endDate)}/>\n        )\n    }\n    render() {\n        const data = this.convertToEntry();\n        //console.log(data);\n        return (\n            <div className={isMobile ? \"scheduler-mobile\" : \"scheduler-wrapper\"}>\n                <div id=\"screenshot\">\n                    <Paper>\n                        <Scheduler\n                            id={\"scheduler\"}\n                            data={data}\n                        >\n                            <ViewState\n                                currentDate={currentDate}\n                            />\n                            <WeekView\n                                startDayHour={7.667}\n                                endDayHour={17.5}\n                                cellDuration={60}\n                                dayScaleRowComponent={DayScaleRow}\n                                appointmentLayerComponent={this.CustomAppointment}\n                                timeTableCellComponent={this.TimeTableCell}\n                            />\n                            <Appointments appointmentContentComponent={this.AppointmentContent}/>\n                        </Scheduler>\n                    </Paper>\n                </div>\n                <div className={\"program-vertical\"}>\n                    {this.props.scenarios.length > 0?\n                    <div className={\"program-row\"}>\n                        <IconButton onClick={() => this.handleScenarioChange(-10)}>\n                            <FastRewindIcon fontSize={\"small\"} />\n                        </IconButton>\n                        <IconButton onClick={() => this.handleScenarioChange(-1)}>\n                            <KeyboardArrowLeftIcon fontSize={\"small\"} />\n                        </IconButton>\n                        <div className={\"program-typo-wrapper\"}>\n                            <Typography>\n                                {\"Scenario \"}\n                            </Typography>\n                        </div>\n                        <div className={\"program-textfield-wrapper\"}>\n                            <TextField className={\"program-textfield\"}\n                                       type={\"number\"}\n                                       value={this.state.currentScenario+1}\n                                       onChange={e => this.handleScenarioChangeAbsolute(parseInt(e.target.value))}/>\n                        </div>\n                        <div className={\"program-typo-wrapper\"}>\n                            <Typography>\n                                {\" of \" + this.props.scenarios.length}\n                            </Typography>\n                        </div>\n                        <IconButton onClick={() => this.handleScenarioChange(1)}>\n                            <KeyboardArrowRightIcon fontSize={\"small\"} />\n                        </IconButton>\n                        <IconButton onClick={() => this.handleScenarioChange(10)}>\n                            <FastForwardIcon fontSize={\"small\"} />\n                        </IconButton>\n                    </div> : null}\n                    {this.props.scenarios.length > 0 && !isMobile ? <div className={\"program-calendar-wrapper\"}>\n                        <ExportCalendar events={data} />\n                    </div> : null}\n                    <Button\n                        color={\"primary\"}\n                        onClick={() => this.doCapture()}\n                        >\n                        Download Schedule\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}","import axios from \"axios\";\n\nexport class Client{\n    constructor() {\n        this.coursesUrl = \"https:\\\\robotdegilim.xyz/courses\";\n        this.mustUrl = \"https:\\\\robotdegilim.xyz/musts?\";\n    }\n    async getMusts(dept, semester){\n        const url = this.mustUrl + \"dept=\"+dept+\"&sem=\"+semester;\n        return (await axios.get(url)).data;\n    }\n    async getCourses(){\n        const data = (await axios.get(this.coursesUrl)).data;\n        const courses = Array(0);\n        // eslint-disable-next-line\n        Object.keys(data).map(code => {\n            const courseToPush = {\n                code: code,\n                abbreviation: data[code][\"Course Name\"].slice(0, data[code][\"Course Name\"].search(\" \")),\n                name: data[code][\"Course Name\"].slice(data[code][\"Course Name\"].search(\"-\")+2),\n                category: 0,\n                sections: Array(0)\n            };\n            const sectionNumbers = Object.keys(data[code][\"Sections\"]);\n            // eslint-disable-next-line\n            sectionNumbers.map(sn => {\n                const s = data[code][\"Sections\"][sn];\n                const sectionToPush = {\n                    instructor: s[\"i\"][0],\n                    sectionNumber: sn,\n                    criteria: Array(0),\n                    minYear: 0,\n                    maxYear: 0,\n                    lectureTimes: Array(0)\n                };\n                // eslint-disable-next-line\n                s[\"t\"].map(t => {\n                    sectionToPush.lectureTimes.push({\n                        classroom: t[\"p\"],\n                        day: t[\"d\"],\n                        startHour: parseInt(t[\"s\"].slice(0, t[\"s\"].search(\":\"))),\n                        startMin: parseInt(t[\"s\"].slice(t[\"s\"].search(\":\")+1)),\n                        endHour: parseInt(t[\"e\"].slice(0, t[\"e\"].search(\":\"))),\n                        endMin: parseInt(t[\"e\"].slice(t[\"e\"].search(\":\")+1)),\n                    });\n                });\n                // eslint-disable-next-line\n                s[\"c\"].map(c => {\n                    sectionToPush.criteria.push({\n                        dept: c[\"d\"],\n                        surnameStart: c[\"s\"],\n                        surnameEnd: c[\"e\"]\n                    });\n                });\n                courseToPush.sections.push(sectionToPush);\n            });\n            //console.log(courseToPush);\n            //console.log(data[code]);\n            courses.push(courseToPush);\n        });\n        return courses;\n    }\n}","import {Client} from \"../Client\";\n// eslint-disable-next-line\nconst exampleCourses = [\n    {\n        code: 5710213,\n        abbreviation: \"CENG213\",\n        name: \"Data Structures\",\n        category: 0,\n        sections: [\n            {\n                instructor: \"Yusuf Sahillioğlu\",\n                criteria: [\n                    {\n                        dept: \"CENG\",\n                        surnameStart: \"AA\",\n                        surnameEnd: \"FF\"\n                    },\n                    {\n                        dept: \"EE\",\n                        surnameStart: \"AA\",\n                        surnameEnd: \"ZZ\"\n                    }\n                ],\n                minYear: 0,\n                maxYear: 0,\n                lectureTimes: [\n                    {\n                        classroom: \"BMB-1\",\n                        day: 0,\n                        startHour: 8,\n                        startMin: 40,\n                        endHour: 10,\n                        endMin: 30\n                    },\n                    {\n                        classroom: \"BMB-4\",\n                        day: 2,\n                        startHour: 15,\n                        startMin: 40,\n                        endHour: 17,\n                        endMin: 30\n                    }\n                ]\n            },\n            {\n                instructor: \"Cevat Şener\",\n                criteria: [\n                    {\n                        dept: \"CENG\",\n                        surnameStart: \"FG\",\n                        surnameEnd: \"ZZ\"\n                    },\n                    {\n                        dept: \"ME\",\n                        surnameStart: \"AA\",\n                        surnameEnd: \"ZZ\"\n                    }\n                ],\n                minYear: 0,\n                maxYear: 0,\n                lectureTimes: [\n                    {\n                        classroom: \"U-3\",\n                        day: 2,\n                        startHour: 10,\n                        startMin: 40,\n                        endHour: 12,\n                        endMin: 30\n                    },\n                    {\n                        classroom: \"CZ-14\",\n                        day: 6,\n                        startHour: 15,\n                        startMin: 40,\n                        endHour: 17,\n                        endMin: 30\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        code: 5710140,\n        abbreviation: \"CENG140\",\n        name: \"C Programming\",\n        category: 1,\n        sections: [\n            {\n                instructor: \"Göktürk Üçoluk\",\n                criteria: [\n                    {\n                        dept: \"CENG\",\n                        surnameStart: \"AA\",\n                        surnameEnd: \"ZZ\"\n                    }\n                ],\n                minYear: 0,\n                maxYear: 0,\n                lectureTimes: [\n                    {\n                        classroom: \"BMB-1\",\n                        day: 0,\n                        startHour: 8,\n                        startMin: 40,\n                        endHour: 10,\n                        endMin: 30\n                    },\n                    {\n                        classroom: \"BMB-5\",\n                        day: 2,\n                        startHour: 15,\n                        startMin: 40,\n                        endHour: 17,\n                        endMin: 30\n                    }\n                ]\n            }\n        ]\n    }\n]\n\nexport async function getAllCourses(){\n    const client = new Client();\n    return await client.getCourses();\n}\nexport async function getMusts(dept, semester){\n    const client = new Client();\n    return client.getMusts(dept, semester);\n}\nexport function getCourseByCategory(category){\n    if (category < 0){\n        return getAllCourses();\n    }\n    return getAllCourses().filter(c => c.category === category);\n}\nexport function filterCourses(courses, category){\n    if (category < 0){\n        return courses;\n    }\n    return courses.filter(c => c.category === category);\n}\n","function apply_criteria_courses(surname, department, grade, courses) {\n    for (var i = courses.length - 1 ; i >= 0 ; i--) {\n        courses[i] = apply_criteria_sections(surname, department, grade, courses[i]);\n\n        if(courses[i].sections.length === 0) {\n            // Drop Course\n            courses.splice(i, 1);\n        }\n    }\n    return courses;\n}\n\nfunction surnameCheck(surname, course_surname_start, course_surname_end) {\n    var alphabet = {\n        A : 1,\n        B : 2,\n        C : 3,\n        Ç : 4,\n        D : 5,\n        E : 6,\n        F : 7,\n        G : 8,\n        Ğ : 9,\n        H : 10,\n        I : 11,\n        İ : 12,\n        J : 13,\n        K : 14,\n        L : 15,\n        M : 16,\n        N : 17,\n        O : 18,\n        Ö : 19,\n        P : 20,\n        Q : 21,\n        R : 22,\n        S : 23,\n        Ş : 24,\n        T : 25,\n        U : 26,\n        Ü : 27,\n        V : 28,\n        W : 29,\n        X : 30,\n        Y : 31,\n        Z : 32\n    }\n    \n    var surFirstVal = alphabet[surname[0]];\n    var surSecondVal = alphabet[surname[1]];\n    var surStartFirstVal = alphabet[course_surname_start[0]];\n    var surStartSecondVal = alphabet[course_surname_start[1]];\n    var surEndFirstVal = alphabet[course_surname_end[0]];\n    var surEndSecondVal = alphabet[course_surname_end[1]];\n\n    if(surStartFirstVal < surFirstVal && surFirstVal < surEndFirstVal) {\n        return true;\n    }\n    if((surStartFirstVal === surFirstVal && surFirstVal < surEndFirstVal)\n        && (surStartSecondVal <= surStartSecondVal)) {\n        return true;\n    }\n    if((surStartFirstVal < surFirstVal && surFirstVal === surEndFirstVal)\n        && (surSecondVal <= surEndSecondVal)) {\n        return true;\n    }\n    return false;\n}\n\nfunction apply_criteria_sections(surname, department, grade, course) {\n    for(var i = course.sections.length - 1; i >= 0 ; i--) {\n        var section_passed = false;\n        if(course.sections[i].toggle === true) {\n            for(var j = 0 ; j < course.sections[i].criteria.length ; j++) {\n                let criterion = course.sections[i].criteria[j];\n                var dept_passed = false;\n                var surn_passed = false;\n                if(course.checkDepartment === false) {\n                    dept_passed = true;\n                } else {\n                    if(criterion.dept === \"ALL\" || criterion.dept === department) {\n                        dept_passed = true;\n                    }\n                }\n                if(course.checkSurname === false) {\n                    surn_passed = true;\n                } else {\n                    if(surnameCheck(surname, criterion.surnameStart, criterion.surnameEnd) === true) {\n                        surn_passed = true;\n                    }\n                }\n                \n                if(dept_passed === true && surn_passed === true) {\n                    section_passed = true;\n                }\n            }\n        }\n        \n        if(section_passed === false) {\n            course.sections.splice(i, 1);\n        }\n    }\n    return course;\n}\n\n\nfunction lectures_intersect(lt1, lt2) {\n    if (lt1.day !== lt2.day                      // Different Days\n        || lt1.startHour > lt2.endHour          // L1 starts after L2 ends by hour\n        || lt2.startHour > lt1.endHour          // L2 starts after L1 ends by hour\n        || (lt1.startHour === lt2.endHour        // L1 starts after L2 ends by min\n            && lt1.startMin > lt2.endMin)\n        || (lt2.startHour === lt1.endHour        // L2 starts after L1 ends by min\n            && lt2.startMin > lt1.endMin)\n            ) {\n        return false;\n    }\n    return true;\n}\n\nfunction check_collision(section1, section2) {\n    const s1_lt = section1.lectureTimes;\n    const s2_lt = section2.lectureTimes;\n\n    for (var i = 0 ; i < s1_lt.length ; i++) {\n        for (var j = 0 ; j < s2_lt.length ; j++) {\n            if(lectures_intersect(s1_lt[i], s2_lt[j]) === true) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction check_collision_df(section1, df) {\n    const s1_lt = section1.lectureTimes;\n    const df_t = df.times;\n\n    for (var i = 0 ; i < s1_lt.length ; i++) {\n        for (var j = 0 ; j < df_t.length ; j++) {\n            if(lectures_intersect(s1_lt[i], df_t[j]) === true) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\n\n// returns array of code + sections\nexport function compute_schedule(surname, department, grade, courses, dontFills) {\n    let courseNumber = courses.length;\n    courses = apply_criteria_courses(surname, department, grade, courses);\n    let scenarios = [];\n    recursive_computation(courses, dontFills, 0, [], scenarios, courseNumber);\n\n    return scenarios;\n}\n\nfunction recursive_computation(courses, dontFills, depth, scenario, scenarios, courseNumber) {\n    if(depth === courses.length) {\n        const scenarioToPosh = Array(0);\n        scenario.map(c => {\n            scenarioToPosh.push({\n                code: c.code,\n                section: c.section.sectionNumber,\n            });\n        });\n        if(scenarioToPosh.length == courseNumber) {\n            scenarios.push(scenarioToPosh);\n        }\n        return;\n    }\n    for(var i = 0 ; i < courses[depth].sections.length ; i++) {\n        var collision = false;\n        for(var j = 0 ; j < scenario.length ; j++) {\n            if(courses[depth].checkCollision == true && scenario[j].collision == true\n                && check_collision(courses[depth].sections[i], scenario[j].section) === true) {\n                collision = true;\n            }\n        }\n        for(var j = 0 ; j < dontFills.length ; j++) {\n            if(check_collision_df(courses[depth].sections[i], dontFills[j]) === true) {\n                collision = true;\n            }  \n        }\n        if(collision === false) {\n            scenario.push({\n                code: courses[depth].code,\n                section: courses[depth].sections[i],\n                collision: courses[depth].checkCollision\n            }\n            );\n            recursive_computation(courses, dontFills, depth + 1, scenario, scenarios, courseNumber);\n            scenario.pop();\n        }\n        \n    }\n}\n","import React from \"react\";\nimport {Divider} from \"@material-ui/core\";\n\nimport \"./SectionInfo.css\"\n\nexport class SectionInfo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.days = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n    }\n    formatTime(t){\n        return t > 9 ? t.toString() : \"0\" + t.toString();\n    }\n    getDepartmentCriteria(){\n        let ret = \"\";\n        for (let i = 0; i<this.props.sectionDetails.dept.length; i++){\n            ret += this.props.sectionDetails.dept[i] + \" \";\n        }\n        return ret;\n    }\n    renderTimes(){\n        const times = Array(0);\n        // eslint-disable-next-line\n        this.props.sectionDetails.lectureTimes.map(t => {\n            times.push(\n                <div className={\"section-date\"} style={{background: this.props.color.ternary}}>\n                    <div className={\"time-row\"}>\n                        {this.days[t.day] + \" \" + t.startHour + \".\" + this.formatTime(t.startMin) + \"-\" +\n                            t.endHour + \".\" + this.formatTime(t.endMin)\n                        }\n                    </div>\n                    <div className={\"time-row\"}>\n                        {\"Classroom: \" + t.classroom}\n                    </div>\n                </div>);\n        });\n        return times;\n    }\n    renderCriteria(c){\n        return (\n            <div className={\"section-row\"}>\n                {\"Department: \" + c.dept + \" Surname: \" + c.surnameStart + \"-\" + c.surnameEnd}\n            </div>\n        )\n    }\n    render() {\n        return (\n            <div className={\"section-info\"} style={{background: this.props.color.secondary}}>\n                <div>\n                    {\"Section \" + this.props.sectionDetails.sectionNumber}\n                </div>\n                <Divider />\n                <div className={\"section-row\"}>\n                    {\"Instructor: \" + this.props.sectionDetails.instructor}\n                </div>\n                {this.props.sectionDetails.criteria.map(c => this.renderCriteria(c))}\n                <div className={\"section-row\"}>\n                    {this.renderTimes()}\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport {\n    Accordion,\n    AccordionSummary,\n    AccordionDetails,\n    Typography,\n    FormControlLabel,\n    Checkbox,\n    Divider\n} from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport TuneIcon from '@material-ui/icons/Tune';\n\nimport \"./CourseAdvancedSettings.css\"\n\nexport class CourseAdvancedSettings extends React.Component{\n    handleSurnameCheck(){\n        this.props.onSettingsChange({\n            checkSurname: !this.props.settings.checkSurname,\n            checkDepartment: this.props.settings.checkDepartment,\n            checkCollision: this.props.settings.checkCollision,\n            disableCourse: this.props.settings.disableCourse,\n        });\n    }\n    handleDepartmentCheck(){\n        this.props.onSettingsChange({\n            checkSurname: this.props.settings.checkSurname,\n            checkDepartment: !this.props.settings.checkDepartment,\n            checkCollision: this.props.settings.checkCollision,\n            disableCourse: this.props.settings.disableCourse,\n        });\n    }\n    handleCollisionCheck(){\n        this.props.onSettingsChange({\n            checkSurname: this.props.settings.checkSurname,\n            checkDepartment: this.props.settings.checkDepartment,\n            checkCollision: !this.props.settings.checkCollision,\n            disableCourse: this.props.settings.disableCourse,\n        });\n    }\n    handleDisableCourse(){\n        this.props.onSettingsChange({\n            checkSurname: this.props.settings.checkSurname,\n            checkDepartment: this.props.settings.checkDepartment,\n            checkCollision: this.props.settings.checkCollision,\n            disableCourse: !this.props.settings.disableCourse,\n        });\n    }\n    render() {\n        return (\n            <div className={\"course-settings-wrapper\"}>\n                <Accordion style={{background: this.props.color.secondary}}>\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls={\"panel1a-content\"}>\n                        <div className={\"course-settings-row\"}>\n                            <TuneIcon color={\"primary\"} fontSize={\"large\"} />\n                            <div className={\"settings-typo\"}>\n                                <Typography>Advanced Settings</Typography>\n                            </div>\n                        </div>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                        <div className={\"settings-accordion\"}>\n                            <Divider />\n                            <div className={\"settings-row\"}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={this.props.settings.checkSurname}\n                                            onChange={() => this.handleSurnameCheck()}\n                                            color={\"primary\"}\n                                        />}\n                                    label={\"Check surname\"}/>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={this.props.settings.checkDepartment}\n                                            onChange={() => this.handleDepartmentCheck()}\n                                            color={\"primary\"}\n                                        />}\n                                    label={\"Check department\"}/>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={this.props.settings.checkCollision}\n                                            onChange={() => this.handleCollisionCheck()}\n                                            color={\"primary\"}\n                                        />}\n                                    label={\"Check collision\"}/>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={this.props.settings.disableCourse}\n                                            onChange={() => this.handleDisableCourse()}\n                                            color={\"primary\"}\n                                        />}\n                                    label={\"Disable course\"}/>\n                            </div>\n                        </div>\n                    </AccordionDetails>\n                </Accordion>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport {\n    Accordion,\n    AccordionDetails,\n    AccordionSummary,\n    Typography,\n    FormGroup,\n    FormControlLabel,\n    Checkbox,\n    Divider,\n    Button,\n    IconButton\n} from \"@material-ui/core\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport {SectionInfo} from \"./SectionInfo\";\nimport {CourseAdvancedSettings} from \"./CourseAdvancedSettings\";\n\nimport \"./CourseCard.css\"\n\nexport class CourseCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedSections: this.props.sections.slice(0),\n            sectionCount: props.course.sections.length\n        }\n    }\n\n    handleToggle(sections){\n        this.props.onToggle(sections);\n    }\n    handleSettingsChange(settings){\n        this.props.onSettingsChange(settings);\n    }\n\n    toggleSections(){\n        const newSelectedSections = Array(this.state.sectionCount).fill(!this.state.selectedSections[0]);\n        this.setState({selectedSections: newSelectedSections});\n        this.handleToggle(newSelectedSections);\n    }\n\n    renderCheckBoxes() {\n        if (this.state.sectionCount <= 0){\n            return null;\n        }\n        const boxes = Array(0);\n        for (let i = 0; i < this.state.sectionCount; i++){\n            boxes.push(\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            checked={this.state.selectedSections[i]}\n                            onChange={_ => {\n                                    const newSelectedSections = this.state.selectedSections.slice(0);\n                                    newSelectedSections[i] = !newSelectedSections[i];\n                                    this.setState({selectedSections: newSelectedSections});\n                                    this.handleToggle(newSelectedSections);\n                                }\n                            }\n                            color={\"primary\"}\n                        />\n                    }\n                    label={this.props.course.sections[i].sectionNumber}\n                />);\n        }\n        return (\n            <FormGroup row>\n                {boxes}\n                <Button\n                    color={\"primary\"}\n                    onClick={() => this.toggleSections()}\n                >\n                    Toggle\n                </Button>\n            </FormGroup>\n        )\n    }\n\n    renderSectionDetails(){\n        const ret = Array(0);\n        for (let i = 0; i<this.props.course.sections.length; i++){\n            ret.push(<SectionInfo\n                sectionNo={i+1}\n                sectionDetails={this.props.course.sections[i]}\n                color={this.props.color}\n            />);\n        }\n        return ret;\n    }\n\n    render() {\n        return (\n            <div className={\"course-card\"} style={{background: this.props.color.main}}>\n                <div className={\"course-row\"}>\n                    <IconButton size={\"small\"} onClick={() => this.props.onDelete()}>\n                        <DeleteIcon fontSize={\"inherit\"}/>\n                    </IconButton>\n                    <Accordion className={\"course-accordion\"} style={{background: this.props.color.main}}>\n                        <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls={\"panel1a-content\"}>\n                            <Typography style={{color: this.props.color.text}}>\n                                {this.props.course.abbreviation + \": \" + this.props.course.name}\n                            </Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <div className={\"course-details\"}>\n                                <div className={\"course-left-row\"}>\n                                    <Typography style={{color: this.props.color.text}}>\n                                        {\"Course code: \" + this.props.course.code}\n                                    </Typography>\n                                </div>\n                                <Divider />\n                                <div className={\"course-centered-row\"}>\n                                    <div>\n                                        Sections\n                                    </div>\n                                </div>\n                                <Divider />\n                                <div className={\"course-row\"}>\n                                    {this.renderCheckBoxes()}\n                                </div>\n                                <div>\n                                    <CourseAdvancedSettings color={this.props.color}\n                                                            onSettingsChange={(s) => this.handleSettingsChange(s)}\n                                                            settings={this.props.settings}/>\n                                </div>\n                                <Divider />\n                                {this.renderSectionDetails()}\n                            </div>\n                        </AccordionDetails>\n                    </Accordion>\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport {TextField, IconButton, FormControl, Select, MenuItem} from \"@material-ui/core\";\nimport {Autocomplete} from \"@material-ui/lab\";\nimport AddBoxIcon from '@material-ui/icons/AddBox';\n\nimport {filterCourses} from \"./data/Course\";\n\nimport \"./AddCourseWidget.css\"\n\nexport class AddCourseWidget extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            course: null,\n            category: -1,\n        }\n    }\n    handleCourseAdd(){\n        this.props.onCourseAdd(this.state.course);\n        this.setState({course: null, category: -1});\n    }\n    render() {\n        return (\n            <div className={\"add-course-wrapper\"}>\n                <div className={\"add-course-row\"}>\n                    <FormControl className={\"category-form\"} variant={\"outlined\"}>\n                        <Select\n                            className={\"category-select\"}\n                            value={this.state.category}\n                            onChange={e => this.setState({category: e.target.value, course: null})}\n                            inputProps={{id: \"category-select\"}}\n                        >\n                            <MenuItem value={-1}>All courses</MenuItem>\n                            <MenuItem value={0}>Must</MenuItem>\n                            <MenuItem value={1}>Technical</MenuItem>\n                            <MenuItem value={2}>Restricted</MenuItem>\n                            <MenuItem value={3}>Non-Tech</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <Autocomplete\n                        className={\"add-course-name\"}\n                        options={filterCourses(this.props.courses, this.state.category)}\n                        getOptionLabel={(option => option.abbreviation + \": \" + option.name)}\n                        style={{width: \"60%\"}}\n                        value={this.state.course}\n                        renderInput={(params => <TextField {...params} label={\"Course name\"} variant={\"outlined\"}/>)}\n                        onChange={(e, v) =>\n                            this.setState({course: v})}\n                    />\n                    {this.state.course !== null ? <IconButton onClick={() => this.handleCourseAdd()} >\n                        <AddBoxIcon fontSize={\"large\"} color={\"primary\"} />\n                    </IconButton> : null}\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport {MenuItem, FormControl, Select, Typography, IconButton, TextField} from \"@material-ui/core\";\nimport AddBoxIcon from '@material-ui/icons/AddBox';\n\nimport \"./AddDontFillWidget.css\"\n\nexport class AddDontFillWidget extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            day: 0,\n            startHour: this.props.startHour,\n            startMin: this.props.startMin,\n            endHour: this.props.endHour,\n            endMin: this.props.endMin,\n            description: \"FULL\"\n        };\n    }\n\n    renderDayPick(val, onChange){\n        return (\n            <div className={\"df-widget-select\"}>\n                <FormControl className={\"df-widget-formcontrol\"} variant={\"outlined\"}>\n                    <Select labelId={\"df-select-label-day\"}\n                            id={\"df-select-day\"}\n                            value={val}\n                            onChange={e => onChange(e.target.value)}\n                            style={{background: \"#FFFFFF\"}}>\n                        <MenuItem value={0}>Monday</MenuItem>\n                        <MenuItem value={1}>Tuesday</MenuItem>\n                        <MenuItem value={2}>Wednesday</MenuItem>\n                        <MenuItem value={3}>Thursday</MenuItem>\n                        <MenuItem value={4}>Friday</MenuItem>\n                        <MenuItem value={5}>Saturday</MenuItem>\n                        <MenuItem value={6}>Sunday</MenuItem>\n                    </Select>\n                </FormControl>\n            </div>\n        )\n    }\n\n    renderHourPick(val, onChange){\n        const menuItems = Array(0);\n        for (let i = this.props.startHour; i <= this.props.endHour; i++){\n            menuItems.push(<MenuItem value={i}>{i < 10? \"0\"+i : i}</MenuItem> );\n        }\n        return (\n            <div className={\"df-widget-select\"}>\n                <FormControl className={\"df-widget-formcontrol\"} variant={\"outlined\"}>\n                    <Select labelId={\"df-select-label-min\"}\n                            id={\"df-select-min\"}\n                            value={val}\n                            onChange={e => onChange(e.target.value)}\n                            style={{background: \"#FFFFFF\"}}>\n                        {menuItems}\n                    </Select>\n                </FormControl>\n            </div>\n        )\n    }\n\n    renderMinPick(val, onChange){\n        const menuItems = Array(0);\n        for (let i = 0; i <= 59; i++){\n            menuItems.push(<MenuItem value={i}>{i < 10 ? \"0\"+i : i}</MenuItem> );\n        }\n        return (\n            <div className={\"df-widget-select\"}>\n                <FormControl className={\"df-widget-formcontrol\"} variant={\"outlined\"}>\n                    <Select labelId={\"df-select-label-min\"}\n                            id={\"df-select-min\"}\n                            value={val}\n                            onChange={e => onChange(e.target.value)}\n                            style={{background: \"#FFFFFF\"}}>\n                        {menuItems}\n                    </Select>\n                </FormControl>\n            </div>\n        )\n    }\n\n    handleAddDontFill(){\n        this.props.onDontFillAdd(\n            this.convertTime(this.state.day, this.state.startHour, this.state.startMin),\n            this.convertTime(this.state.day, this.state.endHour, this.state.endMin),\n            this.state.description\n        );\n        this.setState({\n            day: 0,\n            startHour: this.props.startHour,\n            startMin: this.props.startMin,\n            endHour: this.props.endHour,\n            endMin: this.props.endMin,\n            description: \"FULL\"\n        });\n    }\n    convertTime(day, hour, min){\n        //example : '2021-02-20T09:40'\n        return new Date(\"2021-02-\" + (14 + day) + \"T\" + (hour < 10 ? \"0\" : \"\") +\n            hour + \":\" + (min < 10 ? \"0\" : \"\") + min);\n    }\n    render() {\n        return (\n            <div className={\"df-widget-wrapper\"}>\n                <div className={\"add-df-row\"}>\n                    {this.renderDayPick(this.state.day, val => this.setState({day: val}))}\n                    {this.renderHourPick(this.state.startHour,val => this.setState({startHour: val}))}\n                    <div className={\"df-typo\"}>\n                        <Typography>:</Typography>\n                    </div>\n                    {this.renderMinPick(this.state.startMin,val => this.setState({startMin: val}))}\n                    <div className={\"df-typo\"}>\n                        <Typography>-</Typography>\n                    </div>\n                    {this.renderHourPick(this.state.endHour,val => this.setState({endHour: val}))}\n                    <div className={\"df-typo\"}>\n                        <Typography>:</Typography>\n                    </div>\n                    {this.renderMinPick(this.state.endMin,val => this.setState({endMin: val}))}\n                    <div className={\"df-typo\"}>\n                        <Typography>is</Typography>\n                    </div>\n                    <div className={\"df-textfield\"}>\n                        <TextField\n                            label={\"Event\"}\n                            value={this.state.description}\n                            inputProps={{ maxLength: 8 }}\n                            variant={\"outlined\"}\n                            onChange={e => this.setState({description: e.target.value})}\n                        />\n                    </div>\n                    <IconButton onClick={() => this.handleAddDontFill()}>\n                        <AddBoxIcon fontSize={\"large\"} color={\"primary\"} />\n                    </IconButton>\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport {\n    Accordion,\n    AccordionSummary,\n    AccordionDetails,\n    Typography,\n    FormControlLabel,\n    Checkbox,\n    Divider\n} from \"@material-ui/core\";\n\nimport \"./AdvancedSettings.css\"\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport TuneIcon from '@material-ui/icons/Tune';\n\nexport class AdvancedSettings extends React.Component {\n\n    handleSurnameCheck(){\n        this.props.onSettingsChange({\n            checkSurname: !this.props.settings.checkSurname,\n            checkDepartment: this.props.settings.checkDepartment,\n            checkCollision: this.props.settings.checkCollision\n        });\n    }\n    handleDepartmentCheck(){\n        this.props.onSettingsChange({\n            checkSurname: this.props.settings.checkSurname,\n            checkDepartment: !this.props.settings.checkDepartment,\n            checkCollision: this.props.settings.checkCollision\n        });\n    }\n    handleCollisionCheck(){\n        this.props.onSettingsChange({\n            checkSurname: this.props.settings.checkSurname,\n            checkDepartment: this.props.settings.checkDepartment,\n            checkCollision: !this.props.settings.checkCollision\n        });\n    }\n\n    render() {\n        return (\n            <div className={\"course-settings-wrapper\"}>\n                <Accordion style={{background: \"aliceblue\"}}>\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls={\"panel1a-content\"}>\n                        <div className={\"course-settings-row\"}>\n                            <TuneIcon color={\"primary\"} fontSize={\"large\"} />\n                            <div className={\"course-settings-typo\"}>\n                                <Typography>Advanced Settings</Typography>\n                            </div>\n                        </div>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                        <div className={\"course-settings-accordion\"}>\n                            <Divider />\n                            <div className={\"course-settings-row\"}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={this.props.settings.checkSurname}\n                                            onChange={() => this.handleSurnameCheck()}\n                                            color={\"primary\"}\n                                        />}\n                                    label={\"Check surname\"}/>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={this.props.settings.checkDepartment}\n                                            onChange={() => this.handleDepartmentCheck()}\n                                            color={\"primary\"}\n                                        />}\n                                    label={\"Check department\"}/>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={this.props.settings.checkCollision}\n                                            onChange={() => this.handleCollisionCheck()}\n                                            color={\"primary\"}\n                                        />}\n                                    label={\"Check collision\"}/>\n                            </div>\n                        </div>\n                    </AccordionDetails>\n                </Accordion>\n            </div>\n        )\n    }\n}","export class Colorset{\n    constructor() {\n        this.colors = [\n            {\n                main: \"#33CDE8\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#C3F6FF\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n            {\n                main: \"#FF38CB\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#F7DCFF\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n            {\n                main: \"#FFF040\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#F7F3C2\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n            {\n                main: \"#71F154\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#DDF7D7\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n            {\n                main: \"#E82A2A\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#FFA9A9\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n            {\n                main: \"#FF8F00\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#FFD39A\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n            {\n                main: \"#B59FF7\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#E9E2FE\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n            {\n                main: \"#8D969A\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#CAD2D5\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n        ]\n        this.iterator = -1;\n    }\n    getNextColor(){\n        if (this.colors.length <= 0){\n            return {main: 0, secondary: 0, ternary: 0};\n        }\n        this.iterator = (this.iterator+1)%this.colors.length;\n        return this.colors[this.iterator];\n    }\n}","import React from \"react\";\nimport {\n    TextField,\n    Select,\n    Button,\n    FormControl,\n    FormHelperText,\n    MenuItem,\n    InputLabel,\n    Snackbar,\n    Divider\n} from \"@material-ui/core\";\nimport MuiAlert from '@material-ui/lab/Alert';\nimport AddIcon from '@material-ui/icons/Add';\nimport EventAvailableIcon from '@material-ui/icons/EventAvailable';\nimport SaveIcon from '@material-ui/icons/Save';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport {isMobile} from \"react-device-detect\";\nimport ls from \"local-storage\";\n\nimport {getAllCourses, getMusts} from \"./data/Course\";\nimport {compute_schedule} from \"./schedule\";\nimport {CourseCard} from \"./CourseCard\";\nimport {AddCourseWidget} from \"./AddCourseWidget\";\nimport {AddDontFillWidget} from \"./AddDontFillWidget\";\nimport {AdvancedSettings} from \"./AdvancedSettings\";\nimport {Colorset} from \"./Colorset\";\n\nimport \"./Controls.css\"\n\nexport class Controls extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            surname: \"\",\n            department: \"\",\n            semester: 0,\n            alertMsg: \"\",\n            errorDept: false,\n            errorSemester: false,\n            errorSurname: false,\n            restoreAvailable: false,\n            restoredInfo: {\n                surname: \"\",\n                department: \"\",\n                semester: 0\n            },\n            selectedCourses: [],\n            restoredCourses: [],\n            allCourses: [],\n            settings: {\n                checkSurname: true,\n                checkDepartment: true,\n                checkCollision: true\n            },\n            restoredSettings: {\n                checkSurname: true,\n                checkDepartment: true,\n                checkCollision: true\n            },\n            scenarios: [],\n            colorset: new Colorset()\n        }\n    }\n    componentDidMount() {\n        document.title = \"Robot Değilim *-*\";\n        getAllCourses().then(data => {\n            this.setState({allCourses: data});\n            this.restoreData();\n        });\n        if (isMobile){\n            document.body.style.zoom = \"60%\";\n        }\n    }\n    loadRestoredData(){\n        this.setState({\n            selectedCourses: this.state.restoredCourses,\n            settings: this.state.restoredSettings,\n            surname: this.state.restoredInfo.surname,\n            semester: this.state.restoredInfo.semester,\n            department: this.state.restoredInfo.department,\n        });\n    }\n    restoreData(){\n        const restoredCourses = ls.get(\"restoredCourses\");\n        const restoredInfo = ls.get(\"restoredInfo\");\n        const restoredSettings = ls.get(\"restoredSettings\");\n        console.log(restoredCourses);\n        this.setState({\n            restoredCourses: restoredCourses !== null? restoredCourses : [],\n            restoredSettings: restoredSettings !== null? restoredSettings : {\n                checkSurname: true,\n                checkDepartment: true,\n                checkCollision: true,\n                disableCourse: false\n            },\n            restoredInfo: restoredInfo !== null? {\n                surname: restoredInfo.surname,\n                department: restoredInfo.department,\n                semester: restoredInfo.semester\n            } : {\n                surname: \"\",\n                department: \"\",\n                semester: 0\n            },\n            restoreAvailable: restoredSettings !== null\n        });\n        console.log(restoredSettings);\n        console.log(restoredInfo);\n    }\n    getCourseByCode(code){\n        for (let i = 0; i<this.state.allCourses.length; i++){\n            if (this.state.allCourses[i].code === code){\n                return this.state.allCourses[i];\n            }\n        }\n        return null;\n    }\n    getSectionByNumber(c, n){\n        for (let i = 0; i<c.sections.length; i++){\n            if (c.sections[i].sectionNumber === n){\n                return c.sections[i];\n            }\n        }\n        return null;\n    }\n    getColorByCourseCode(code){\n        for (let i = 0; i<this.state.selectedCourses.length; i++){\n            if (this.state.selectedCourses[i] === null){\n                continue;\n            }\n            if(this.state.selectedCourses[i].code === code){\n                return this.state.selectedCourses[i].color;\n            }\n        }\n        return null;\n    }\n    renderSemesterSelections(n){\n        const ret = Array(0);\n        ret.push(<MenuItem value={0}>---</MenuItem> )\n        for (let i = 0; i<n; i++){\n            ret.push(<MenuItem value={i+1}>{i+1}</MenuItem> );\n        }\n        return ret;\n    }\n\n    handleAddMustCourse(){\n        this.setState({alertMsg: \"\", errorDept: false, errorSemester: false, errorSurname: false});\n        if (this.state.department.length < 2){\n            this.setState({alertMsg: \"Please enter a correct department\", errorDept: true});\n            return;\n        }\n        if (this.state.semester < 1){\n            this.setState({alertMsg: \"Please choose a semester\", errorSemester: true});\n            return;\n        }\n        getMusts(this.state.department, this.state.semester).then(data => {\n            if (data !== undefined){\n                // eslint-disable-next-line\n                data.map(code => {\n                    let exists = false;\n                    this.state.selectedCourses.map(c => {\n                        if (c !== null && c.code === code){\n                            exists = true;\n                        }\n                    });\n                    if (!exists){\n                        this.handleAddCourse(this.getCourseByCode(code));\n                    }\n                });\n            }\n        }).catch(_ => {\n            this.setState({alertMsg: \"Must courses for your department are not available\", errorDept: true});\n        });\n    }\n\n    handleAlertClose(){\n        this.setState({alertMsg: \"\"});\n    }\n    handleDeleteCourse(i){\n        const newSelectedCourses = this.state.selectedCourses.slice(0);\n        newSelectedCourses[i] = null;\n        this.setState({selectedCourses: newSelectedCourses});\n    }\n    handleToggle(i, sections){\n        const newSelectedCourses = this.state.selectedCourses.slice(0);\n        newSelectedCourses[i].sections = sections;\n        this.setState({selectedCourses: newSelectedCourses});\n        console.log(\"Course \" + i + \" sections:\" + sections);\n    }\n    handleAddCourse(c){\n        if (c === null){\n            return;\n        }\n        const newSelectedCourses = this.state.selectedCourses.slice(0);\n        newSelectedCourses.push({\n            code: c.code,\n            sections: Array(c.sections.length).fill(true),\n            color: this.state.colorset.getNextColor(),\n            settings: {\n                checkSurname: true,\n                checkDepartment: true,\n                checkCollision: true,\n                disableCourse: false\n            }\n        });\n        this.setState({selectedCourses: newSelectedCourses});\n    }\n    handleCourseSettings(i, s){\n        const newSelectedCourses = this.state.selectedCourses.slice(0);\n        newSelectedCourses[i].settings = s;\n        this.setState({selectedCourses: newSelectedCourses});\n    }\n    handleChangeSettings(s){\n        this.setState({settings: s});\n    }\n    handleScheduleComplete(scenarios){\n        if (scenarios.length <= 0){\n            console.log(\"Fail!\");\n            this.setState({alertMsg: \"There is no available schedule for this criteria.\"});\n        }\n        const scenariosToSubmit = Array(0);\n        scenarios.map(s => {\n            const scenarioToPush = Array(0);\n            s.map(c => {\n                const currentCourse = this.getCourseByCode(c.code);\n                const currentSection = this.getSectionByNumber(currentCourse, c.section);\n                const currentColor = this.getColorByCourseCode(c.code);\n                scenarioToPush.push({\n                    abbreviation: currentCourse.abbreviation,\n                    section: currentSection,\n                    color: currentColor\n                });\n            });\n            scenariosToSubmit.push(scenarioToPush);\n        });\n        this.props.onSchedule(scenariosToSubmit);\n    }\n    formatDf(df){\n        //           0123456789012345\n        //example : '2021-02-20T09:40'\n        return {\n            day: df.startDate.getDay(),\n            startHour: df.startDate.getHours(),\n            startMin: df.startDate.getMinutes(),\n            endHour: df.endDate.getHours(),\n            endMin: df.endDate.getMinutes() - 1\n        };\n    }\n    saveData(){\n        ls.set(\"restoredCourses\", this.state.selectedCourses);\n        ls.set(\"restoredSettings\", this.state.settings);\n        ls.set(\"restoredInfo\", {\n            surname: this.state.surname,\n            department: this.state.department,\n            semester: this.state.semester\n        });\n    }\n    handleScheduleBegin(){\n        this.setState({alertMsg: \"\", errorDept: false, errorSemester: false, errorSurname: false});\n        if (this.state.department.length < 2){\n            this.setState({alertMsg: \"Please enter a correct department\", errorDept: true});\n            return;\n        }\n        if (this.state.surname.length < 2 && this.state.settings.checkSurname){\n            this.setState({alertMsg: \"Please enter at least 2 letters of your surname\", errorSurname: true});\n            return;\n        }\n        const courseData = Array(0);\n        const dontFills = Array(0);\n        // eslint-disable-next-line\n        this.state.selectedCourses.map(c => {\n            if (c === null || c.settings.disableCourse){\n                return null;\n            }\n            const currentCourse = this.getCourseByCode(c.code);\n            const courseToPush = {\n                code: c.code,\n                category: currentCourse.category,\n                checkSurname: this.state.settings.checkSurname && c.settings.checkSurname,\n                checkCollision: this.state.settings.checkCollision && c.settings.checkCollision,\n                checkDepartment: this.state.settings.checkDepartment && c.settings.checkDepartment,\n                sections: Array(0)\n            };\n            for(let i = 0; i<currentCourse.sections.length; i++){\n                const sectionToPush = {\n                    sectionNumber: currentCourse.sections[i].sectionNumber,\n                    minYear: currentCourse.sections[i].minYear,\n                    maxYear: currentCourse.sections[i].maxYear,\n                    toggle: c.sections[i],\n                    criteria: currentCourse.sections[i].criteria,\n                    lectureTimes: Array(0)\n                };\n                currentCourse.sections[i].lectureTimes.map(t => sectionToPush.lectureTimes.push(t));\n                if (sectionToPush.criteria.length <= 0){\n                    sectionToPush.criteria = [{\n                        dept: \"ALL\",\n                        surnameStart: \"AA\",\n                        surnameEnd: \"ZZ\"\n                    }];\n                }\n                courseToPush.sections.push(sectionToPush);\n            }\n            courseData.push(courseToPush);\n        });\n        this.props.dontFills.map(df => {\n            const formattedDf = this.formatDf(df);\n            dontFills.push({\n                times: [formattedDf]\n            })\n        });\n        //console.log(courseData);\n        console.log(dontFills);\n        const calculatedSchedule = compute_schedule(\n            this.state.surname.slice(0,2),\n            this.state.department,\n            0,\n            courseData,\n            dontFills\n        );\n        //console.log(calculatedSchedule);\n        this.setState({scenario: calculatedSchedule});\n        this.handleScheduleComplete(calculatedSchedule);\n    }\n    render() {\n        return (\n            <div className={isMobile ? \"control-mobile\" : \"control-wrapper\"}>\n                <Snackbar\n                    open={this.state.alertMsg !== \"\"}\n                    autoHideDuration={5000}\n                    onClose={() => this.handleAlertClose()}\n                >\n                    <MuiAlert elevation={6} variant={\"filled\"} onClose={() => this.handleAlertClose()} severity={\"error\"}>\n                        {this.state.alertMsg}\n                    </MuiAlert>\n                </Snackbar>\n                <div className={\"control-row\"}>\n                    <div className={\"textfield-wrapper\"}>\n                        <TextField\n                            required={this.state.settings.checkSurname}\n                            error={this.state.errorSurname}\n                            label={\"Surname\"}\n                            value={this.state.surname}\n                            inputProps={{ maxLength: 12 }}\n                            variant={\"outlined\"}\n                            onChange={e => this.setState({surname: e.target.value.toUpperCase()})}\n                        />\n                    </div>\n                    <div className={\"textfield-wrapper\"}>\n                        <TextField\n                            required\n                            error={this.state.errorDept}\n                            label={\"Department\"}\n                            value={this.state.department}\n                            inputProps={{ maxLength: 12 }}\n                            variant={\"outlined\"}\n                            onChange={e => this.setState({department: e.target.value.toUpperCase()})}\n                        />\n                    </div>\n                </div>\n                <div className={\"control-row\"}>\n                    <div className={\"textfield-wrapper\"}>\n                        <FormControl className={\"form-control\"}>\n                            <InputLabel>Semester</InputLabel>\n                            <Select\n                                error={this.state.errorSemester}\n                                value={this.state.semester}\n                                onChange={e => this.setState({semester: e.target.value})}\n                            >\n                                {this.renderSemesterSelections(8)}\n                            </Select>\n                            <FormHelperText>Ex: 2nd year Fall semester -> 3</FormHelperText>\n                        </FormControl>\n                    </div>\n                    <div className={\"control-button\"}>\n                        <Button\n                            variant={\"contained\"}\n                            color={\"secondary\"}\n                            startIcon={<AddIcon />}\n                            onClick={() => this.handleAddMustCourse()}>\n                            Add Must Courses\n                        </Button>\n                    </div>\n                    <div className={\"control-button\"}>\n                        <Button\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                            startIcon={<EventAvailableIcon />}\n                            onClick={() => this.handleScheduleBegin()}>\n                            Schedule\n                        </Button>\n                    </div>\n                </div>\n                <AdvancedSettings settings={this.state.settings} onSettingsChange={s => this.handleChangeSettings(s)}/>\n                <div className={\"control-row\"}>\n                    <Button variant={\"contained\"}\n                            color={\"primary\"}\n                            onClick={() => this.saveData()}\n                            startIcon={<SaveIcon />} style={{margin: \"6pt\"}}>\n                        Save\n                    </Button>\n                    {this.state.restoreAvailable ?\n                    <Button\n                        variant={\"contained\"}\n                        color={\"primary\"}\n                        onClick={() => this.loadRestoredData()}\n                        startIcon={<SaveAltIcon />} style={{margin: \"6pt\"}}>\n                        Load\n                    </Button> : null}\n                </div>\n                <Divider />\n                <div className={\"control-row\"}>\n                    <div className={\"centered-row\"}>\n                        Added Courses\n                    </div>\n                </div>\n                <Divider />\n                {this.state.selectedCourses.map((c, i) => {\n                    return (\n                        c !== null?\n                        <CourseCard course={this.getCourseByCode(c.code)}\n                                    onDelete={() => this.handleDeleteCourse(i)}\n                                    onToggle={sections => this.handleToggle(i, sections)}\n                                    color={c.color}\n                                    settings={c.settings}\n                                    sections={c.sections}\n                                    onSettingsChange={(s) => this.handleCourseSettings(i, s)}/> : null\n                    );\n                })}\n                <AddCourseWidget\n                    courses={this.state.allCourses}\n                    onCourseAdd={c => this.handleAddCourse(c)}/>\n                <AddDontFillWidget startHour={8}\n                                   startMin={40}\n                                   endHour={17}\n                                   endMin={30}\n                                   onDontFillAdd={(startDate, endDate, desc) =>\n                                    this.props.onDontFillAdd(startDate, endDate, desc)}/>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Button\n} from \"@material-ui/core\";\n\nexport class WelcomeDialog extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: true\n        }\n    }\n    render() {\n        return (\n        <div className={\"dialog-wrapper\"}>\n            <Dialog open={this.state.open}\n                    onClose={() => this.setState({open: false})}\n                    aria-labelledby={\"alert-dialog-title\"}\n                    aria-describedby={\"alert-dialog-description\"}>\n                <DialogTitle id={\"alert-dialog-title\"}>\n                    Welcome!\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id={\"alert-dialog-description\"}>\n                        Siteyi ders seçimine yetiştirmek için hızlı bir şekilde yazdığımızdan,\n                        her türlü hata bildirimi bizim için çok faydalı olacaktır.\n                        Fark ettiğiniz herhangi bir sıkıntıda lütfen bizle iletişime geçin.\n                        <br/>\n                        <br/>\n                        Eren Erişken: erenerisken@gmail.com\n                        <br/>\n                        Alperen Keleş: alpkeles99@gmail.com\n                        <br/>\n                        Alp Eren Yılmaz: ylmz.alp.e@gmail.com\n                        <br/>\n                        <br/>\n                        Önemli: Yeni özellik olarak eklenen Google Calendar export'u kullanmak için gelişmiş\n                        kısmından izin vermeniz gerekmektedir.\n                        <br/>\n                        <br/>\n                        doldur.xyz anısına! (Saygılar @baskinburak)\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.setState({open: false})}\n                            color={\"secondary\"}\n                            variant={\"contained\"}\n                            autoFocus={false}>\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>);\n    }\n}","import React from 'react';\nimport {isMobile} from \"react-device-detect\";\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport {WeeklyProgram} from \"./WeeklyProgram\";\nimport {Controls} from \"./Controls\";\nimport {WelcomeDialog} from \"./WelcomeDialog\";\n\nimport './App.css';\n\nconst theme = createMuiTheme({\n    palette: {\n        secondary: {\n            main: '#71F154'\n        }\n    }\n});\n\nclass App extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            scenarios: [],\n            dontFills: []\n        }\n    }\n    handleDontFillAdd(startDate, endDate, description){\n        const newDontFills = this.state.dontFills.slice(0);\n        newDontFills.push({\n            startDate: startDate,\n            endDate: endDate,\n            description: description\n        });\n        this.setState({dontFills: newDontFills});\n    }\n    handleDontFillDelete(startDate){\n        this.setState({dontFills: this.state.dontFills.filter(df => df.startDate !== startDate)});\n    }\n    render() {\n        //console.log(this.state.scenarios);\n        return (\n          <MuiThemeProvider theme={theme}>\n            <div className=\"App\">\n                <WelcomeDialog />\n                <div className={isMobile ? \"column\" : \"row\"}>\n                    <WeeklyProgram dontFills={this.state.dontFills}\n                                   scenarios={this.state.scenarios}\n                                   onDontFillAdd={(startDate, endDate, desc) =>\n                                       this.handleDontFillAdd(startDate, endDate, desc)}\n                                   onDontFillDelete={startDate => this.handleDontFillDelete(startDate)}/>\n                    <Controls onSchedule={s => this.setState({scenarios: s})}\n                              dontFills={this.state.dontFills}\n                              onDontFillAdd={(startDate, endDate, desc) =>\n                                  this.handleDontFillAdd(startDate, endDate, desc)}/>\n                </div>\n            </div>\n          </MuiThemeProvider>\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}