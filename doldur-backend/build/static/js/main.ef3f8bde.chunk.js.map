{"version":3,"sources":["WeeklyProgram.js","Client.js","data/Course.js","SectionInfo.js","CourseCard.js","AddCourseWidget.js","AdvancedSettings.js","Colorset.js","Controls.js","CoursesToDisplay.js","App.js","serviceWorker.js","index.js"],"names":["DayScaleRow","className","React","Component","WeeklyProgram","isMobile","Paper","data","this","props","coursesToDisplay","currentDate","startDayHour","endDayHour","cellDuration","dayScaleRowComponent","Client","coursesUrl","axios","get","courses","Array","Object","keys","map","code","courseToPush","abbreviation","slice","search","name","category","sections","sn","s","sectionToPush","instructor","criteria","minYear","maxYear","lectureTimes","t","push","classroom","day","startHour","parseInt","startMin","endHour","endMin","c","dept","surnameStart","surnameEnd","console","log","getAllCourses","a","client","getCourses","SectionInfo","days","toString","ret","i","sectionDetails","length","times","style","background","color","ternary","formatTime","secondary","sectionNo","Divider","renderCriteria","renderTimes","CourseCard","state","selectedSections","course","fill","sectionCount","onToggle","setState","boxes","FormControlLabel","control","Checkbox","checked","onChange","e","newSelectedSections","handleToggle","label","FormGroup","row","Button","onClick","toggleSections","main","IconButton","size","onDelete","fontSize","Accordion","AccordionSummary","expandIcon","aria-controls","Typography","text","AccordionDetails","renderCheckBoxes","renderSectionDetails","AddCourseWidget","onCourseAdd","FormControl","variant","Select","value","target","inputProps","id","MenuItem","Autocomplete","options","filter","getOptionLabel","option","width","renderInput","params","TextField","v","handleCourseAdd","AdvancedSettings","onSettingsChange","checkSurname","settings","checkDepartment","checkCollision","handleSurnameCheck","handleDepartmentCheck","handleCollisionCheck","Colorset","colors","textSection","iterator","Controls","surname","department","semester","alertMsg","errorDept","errorSemester","selectedCourses","allCourses","scenarios","colorset","document","title","then","body","zoom","n","newSelectedCourses","getNextColor","courseData","currentCourse","getCourseByCode","toggle","Snackbar","open","autoHideDuration","onClose","handleAlertClose","elevation","severity","required","maxLength","error","InputLabel","renderSemesterSelections","FormHelperText","startIcon","handleAddMustCourse","handleScheduleBegin","handleChangeSettings","handleDeleteCourse","handleAddCourse","schedulerData","startDate","endDate","theme","createMuiTheme","palette","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.ef3f8bde.chunk.js","sourcesContent":["import React from \"react\";\nimport {Paper} from \"@material-ui/core\";\nimport {ViewState} from \"@devexpress/dx-react-scheduler\";\nimport {\n    Scheduler,\n    WeekView,\n    Appointments,\n} from '@devexpress/dx-react-scheduler-material-ui';\nimport {isMobile} from \"react-device-detect\";\n\nimport \"./WeeklyProgram.css\"\n\nconst currentDate = '2018-11-01';\n\nclass DayScaleRow extends React.Component{\n    render() {\n        return (\n            <div className={\"dayscale-row\"}>\n                <div className={\"dayscale-label\"}>\n                    Mon\n                </div>\n                <div className={\"dayscale-label\"}>\n                    Tue\n                </div>\n                <div className={\"dayscale-label\"}>\n                    Wed\n                </div>\n                <div className={\"dayscale-label\"}>\n                    Thu\n                </div>\n                <div className={\"dayscale-label\"}>\n                    Fri\n                </div>\n                <div className={\"dayscale-label\"}>\n                    Sat\n                </div>\n                <div className={\"dayscale-label\"}>\n                    Sun\n                </div>\n            </div>\n        )\n    }\n}\n\nexport class WeeklyProgram extends React.Component{\n\n    render() {\n        return (\n            <div className={isMobile ? \"scheduler-mobile\" : \"scheduler-wrapper\"}>\n                <Paper>\n                    <Scheduler\n                        data={this.props.coursesToDisplay}\n                    >\n                        <ViewState\n                            currentDate={currentDate}\n                        />\n                        <WeekView\n                            startDayHour={7.667}\n                            endDayHour={17.5}\n                            cellDuration={60}\n                            dayScaleRowComponent={DayScaleRow}\n                        />\n                        <Appointments/>\n                    </Scheduler>\n                </Paper>\n            </div>\n        );\n    }\n}","import axios from \"axios\";\n\nexport class Client{\n    constructor() {\n        this.coursesUrl = \"https:\\\\robotdegilim.xyz/courses\";\n    }\n    async getCourses(){\n        const data = (await axios.get(this.coursesUrl)).data;\n        const courses = Array(0);\n        // eslint-disable-next-line\n        Object.keys(data).map(code => {\n            const courseToPush = {\n                code: code,\n                abbreviation: data[code][\"Course Name\"].slice(0, data[code][\"Course Name\"].search(\" \")),\n                name: data[code][\"Course Name\"].slice(data[code][\"Course Name\"].search(\"-\")+2),\n                category: 0,\n                sections: Array(0)\n            };\n            const sectionNumbers = Object.keys(data[code][\"Sections\"]);\n            // eslint-disable-next-line\n            sectionNumbers.map(sn => {\n                const s = data[code][\"Sections\"][sn];\n                const sectionToPush = {\n                    instructor: s[\"i\"][0],\n                    criteria: Array(0),\n                    minYear: 0,\n                    maxYear: 0,\n                    lectureTimes: Array(0)\n                };\n                // eslint-disable-next-line\n                s[\"t\"].map(t => {\n                    sectionToPush.lectureTimes.push({\n                        classroom: t[\"p\"],\n                        day: t[\"d\"],\n                        startHour: parseInt(t[\"s\"].slice(0, t[\"s\"].search(\":\"))),\n                        startMin: parseInt(t[\"s\"].slice(t[\"s\"].search(\":\")+1)),\n                        endHour: parseInt(t[\"e\"].slice(0, t[\"e\"].search(\":\"))),\n                        endMin: parseInt(t[\"e\"].slice(t[\"e\"].search(\":\")+1)),\n                    });\n                });\n                // eslint-disable-next-line\n                s[\"c\"].map(c => {\n                    sectionToPush.criteria.push({\n                        dept: c[\"d\"],\n                        surnameStart: c[\"s\"],\n                        surnameEnd: c[\"e\"]\n                    });\n                });\n                courseToPush.sections.push(sectionToPush);\n            });\n            console.log(courseToPush);\n            console.log(data[code]);\n            courses.push(courseToPush);\n        });\n        return courses;\n    }\n}","import {Client} from \"../Client\";\n// eslint-disable-next-line\nconst exampleCourses = [\n    {\n        code: 5710213,\n        abbreviation: \"CENG213\",\n        name: \"Data Structures\",\n        category: 0,\n        sections: [\n            {\n                instructor: \"Yusuf Sahillioğlu\",\n                criteria: [\n                    {\n                        dept: \"CENG\",\n                        surnameStart: \"AA\",\n                        surnameEnd: \"FF\"\n                    },\n                    {\n                        dept: \"EE\",\n                        surnameStart: \"AA\",\n                        surnameEnd: \"ZZ\"\n                    }\n                ],\n                minYear: 0,\n                maxYear: 0,\n                lectureTimes: [\n                    {\n                        classroom: \"BMB-1\",\n                        day: 0,\n                        startHour: 8,\n                        startMin: 40,\n                        endHour: 10,\n                        endMin: 30\n                    },\n                    {\n                        classroom: \"BMB-4\",\n                        day: 2,\n                        startHour: 15,\n                        startMin: 40,\n                        endHour: 17,\n                        endMin: 30\n                    }\n                ]\n            },\n            {\n                instructor: \"Cevat Şener\",\n                criteria: [\n                    {\n                        dept: \"CENG\",\n                        surnameStart: \"FG\",\n                        surnameEnd: \"ZZ\"\n                    },\n                    {\n                        dept: \"ME\",\n                        surnameStart: \"AA\",\n                        surnameEnd: \"ZZ\"\n                    }\n                ],\n                minYear: 0,\n                maxYear: 0,\n                lectureTimes: [\n                    {\n                        classroom: \"U-3\",\n                        day: 2,\n                        startHour: 10,\n                        startMin: 40,\n                        endHour: 12,\n                        endMin: 30\n                    },\n                    {\n                        classroom: \"CZ-14\",\n                        day: 6,\n                        startHour: 15,\n                        startMin: 40,\n                        endHour: 17,\n                        endMin: 30\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        code: 5710140,\n        abbreviation: \"CENG140\",\n        name: \"C Programming\",\n        category: 1,\n        sections: [\n            {\n                instructor: \"Göktürk Üçoluk\",\n                criteria: [\n                    {\n                        dept: \"CENG\",\n                        surnameStart: \"AA\",\n                        surnameEnd: \"ZZ\"\n                    }\n                ],\n                minYear: 0,\n                maxYear: 0,\n                lectureTimes: [\n                    {\n                        classroom: \"BMB-1\",\n                        day: 0,\n                        startHour: 8,\n                        startMin: 40,\n                        endHour: 10,\n                        endMin: 30\n                    },\n                    {\n                        classroom: \"BMB-5\",\n                        day: 2,\n                        startHour: 15,\n                        startMin: 40,\n                        endHour: 17,\n                        endMin: 30\n                    }\n                ]\n            }\n        ]\n    }\n]\n\nexport async function getAllCourses(){\n    const client = new Client();\n    return await client.getCourses();\n}\nexport function getCourseByCategory(category){\n    if (category < 0){\n        return getAllCourses();\n    }\n    return getAllCourses().filter(c => c.category === category);\n}\nexport function filterCourses(courses, category){\n    if (category < 0){\n        return courses;\n    }\n    return courses.filter(c => c.category === category);\n}","import React from \"react\";\nimport {Divider} from \"@material-ui/core\";\n\nimport \"./SectionInfo.css\"\n\nexport class SectionInfo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.days = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n    }\n    formatTime(t){\n        return t > 9 ? t.toString() : \"0\" + t.toString();\n    }\n    getDepartmentCriteria(){\n        let ret = \"\";\n        for (let i = 0; i<this.props.sectionDetails.dept.length; i++){\n            ret += this.props.sectionDetails.dept[i] + \" \";\n        }\n        return ret;\n    }\n    renderTimes(){\n        const times = Array(0);\n        // eslint-disable-next-line\n        this.props.sectionDetails.lectureTimes.map(t => {\n            times.push(\n                <div className={\"section-date\"} style={{background: this.props.color.ternary}}>\n                    <div className={\"time-row\"}>\n                        {this.days[t.day] + \" \" + t.startHour + \".\" + this.formatTime(t.startMin) + \"-\" +\n                            t.endHour + \".\" + this.formatTime(t.endMin)\n                        }\n                    </div>\n                    <div className={\"time-row\"}>\n                        {\"Classroom: \" + t.classroom}\n                    </div>\n                </div>);\n        });\n        return times;\n    }\n    renderCriteria(c){\n        return (\n            <div className={\"section-row\"}>\n                {\"Department: \" + c.dept + \" Surname: \" + c.surnameStart + \"-\" + c.surnameEnd}\n            </div>\n        )\n    }\n    render() {\n        return (\n            <div className={\"section-info\"} style={{background: this.props.color.secondary}}>\n                <div>\n                    {\"Section \" + this.props.sectionNo}\n                </div>\n                <Divider />\n                <div className={\"section-row\"}>\n                    {\"Instructor: \" + this.props.sectionDetails.instructor}\n                </div>\n                {this.props.sectionDetails.criteria.map(c => this.renderCriteria(c))}\n                <div className={\"section-row\"}>\n                    {this.renderTimes()}\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport {\n    Accordion,\n    AccordionDetails,\n    AccordionSummary,\n    Typography,\n    FormGroup,\n    FormControlLabel,\n    Checkbox,\n    Divider,\n    Button,\n    IconButton\n} from \"@material-ui/core\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport {SectionInfo} from \"./SectionInfo\";\n\nimport \"./CourseCard.css\"\n\nexport class CourseCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedSections: Array(props.course.sections.length).fill(true),\n            sectionCount: props.course.sections.length\n        }\n    }\n\n    handleToggle(sections){\n        this.props.onToggle(sections);\n    }\n\n    toggleSections(){\n        this.setState({selectedSections: Array(this.state.sectionCount).fill(!this.state.selectedSections[0])});\n    }\n\n    renderCheckBoxes() {\n        if (this.state.sectionCount <= 0){\n            return null;\n        }\n        const boxes = Array(0);\n        for (let i = 0; i < this.state.sectionCount; i++){\n            boxes.push(\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            checked={this.state.selectedSections[i]}\n                            onChange={e => {\n                                    const newSelectedSections = this.state.selectedSections.slice(0);\n                                    newSelectedSections[i] = !newSelectedSections[i];\n                                    this.setState({selectedSections: newSelectedSections});\n                                    this.handleToggle(newSelectedSections);\n                                }\n                            }\n                            color={\"primary\"}\n                        />\n                    }\n                    label={i+1}\n                />);\n        }\n        return (\n            <FormGroup row>\n                {boxes}\n                <Button\n                    color={\"primary\"}\n                    onClick={() => this.toggleSections()}\n                >\n                    Toggle\n                </Button>\n            </FormGroup>\n        )\n    }\n\n    renderSectionDetails(){\n        const ret = Array(0);\n        for (let i = 0; i<this.props.course.sections.length; i++){\n            ret.push(<SectionInfo\n                sectionNo={i+1}\n                sectionDetails={this.props.course.sections[i]}\n                color={this.props.color}\n            />);\n        }\n        return ret;\n    }\n\n    render() {\n        return (\n            <div className={\"course-card\"} style={{background: this.props.color.main}}>\n                <div className={\"course-row\"}>\n                    <IconButton size={\"small\"} onClick={() => this.props.onDelete()}>\n                        <DeleteIcon fontSize={\"inherit\"}/>\n                    </IconButton>\n                    <Accordion style={{background: this.props.color.main}}>\n                        <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls={\"panel1a-content\"}>\n                            <Typography style={{color: this.props.color.text}}>\n                                {this.props.course.abbreviation + \": \" + this.props.course.name}\n                            </Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <div className={\"course-details\"}>\n                                <Divider />\n                                <div className={\"course-centered-row\"}>\n                                    <div>\n                                        Sections\n                                    </div>\n                                </div>\n                                <Divider />\n                                <div className={\"course-row\"}>\n                                    {this.renderCheckBoxes()}\n                                </div>\n                                <Divider />\n                                {this.renderSectionDetails()}\n                            </div>\n                        </AccordionDetails>\n                    </Accordion>\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport {TextField, IconButton, FormControl, Select, MenuItem} from \"@material-ui/core\";\nimport {Autocomplete} from \"@material-ui/lab\";\nimport AddBoxIcon from '@material-ui/icons/AddBox';\n\nimport {filterCourses} from \"./data/Course\";\n\nimport \"./AddCourseWidget.css\"\n\nexport class AddCourseWidget extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            course: null,\n            category: -1,\n        }\n    }\n    handleCourseAdd(){\n        this.props.onCourseAdd(this.state.course);\n        this.setState({course: null, category: -1});\n    }\n    render() {\n        return (\n            <div className={\"add-course-wrapper\"}>\n                <div className={\"add-course-row\"}>\n                    <FormControl className={\"category-form\"} variant={\"outlined\"}>\n                        <Select\n                            className={\"category-select\"}\n                            value={this.state.category}\n                            onChange={e => this.setState({category: e.target.value, course: null})}\n                            inputProps={{id: \"category-select\"}}\n                        >\n                            <MenuItem value={-1}>All courses</MenuItem>\n                            <MenuItem value={0}>Must</MenuItem>\n                            <MenuItem value={1}>Technical</MenuItem>\n                            <MenuItem value={2}>Restricted</MenuItem>\n                            <MenuItem value={3}>Non-Tech</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <Autocomplete\n                        className={\"add-course-name\"}\n                        options={filterCourses(this.props.courses, this.state.category)}\n                        getOptionLabel={(option => option.abbreviation + \": \" + option.name)}\n                        style={{width: \"60%\"}}\n                        value={this.state.course}\n                        renderInput={(params => <TextField {...params} label={\"Course name\"} variant={\"outlined\"}/>)}\n                        onChange={(e, v) =>\n                            this.setState({course: v})}\n                    />\n                    {this.state.course !== null ? <IconButton onClick={() => this.handleCourseAdd()} >\n                        <AddBoxIcon fontSize={\"large\"} color={\"primary\"} />\n                    </IconButton> : null}\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport {\n    Accordion,\n    AccordionSummary,\n    AccordionDetails,\n    Typography,\n    FormControlLabel,\n    Checkbox,\n    Divider\n} from \"@material-ui/core\";\n\nimport \"./AdvancedSettings.css\"\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport TuneIcon from '@material-ui/icons/Tune';\n\nexport class AdvancedSettings extends React.Component {\n\n    handleSurnameCheck(){\n        this.props.onSettingsChange({\n            checkSurname: !this.props.settings.checkSurname,\n            checkDepartment: this.props.settings.checkDepartment,\n            checkCollision: this.props.settings.checkCollision\n        });\n    }\n    handleDepartmentCheck(){\n        this.props.onSettingsChange({\n            checkSurname: this.props.settings.checkSurname,\n            checkDepartment: !this.props.settings.checkDepartment,\n            checkCollision: this.props.settings.checkCollision\n        });\n    }\n    handleCollisionCheck(){\n        this.props.onSettingsChange({\n            checkSurname: this.props.settings.checkSurname,\n            checkDepartment: this.props.settings.checkDepartment,\n            checkCollision: !this.props.settings.checkCollision\n        });\n    }\n\n    render() {\n        return (\n            <div className={\"settings-wrapper\"}>\n                <Accordion style={{background: \"aliceblue\"}}>\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls={\"panel1a-content\"}>\n                        <div className={\"settings-row\"}>\n                            <TuneIcon color={\"primary\"} fontSize={\"large\"} />\n                            <div className={\"settings-typo\"}>\n                                <Typography>Advanced Settings</Typography>\n                            </div>\n                        </div>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                        <div className={\"settings-accordion\"}>\n                            <Divider />\n                            <div className={\"settings-row\"}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={this.props.settings.checkSurname}\n                                            onChange={() => this.handleSurnameCheck()}\n                                            color={\"primary\"}\n                                        />}\n                                    label={\"Check surname\"}/>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={this.props.settings.checkDepartment}\n                                            onChange={() => this.handleDepartmentCheck()}\n                                            color={\"primary\"}\n                                        />}\n                                    label={\"Check department\"}/>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={this.props.settings.checkCollision}\n                                            onChange={() => this.handleCollisionCheck()}\n                                            color={\"primary\"}\n                                        />}\n                                    label={\"Check collision\"}/>\n                            </div>\n                        </div>\n                    </AccordionDetails>\n                </Accordion>\n            </div>\n        )\n    }\n}","export class Colorset{\n    constructor() {\n        this.colors = [\n            {\n                main: \"#33CDE8\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#C3F6FF\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n            {\n                main: \"#E293FA\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#F7DCFF\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n            {\n                main: \"#FFF040\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#F7F3C2\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n            {\n                main: \"#71F154\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#DDF7D7\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n            {\n                main: \"#E82A2A\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#FFA9A9\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n            {\n                main: \"#F1951F\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#FFD39A\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n            {\n                main: \"#B59FF7\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#E9E2FE\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n            {\n                main: \"#8D969A\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#CAD2D5\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n        ]\n        this.iterator = -1;\n    }\n    getNextColor(){\n        if (this.colors.length <= 0){\n            return {main: 0, secondary: 0, ternary: 0};\n        }\n        this.iterator = (this.iterator+1)%this.colors.length;\n        return this.colors[this.iterator];\n    }\n}","import React from \"react\";\nimport {\n    TextField,\n    Select,\n    Button,\n    FormControl,\n    FormHelperText,\n    MenuItem,\n    InputLabel,\n    Snackbar,\n    Divider\n} from \"@material-ui/core\";\nimport MuiAlert from '@material-ui/lab/Alert';\nimport AddIcon from '@material-ui/icons/Add';\nimport EventAvailableIcon from '@material-ui/icons/EventAvailable';\nimport {isMobile} from \"react-device-detect\";\n\nimport {getAllCourses} from \"./data/Course\";\nimport {CourseCard} from \"./CourseCard\";\nimport {AddCourseWidget} from \"./AddCourseWidget\";\nimport {AdvancedSettings} from \"./AdvancedSettings\";\nimport {Colorset} from \"./Colorset\";\n\nimport \"./Controls.css\"\n\nexport class Controls extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            surname: \"\",\n            department: \"\",\n            semester: 0,\n            alertMsg: \"\",\n            errorDept: false,\n            errorSemester: false,\n            selectedCourses: [],\n            allCourses: [],\n            settings: {\n                checkSurname: true,\n                checkDepartment: true,\n                checkCollision: true\n            },\n            scenarios: [],\n            colorset: new Colorset()\n        }\n    }\n    componentDidMount() {\n        document.title = \"Robot Değilim *-*\";\n        getAllCourses().then(data => this.setState({allCourses: data}));\n        if (isMobile){\n            document.body.style.zoom = \"60%\";\n        }\n    }\n\n    getCourseByCode(code){\n        for (let i = 0; i<this.state.allCourses.length; i++){\n            if (this.state.allCourses[i].code === code){\n                return this.state.allCourses[i];\n            }\n        }\n        return null;\n    }\n\n    renderSemesterSelections(n){\n        const ret = Array(0);\n        ret.push(<MenuItem value={0}>---</MenuItem> )\n        for (let i = 0; i<n; i++){\n            ret.push(<MenuItem value={i+1}>{i+1}</MenuItem> );\n        }\n        return ret;\n    }\n\n    handleAddMustCourse(){\n        this.setState({alertMsg: \"\", errorDept: false, errorSemester: false});\n        if (this.state.department.length < 2){\n            this.setState({alertMsg: \"Please enter a correct department\", errorDept: true});\n            return;\n        }\n        if (this.state.semester < 1){\n            this.setState({alertMsg: \"Please choose a semester\", errorSemester: true});\n            return;\n        }\n    }\n\n    handleAlertClose(){\n        this.setState({alertMsg: \"\"});\n    }\n    handleDeleteCourse(i){\n        const newSelectedCourses = this.state.selectedCourses.slice(0);\n        newSelectedCourses[i] = null;\n        this.setState({selectedCourses: newSelectedCourses});\n    }\n    handleToggle(i, sections){\n        const newSelectedCourses = this.state.selectedCourses.slice(0);\n        newSelectedCourses[i].sections = sections;\n        this.setState({selectedCourses: newSelectedCourses});\n        console.log(\"Course \" + i + \" sections:\" + sections);\n    }\n    handleAddCourse(c){\n        const newSelectedCourses = this.state.selectedCourses.slice(0);\n        newSelectedCourses.push({\n            code: c.code,\n            sections: Array(c.sections.length).fill(true),\n            color: this.state.colorset.getNextColor()\n        });\n        this.setState({selectedCourses: newSelectedCourses});\n    }\n    handleChangeSettings(s){\n        this.setState({settings: s});\n    }\n    handleScheduleBegin(){\n        const courseData = Array(0);\n        // eslint-disable-next-line\n        this.state.selectedCourses.map(c => {\n            if (c === null){\n                return null;\n            }\n            const currentCourse = this.getCourseByCode(c.code);\n            const courseToPush = {\n                code: c.code,\n                category: currentCourse.category,\n                checkSurname: this.state.settings.checkSurname,\n                checkCollision: this.state.settings.checkCollision,\n                checkDepartment: this.state.settings.checkDepartment,\n                sections: Array(0)\n            };\n            for(let i = 0; i<currentCourse.sections.length; i++){\n                const sectionToPush = {\n                    minYear: currentCourse.sections[i].minYear,\n                    maxYear: currentCourse.sections[i].maxYear,\n                    toggle: c.sections[i],\n                    dept: currentCourse.sections[i].dept,\n                    surnameStart: currentCourse.sections[i].surnameStart,\n                    surnameEnd: currentCourse.sections[i].surnameEnd,\n                    lectureTimes: Array(0)\n                };\n                currentCourse.sections[i].lectureTimes.map(t => sectionToPush.lectureTimes.push(t));\n                courseToPush.sections.push(sectionToPush);\n            }\n            courseData.push(courseToPush);\n        });\n        console.log(courseData);\n    }\n    render() {\n        return (\n            <div className={isMobile ? \"control-mobile\" : \"control-wrapper\"}>\n                <Snackbar\n                    open={this.state.alertMsg !== \"\"}\n                    autoHideDuration={5000}\n                    onClose={() => this.handleAlertClose()}\n                >\n                    <MuiAlert elevation={6} variant={\"filled\"} onClose={() => this.handleAlertClose()} severity={\"error\"}>\n                        {this.state.alertMsg}\n                    </MuiAlert>\n                </Snackbar>\n                <div className={\"control-row\"}>\n                    <div className={\"textfield-wrapper\"}>\n                        <TextField\n                            required\n                            label={\"Surname\"}\n                            value={this.state.surname}\n                            inputProps={{ maxLength: 12 }}\n                            variant={\"outlined\"}\n                            onChange={e => this.setState({surname: e.target.value})}\n                        />\n                    </div>\n                    <div className={\"textfield-wrapper\"}>\n                        <TextField\n                            required\n                            error={this.state.errorDept}\n                            label={\"Department\"}\n                            value={this.state.department}\n                            inputProps={{ maxLength: 12 }}\n                            variant={\"outlined\"}\n                            onChange={e => this.setState({department: e.target.value})}\n                        />\n                    </div>\n                </div>\n                <div className={\"control-row\"}>\n                    <div className={\"textfield-wrapper\"}>\n                        <FormControl className={\"form-control\"}>\n                            <InputLabel>Semester</InputLabel>\n                            <Select\n                                error={this.state.errorSemester}\n                                value={this.state.semester}\n                                onChange={e => this.setState({semester: e.target.value})}\n                            >\n                                {this.renderSemesterSelections(8)}\n                            </Select>\n                            <FormHelperText>Ex: 2nd year Fall semester -> 3</FormHelperText>\n                        </FormControl>\n                    </div>\n                    <div className={\"control-button\"}>\n                        <Button\n                            variant={\"contained\"}\n                            color={\"secondary\"}\n                            startIcon={<AddIcon />}\n                            onClick={() => this.handleAddMustCourse()}>\n                            Add Must Courses\n                        </Button>\n                    </div>\n                    <div className={\"control-button\"}>\n                        <Button\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                            startIcon={<EventAvailableIcon />}\n                            onClick={() => this.handleScheduleBegin()}>\n                            Schedule\n                        </Button>\n                    </div>\n                </div>\n                <AdvancedSettings settings={this.state.settings} onSettingsChange={s => this.handleChangeSettings(s)}/>\n                <Divider />\n                <div className={\"control-row\"}>\n                    <div className={\"centered-row\"}>\n                        Added Courses\n                    </div>\n                </div>\n                <Divider />\n                {this.state.selectedCourses.map((c, i) => {\n                    return (\n                        c !== null?\n                        <CourseCard course={this.getCourseByCode(c.code)}\n                                    onDelete={() => this.handleDeleteCourse(i)}\n                                    onToggle={sections => this.handleToggle(i, sections)}\n                                    color={c.color}/> : null\n                    );\n                })}\n                <AddCourseWidget\n                    courses={this.state.allCourses}\n                    onCourseAdd={c => this.handleAddCourse(c)}/>\n            </div>\n        )\n    }\n}","const schedulerData = [\n    { startDate: '2018-11-01T09:40', endDate: '2018-11-01T11:30', title: 'Meeting' },\n    { startDate: '2018-11-01T12:00', endDate: '2018-11-01T13:30', title: 'Go to a gym' },\n    { startDate: '2018-11-02T09:40', endDate: '2018-11-02T11:30', title: 'Meeting' },\n];\n\nexport function getCoursesToDisplay(){\n    return schedulerData;\n}","import React from 'react';\nimport {isMobile} from \"react-device-detect\";\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport {WeeklyProgram} from \"./WeeklyProgram\";\nimport {Controls} from \"./Controls\";\nimport {getCoursesToDisplay} from \"./CoursesToDisplay\";\n\nimport './App.css';\n\nconst theme = createMuiTheme({\n    palette: {\n        secondary: {\n            main: '#71F154'\n        }\n    }\n});\n\nfunction App() {\n  return (\n      <MuiThemeProvider theme={theme}>\n        <div className=\"App\">\n            <div className={isMobile ? \"column\" : \"row\"}>\n                <WeeklyProgram coursesToDisplay={getCoursesToDisplay()}/>\n                <Controls />\n            </div>\n        </div>\n      </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}