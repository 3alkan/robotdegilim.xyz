{"version":3,"sources":["WeeklyProgram.js","Client.js","data/Course.js","schedule.js","SectionInfo.js","CourseCard.js","AddCourseWidget.js","AdvancedSettings.js","Colorset.js","Controls.js","WelcomeDialog.js","App.js","serviceWorker.js","index.js"],"names":["DayScaleRow","className","React","Component","WeeklyProgram","props","AppointmentContent","data","restProps","style","background","color","main","type","text","title","section","classroom","IconButton","onClick","onDontFillDelete","startDate","fontSize","TimeTableCell","endDate","onDontFillAdd","handleDontFillAdd","state","currentScenario","delta","this","setState","Math","min","scenarios","length","max","val","newCurrentScenario","isNaN","day","hour","coursesToDisplay","Array","map","c","lectureTimes","lt","i","startHour","endHour","push","abbreviation","sectionNumber","undefined","convertTime","startMin","endMin","dontFills","df","formatDate","AppointmentLayer","_","convertToEntry","isMobile","Paper","currentDate","startDayHour","endDayHour","cellDuration","dayScaleRowComponent","appointmentLayerComponent","CustomAppointment","timeTableCellComponent","appointmentContentComponent","handleScenarioChange","Typography","TextField","value","onChange","e","handleScenarioChangeAbsolute","parseInt","target","Client","coursesUrl","mustUrl","dept","semester","url","axios","get","courses","Object","keys","code","courseToPush","slice","search","name","category","sections","sn","s","sectionToPush","instructor","criteria","minYear","maxYear","t","surnameStart","surnameEnd","getAllCourses","a","client","getCourses","getMusts","surnameCheck","surname","course_surname_start","course_surname_end","alphabet","A","B","C","Ç","D","E","F","G","Ğ","H","I","İ","J","K","L","M","N","O","Ö","P","Q","R","S","Ş","T","U","Ü","V","W","X","Y","Z","surFirstVal","surSecondVal","surStartFirstVal","surStartSecondVal","surEndFirstVal","surEndSecondVal","apply_criteria_sections","department","grade","course","section_passed","toggle","j","criterion","dept_passed","surn_passed","checkDepartment","checkSurname","splice","lectures_intersect","lt1","lt2","check_collision","section1","section2","s1_lt","s2_lt","check_collision_df","df_t","times","compute_schedule","courseNumber","console","log","apply_criteria_courses","recursive_computation","depth","scenario","scenarioToPosh","collision","checkCollision","pop","SectionInfo","days","toString","ret","sectionDetails","ternary","formatTime","secondary","Divider","renderCriteria","renderTimes","CourseCard","selectedSections","fill","sectionCount","onToggle","newSelectedSections","handleToggle","boxes","FormControlLabel","control","Checkbox","checked","label","FormGroup","row","Button","toggleSections","sectionNo","size","onDelete","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","renderCheckBoxes","renderSectionDetails","AddCourseWidget","onCourseAdd","FormControl","variant","Select","inputProps","id","MenuItem","Autocomplete","options","filter","getOptionLabel","option","width","renderInput","params","v","handleCourseAdd","AdvancedSettings","onSettingsChange","settings","handleSurnameCheck","handleDepartmentCheck","handleCollisionCheck","Colorset","colors","textSection","iterator","Controls","alertMsg","errorDept","errorSemester","errorSurname","selectedCourses","allCourses","colorset","document","then","body","zoom","n","handleAddCourse","getCourseByCode","catch","newSelectedCourses","getNextColor","scenariosToSubmit","scenarioToPush","currentCourse","currentSection","getSectionByNumber","currentColor","getColorByCourseCode","onSchedule","getDay","getHours","getMinutes","courseData","formattedDf","formatDf","calculatedSchedule","handleScheduleComplete","Snackbar","open","autoHideDuration","onClose","handleAlertClose","elevation","severity","required","error","maxLength","toUpperCase","InputLabel","renderSemesterSelections","FormHelperText","startIcon","handleAddMustCourse","handleScheduleBegin","handleChangeSettings","handleDeleteCourse","WelcomeDialog","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","theme","createMuiTheme","palette","App","newDontFills","handleDontFillDelete","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.29b4394e.chunk.js","sourcesContent":["import React from \"react\";\nimport {Paper, IconButton, Typography, TextField} from \"@material-ui/core\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport FastRewindIcon from '@material-ui/icons/FastRewind';\nimport FastForwardIcon from '@material-ui/icons/FastForward';\nimport {ViewState} from \"@devexpress/dx-react-scheduler\";\nimport {\n    Scheduler,\n    WeekView,\n    Appointments,\n} from '@devexpress/dx-react-scheduler-material-ui';\nimport {isMobile} from \"react-device-detect\";\n\nimport \"./WeeklyProgram.css\"\n\nconst currentDate = '2021-02-20';\n\n\n\nclass DayScaleRow extends React.Component{\n    render() {\n        return (\n            <div className={\"dayscale-row\"}>\n                <div className={\"dayscale-label\"}>\n                    Mon\n                </div>\n                <div className={\"dayscale-label\"}>\n                    Tue\n                </div>\n                <div className={\"dayscale-label\"}>\n                    Wed\n                </div>\n                <div className={\"dayscale-label\"}>\n                    Thu\n                </div>\n                <div className={\"dayscale-label\"}>\n                    Fri\n                </div>\n                <div className={\"dayscale-label\"}>\n                    Sat\n                </div>\n                <div className={\"dayscale-label\"}>\n                    Sun\n                </div>\n            </div>\n        )\n    }\n}\n\nexport class WeeklyProgram extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentScenario: 0\n        };\n    }\n\n    handleScenarioChange(delta){\n        this.setState({\n            currentScenario: Math.min(this.props.scenarios.length-1, Math.max(0,\n                this.state.currentScenario + delta))});\n    }\n    handleScenarioChangeAbsolute(val){\n        const newCurrentScenario = isNaN(val) ? 1 : val;\n        this.setState({currentScenario: Math.min(this.props.scenarios.length-1, Math.max(0,\n                newCurrentScenario-1))});\n    }\n    handleDontFillAdd(startDate, endDate){\n        this.props.onDontFillAdd(startDate, endDate);\n    }\n    convertTime(day, hour, min){\n        //example : '2021-02-20T09:40'\n        return \"2021-02-\" + (14 + day) + \"T\" + (hour < 10 ? \"0\" : \"\") + hour + \":\" + (min < 10 ? \"0\" : \"\") + min;\n    }\n    convertToEntry(){\n        /*if (this.props.scenarios.length <= 0){\n            return [];\n        }*/\n        const coursesToDisplay = Array(0);\n        const scenario = this.props.scenarios.length > 0 ? this.props.scenarios[this.state.currentScenario] : [];\n        scenario.map(c => {\n            //console.log(c);\n            c.section.lectureTimes.map(lt => {\n                for(let i = lt.startHour; i<lt.endHour; i++){\n                    coursesToDisplay.push({\n                        type: \"course\",\n                        title: c.abbreviation,\n                        section: c.section.sectionNumber,\n                        classroom: lt.classroom !== undefined ? lt.classroom : \"-\",\n                        startDate: this.convertTime(lt.day, i, lt.startMin),\n                        endDate: this.convertTime(lt.day, i+1, lt.endMin),\n                        color: c.color\n                    })\n                }\n            });\n        });\n        this.props.dontFills.map(df => {\n            coursesToDisplay.push({\n                type: \"dontFill\",\n                title: \"FULL\",\n                color: {\n                    main: \"#000000\",\n                    text: \"#FFFFFF\"\n                },\n                startDate: df.startDate,\n                endDate: df.endDate\n            });\n        });\n        return coursesToDisplay;\n    }\n    CustomAppointment({formatDate, ...restProps}){\n        return (\n            <WeekView.AppointmentLayer {...restProps} formatDate={(_) => \"\"} className={\"custom-appointment\"} />\n        )\n    }\n    AppointmentContent = ({data, ...restProps}) => {\n        return (\n            <Appointments.AppointmentContent data={data}\n                                             {...restProps}\n                                             className={\"program-appointment\"} style={{background: data.color.main}}>\n                {data.type === \"course\"?\n                    <div className={\"program-text-container\"}>\n                        <div className={\"program-title\"} style={{color: data.color.text}}>\n                            {data.title + \"/\" + data.section}\n                        </div>\n                        <div className={\"program-title\"} style={{color: data.color.text}}>\n                            {data.classroom}\n                        </div>\n                    </div> :\n                    <div className={\"program-text-container\"}>\n                        <div className={\"program-row\"}>\n                            <IconButton\n                                        onClick={() => this.props.onDontFillDelete(data.startDate)}>\n                                <CloseIcon className={\"dont-fill-button\"} fontSize={\"small\"} color={\"secondary\"}/>\n                            </IconButton>\n                            <div className={\"program-title-dont-fill\"} style={{color: data.color.text}}>\n                                {data.title}\n                            </div>\n                        </div>\n                    </div>}\n            </Appointments.AppointmentContent>\n        )\n    }\n    TimeTableCell = ({startDate, endDate, onDontFillAdd, ...restProps}) => {\n        return (\n            <WeekView.TimeTableCell\n                                    {...restProps}\n                                    onClick={() => this.handleDontFillAdd(startDate, endDate)}/>\n        )\n    }\n    render() {\n        const data = this.convertToEntry();\n        //console.log(data);\n        return (\n            <div className={isMobile ? \"scheduler-mobile\" : \"scheduler-wrapper\"}>\n                <Paper>\n                    <Scheduler\n                        data={data}\n                    >\n                        <ViewState\n                            currentDate={currentDate}\n                        />\n                        <WeekView\n                            startDayHour={7.667}\n                            endDayHour={17.5}\n                            cellDuration={60}\n                            dayScaleRowComponent={DayScaleRow}\n                            appointmentLayerComponent={this.CustomAppointment}\n                            timeTableCellComponent={this.TimeTableCell}\n                        />\n                        <Appointments appointmentContentComponent={this.AppointmentContent}/>\n                    </Scheduler>\n                </Paper>\n                {this.props.scenarios.length > 0?\n                <div className={\"program-row\"}>\n                    <IconButton onClick={() => this.handleScenarioChange(-10)}>\n                        <FastRewindIcon fontSize={\"small\"} />\n                    </IconButton>\n                    <IconButton onClick={() => this.handleScenarioChange(-1)}>\n                        <KeyboardArrowLeftIcon fontSize={\"small\"} />\n                    </IconButton>\n                    <div className={\"program-typo-wrapper\"}>\n                        <Typography>\n                            {\"Scenario \"}\n                        </Typography>\n                    </div>\n                    <div className={\"program-textfield-wrapper\"}>\n                        <TextField className={\"program-textfield\"}\n                                   type={\"number\"}\n                                   value={this.state.currentScenario+1}\n                                   onChange={e => this.handleScenarioChangeAbsolute(parseInt(e.target.value))}/>\n                    </div>\n                    <div className={\"program-typo-wrapper\"}>\n                        <Typography>\n                            {\" of \" + this.props.scenarios.length}\n                        </Typography>\n                    </div>\n                    <IconButton onClick={() => this.handleScenarioChange(1)}>\n                        <KeyboardArrowRightIcon fontSize={\"small\"} />\n                    </IconButton>\n                    <IconButton onClick={() => this.handleScenarioChange(10)}>\n                        <FastForwardIcon fontSize={\"small\"} />\n                    </IconButton>\n                </div> : null}\n            </div>\n        );\n    }\n}","import axios from \"axios\";\n\nexport class Client{\n    constructor() {\n        this.coursesUrl = \"https:\\\\robotdegilim.xyz/courses\";\n        this.mustUrl = \"https:\\\\robotdegilim.xyz/musts?\";\n    }\n    async getMusts(dept, semester){\n        const url = this.mustUrl + \"dept=\"+dept+\"&sem=\"+semester;\n        return (await axios.get(url)).data;\n    }\n    async getCourses(){\n        const data = (await axios.get(this.coursesUrl)).data;\n        const courses = Array(0);\n        // eslint-disable-next-line\n        Object.keys(data).map(code => {\n            const courseToPush = {\n                code: code,\n                abbreviation: data[code][\"Course Name\"].slice(0, data[code][\"Course Name\"].search(\" \")),\n                name: data[code][\"Course Name\"].slice(data[code][\"Course Name\"].search(\"-\")+2),\n                category: 0,\n                sections: Array(0)\n            };\n            const sectionNumbers = Object.keys(data[code][\"Sections\"]);\n            // eslint-disable-next-line\n            sectionNumbers.map(sn => {\n                const s = data[code][\"Sections\"][sn];\n                const sectionToPush = {\n                    instructor: s[\"i\"][0],\n                    sectionNumber: sn,\n                    criteria: Array(0),\n                    minYear: 0,\n                    maxYear: 0,\n                    lectureTimes: Array(0)\n                };\n                // eslint-disable-next-line\n                s[\"t\"].map(t => {\n                    sectionToPush.lectureTimes.push({\n                        classroom: t[\"p\"],\n                        day: t[\"d\"],\n                        startHour: parseInt(t[\"s\"].slice(0, t[\"s\"].search(\":\"))),\n                        startMin: parseInt(t[\"s\"].slice(t[\"s\"].search(\":\")+1)),\n                        endHour: parseInt(t[\"e\"].slice(0, t[\"e\"].search(\":\"))),\n                        endMin: parseInt(t[\"e\"].slice(t[\"e\"].search(\":\")+1)),\n                    });\n                });\n                // eslint-disable-next-line\n                s[\"c\"].map(c => {\n                    sectionToPush.criteria.push({\n                        dept: c[\"d\"],\n                        surnameStart: c[\"s\"],\n                        surnameEnd: c[\"e\"]\n                    });\n                });\n                courseToPush.sections.push(sectionToPush);\n            });\n            //console.log(courseToPush);\n            //console.log(data[code]);\n            courses.push(courseToPush);\n        });\n        return courses;\n    }\n}","import {Client} from \"../Client\";\n// eslint-disable-next-line\nconst exampleCourses = [\n    {\n        code: 5710213,\n        abbreviation: \"CENG213\",\n        name: \"Data Structures\",\n        category: 0,\n        sections: [\n            {\n                instructor: \"Yusuf Sahillioğlu\",\n                criteria: [\n                    {\n                        dept: \"CENG\",\n                        surnameStart: \"AA\",\n                        surnameEnd: \"FF\"\n                    },\n                    {\n                        dept: \"EE\",\n                        surnameStart: \"AA\",\n                        surnameEnd: \"ZZ\"\n                    }\n                ],\n                minYear: 0,\n                maxYear: 0,\n                lectureTimes: [\n                    {\n                        classroom: \"BMB-1\",\n                        day: 0,\n                        startHour: 8,\n                        startMin: 40,\n                        endHour: 10,\n                        endMin: 30\n                    },\n                    {\n                        classroom: \"BMB-4\",\n                        day: 2,\n                        startHour: 15,\n                        startMin: 40,\n                        endHour: 17,\n                        endMin: 30\n                    }\n                ]\n            },\n            {\n                instructor: \"Cevat Şener\",\n                criteria: [\n                    {\n                        dept: \"CENG\",\n                        surnameStart: \"FG\",\n                        surnameEnd: \"ZZ\"\n                    },\n                    {\n                        dept: \"ME\",\n                        surnameStart: \"AA\",\n                        surnameEnd: \"ZZ\"\n                    }\n                ],\n                minYear: 0,\n                maxYear: 0,\n                lectureTimes: [\n                    {\n                        classroom: \"U-3\",\n                        day: 2,\n                        startHour: 10,\n                        startMin: 40,\n                        endHour: 12,\n                        endMin: 30\n                    },\n                    {\n                        classroom: \"CZ-14\",\n                        day: 6,\n                        startHour: 15,\n                        startMin: 40,\n                        endHour: 17,\n                        endMin: 30\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        code: 5710140,\n        abbreviation: \"CENG140\",\n        name: \"C Programming\",\n        category: 1,\n        sections: [\n            {\n                instructor: \"Göktürk Üçoluk\",\n                criteria: [\n                    {\n                        dept: \"CENG\",\n                        surnameStart: \"AA\",\n                        surnameEnd: \"ZZ\"\n                    }\n                ],\n                minYear: 0,\n                maxYear: 0,\n                lectureTimes: [\n                    {\n                        classroom: \"BMB-1\",\n                        day: 0,\n                        startHour: 8,\n                        startMin: 40,\n                        endHour: 10,\n                        endMin: 30\n                    },\n                    {\n                        classroom: \"BMB-5\",\n                        day: 2,\n                        startHour: 15,\n                        startMin: 40,\n                        endHour: 17,\n                        endMin: 30\n                    }\n                ]\n            }\n        ]\n    }\n]\n\nexport async function getAllCourses(){\n    const client = new Client();\n    return await client.getCourses();\n}\nexport async function getMusts(dept, semester){\n    const client = new Client();\n    return client.getMusts(dept, semester);\n}\nexport function getCourseByCategory(category){\n    if (category < 0){\n        return getAllCourses();\n    }\n    return getAllCourses().filter(c => c.category === category);\n}\nexport function filterCourses(courses, category){\n    if (category < 0){\n        return courses;\n    }\n    return courses.filter(c => c.category === category);\n}\n","function apply_criteria_courses(surname, department, grade, courses) {\n    for (var i = courses.length - 1 ; i >= 0 ; i--) {\n        courses[i] = apply_criteria_sections(surname, department, grade, courses[i]);\n\n        if(courses[i].sections.length === 0) {\n            // Drop Course\n            courses.splice(i, 1);\n        }\n    }\n    return courses;\n}\n\nfunction surnameCheck(surname, course_surname_start, course_surname_end) {\n    var alphabet = {\n        A : 1,\n        B : 2,\n        C : 3,\n        Ç : 4,\n        D : 5,\n        E : 6,\n        F : 7,\n        G : 8,\n        Ğ : 9,\n        H : 10,\n        I : 11,\n        İ : 12,\n        J : 13,\n        K : 14,\n        L : 15,\n        M : 16,\n        N : 17,\n        O : 18,\n        Ö : 19,\n        P : 20,\n        Q : 21,\n        R : 22,\n        S : 23,\n        Ş : 24,\n        T : 25,\n        U : 26,\n        Ü : 27,\n        V : 28,\n        W : 29,\n        X : 30,\n        Y : 31,\n        Z : 32\n    }\n    \n    var surFirstVal = alphabet[surname[0]];\n    var surSecondVal = alphabet[surname[1]];\n    var surStartFirstVal = alphabet[course_surname_start[0]];\n    var surStartSecondVal = alphabet[course_surname_start[1]];\n    var surEndFirstVal = alphabet[course_surname_end[0]];\n    var surEndSecondVal = alphabet[course_surname_end[1]];\n\n    if(surStartFirstVal < surFirstVal && surFirstVal < surEndFirstVal) {\n        return true;\n    }\n    if((surStartFirstVal === surFirstVal && surFirstVal < surEndFirstVal)\n        && (surStartSecondVal <= surStartSecondVal)) {\n        return true;\n    }\n    if((surStartFirstVal < surFirstVal && surFirstVal === surEndFirstVal)\n        && (surSecondVal <= surEndSecondVal)) {\n        return true;\n    }\n    return false;\n}\n\nfunction apply_criteria_sections(surname, department, grade, course) {\n    for(var i = course.sections.length - 1; i >= 0 ; i--) {\n        var section_passed = false;\n        if(course.sections[i].toggle === true) {\n            for(var j = 0 ; j < course.sections[i].criteria.length ; j++) {\n                let criterion = course.sections[i].criteria[j];\n                var dept_passed = false;\n                var surn_passed = false;\n                if(course.checkDepartment === false) {\n                    dept_passed = true;\n                } else {\n                    if(criterion.dept === \"ALL\" || criterion.dept === department) {\n                        dept_passed = true;\n                    }\n                }\n                if(course.checkSurname === false) {\n                    surn_passed = true;\n                } else {\n                    if(surnameCheck(surname, criterion.surnameStart, criterion.surnameEnd) === true) {\n                        surn_passed = true;\n                    }\n                }\n                \n                if(dept_passed === true && surn_passed === true) {\n                    section_passed = true;\n                }\n            }\n        }\n        \n        if(section_passed === false) {\n            course.sections.splice(i, 1);\n        }\n    }\n    return course;\n}\n\n\nfunction lectures_intersect(lt1, lt2) {\n    if (lt1.day !== lt2.day                      // Different Days\n        || lt1.startHour > lt2.endHour          // L1 starts after L2 ends by hour\n        || lt2.startHour > lt1.endHour          // L2 starts after L1 ends by hour\n        || (lt1.startHour === lt2.endHour        // L1 starts after L2 ends by min\n            && lt1.startMin > lt2.endMin)\n        || (lt2.startHour === lt1.endHour        // L2 starts after L1 ends by min\n            && lt2.startMin > lt1.endMin)\n            ) {\n        return false;\n    }\n    return true;\n}\n\nfunction check_collision(section1, section2) {\n    const s1_lt = section1.lectureTimes;\n    const s2_lt = section2.lectureTimes;\n\n    for (var i = 0 ; i < s1_lt.length ; i++) {\n        for (var j = 0 ; j < s2_lt.length ; j++) {\n            if(lectures_intersect(s1_lt[i], s2_lt[j]) === true) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction check_collision_df(section1, df) {\n    const s1_lt = section1.lectureTimes;\n    const df_t = df.times;\n\n    for (var i = 0 ; i < s1_lt.length ; i++) {\n        for (var j = 0 ; j < df_t.length ; j++) {\n            if(lectures_intersect(s1_lt[i], df_t[j]) === true) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\n\n// returns array of code + sections\nexport function compute_schedule(surname, department, grade, courses, dontFills) {\n    let courseNumber = courses.length;\n    console.log(courseNumber)\n    courses = apply_criteria_courses(surname, department, grade, courses);\n    console.log(courseNumber)\n    let scenarios = [];\n    recursive_computation(courses, dontFills, 0, [], scenarios, courseNumber);\n\n    return scenarios;\n}\n\nfunction recursive_computation(courses, dontFills, depth, scenario, scenarios, courseNumber) {\n    if(depth === courses.length) {\n        const scenarioToPosh = Array(0);\n        scenario.map(c => {\n            scenarioToPosh.push({\n                code: c.code,\n                section: c.section.sectionNumber\n            });\n        });\n        if(scenarioToPosh.length == courseNumber) {\n            scenarios.push(scenarioToPosh);\n        }\n        return;\n    }\n    for(var i = 0 ; i < courses[depth].sections.length ; i++) {\n        var collision = false;\n        for(var j = 0 ; j < scenario.length ; j++) {\n            if(courses[depth].checkCollision == true \n                && check_collision(courses[depth].sections[i], scenario[j].section) === true) {\n                collision = true;\n            }\n        }\n        for(var j = 0 ; j < dontFills.length ; j++) {\n            if(check_collision_df(courses[depth].sections[i], dontFills[j]) === true) {\n                collision = true;\n            }  \n        }\n        if(collision === false) {\n            scenario.push({\n                code: courses[depth].code,\n                section: courses[depth].sections[i],\n            }\n            );\n            recursive_computation(courses, dontFills, depth + 1, scenario, scenarios, courseNumber);\n            scenario.pop();\n        }\n        \n    }\n}\n","import React from \"react\";\nimport {Divider} from \"@material-ui/core\";\n\nimport \"./SectionInfo.css\"\n\nexport class SectionInfo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.days = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n    }\n    formatTime(t){\n        return t > 9 ? t.toString() : \"0\" + t.toString();\n    }\n    getDepartmentCriteria(){\n        let ret = \"\";\n        for (let i = 0; i<this.props.sectionDetails.dept.length; i++){\n            ret += this.props.sectionDetails.dept[i] + \" \";\n        }\n        return ret;\n    }\n    renderTimes(){\n        const times = Array(0);\n        // eslint-disable-next-line\n        this.props.sectionDetails.lectureTimes.map(t => {\n            times.push(\n                <div className={\"section-date\"} style={{background: this.props.color.ternary}}>\n                    <div className={\"time-row\"}>\n                        {this.days[t.day] + \" \" + t.startHour + \".\" + this.formatTime(t.startMin) + \"-\" +\n                            t.endHour + \".\" + this.formatTime(t.endMin)\n                        }\n                    </div>\n                    <div className={\"time-row\"}>\n                        {\"Classroom: \" + t.classroom}\n                    </div>\n                </div>);\n        });\n        return times;\n    }\n    renderCriteria(c){\n        return (\n            <div className={\"section-row\"}>\n                {\"Department: \" + c.dept + \" Surname: \" + c.surnameStart + \"-\" + c.surnameEnd}\n            </div>\n        )\n    }\n    render() {\n        return (\n            <div className={\"section-info\"} style={{background: this.props.color.secondary}}>\n                <div>\n                    {\"Section \" + this.props.sectionDetails.sectionNumber}\n                </div>\n                <Divider />\n                <div className={\"section-row\"}>\n                    {\"Instructor: \" + this.props.sectionDetails.instructor}\n                </div>\n                {this.props.sectionDetails.criteria.map(c => this.renderCriteria(c))}\n                <div className={\"section-row\"}>\n                    {this.renderTimes()}\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport {\n    Accordion,\n    AccordionDetails,\n    AccordionSummary,\n    Typography,\n    FormGroup,\n    FormControlLabel,\n    Checkbox,\n    Divider,\n    Button,\n    IconButton\n} from \"@material-ui/core\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport {SectionInfo} from \"./SectionInfo\";\n\nimport \"./CourseCard.css\"\n\nexport class CourseCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedSections: Array(props.course.sections.length).fill(true),\n            sectionCount: props.course.sections.length\n        }\n    }\n\n    handleToggle(sections){\n        this.props.onToggle(sections);\n    }\n\n    toggleSections(){\n        const newSelectedSections = Array(this.state.sectionCount).fill(!this.state.selectedSections[0]);\n        this.setState({selectedSections: newSelectedSections});\n        this.handleToggle(newSelectedSections);\n    }\n\n    renderCheckBoxes() {\n        if (this.state.sectionCount <= 0){\n            return null;\n        }\n        const boxes = Array(0);\n        for (let i = 0; i < this.state.sectionCount; i++){\n            boxes.push(\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            checked={this.state.selectedSections[i]}\n                            onChange={_ => {\n                                    const newSelectedSections = this.state.selectedSections.slice(0);\n                                    newSelectedSections[i] = !newSelectedSections[i];\n                                    this.setState({selectedSections: newSelectedSections});\n                                    this.handleToggle(newSelectedSections);\n                                }\n                            }\n                            color={\"primary\"}\n                        />\n                    }\n                    label={this.props.course.sections[i].sectionNumber}\n                />);\n        }\n        return (\n            <FormGroup row>\n                {boxes}\n                <Button\n                    color={\"primary\"}\n                    onClick={() => this.toggleSections()}\n                >\n                    Toggle\n                </Button>\n            </FormGroup>\n        )\n    }\n\n    renderSectionDetails(){\n        const ret = Array(0);\n        for (let i = 0; i<this.props.course.sections.length; i++){\n            ret.push(<SectionInfo\n                sectionNo={i+1}\n                sectionDetails={this.props.course.sections[i]}\n                color={this.props.color}\n            />);\n        }\n        return ret;\n    }\n\n    render() {\n        return (\n            <div className={\"course-card\"} style={{background: this.props.color.main}}>\n                <div className={\"course-row\"}>\n                    <IconButton size={\"small\"} onClick={() => this.props.onDelete()}>\n                        <DeleteIcon fontSize={\"inherit\"}/>\n                    </IconButton>\n                    <Accordion style={{background: this.props.color.main}}>\n                        <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls={\"panel1a-content\"}>\n                            <Typography style={{color: this.props.color.text}}>\n                                {this.props.course.abbreviation + \": \" + this.props.course.name}\n                            </Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <div className={\"course-details\"}>\n                                <div className={\"course-left-row\"}>\n                                    <Typography style={{color: this.props.color.text}}>\n                                        {\"Course code: \" + this.props.course.code}\n                                    </Typography>\n                                </div>\n                                <Divider />\n                                <div className={\"course-centered-row\"}>\n                                    <div>\n                                        Sections\n                                    </div>\n                                </div>\n                                <Divider />\n                                <div className={\"course-row\"}>\n                                    {this.renderCheckBoxes()}\n                                </div>\n                                <Divider />\n                                {this.renderSectionDetails()}\n                            </div>\n                        </AccordionDetails>\n                    </Accordion>\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport {TextField, IconButton, FormControl, Select, MenuItem} from \"@material-ui/core\";\nimport {Autocomplete} from \"@material-ui/lab\";\nimport AddBoxIcon from '@material-ui/icons/AddBox';\n\nimport {filterCourses} from \"./data/Course\";\n\nimport \"./AddCourseWidget.css\"\n\nexport class AddCourseWidget extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            course: null,\n            category: -1,\n        }\n    }\n    handleCourseAdd(){\n        this.props.onCourseAdd(this.state.course);\n        this.setState({course: null, category: -1});\n    }\n    render() {\n        return (\n            <div className={\"add-course-wrapper\"}>\n                <div className={\"add-course-row\"}>\n                    <FormControl className={\"category-form\"} variant={\"outlined\"}>\n                        <Select\n                            className={\"category-select\"}\n                            value={this.state.category}\n                            onChange={e => this.setState({category: e.target.value, course: null})}\n                            inputProps={{id: \"category-select\"}}\n                        >\n                            <MenuItem value={-1}>All courses</MenuItem>\n                            <MenuItem value={0}>Must</MenuItem>\n                            <MenuItem value={1}>Technical</MenuItem>\n                            <MenuItem value={2}>Restricted</MenuItem>\n                            <MenuItem value={3}>Non-Tech</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <Autocomplete\n                        className={\"add-course-name\"}\n                        options={filterCourses(this.props.courses, this.state.category)}\n                        getOptionLabel={(option => option.abbreviation + \": \" + option.name)}\n                        style={{width: \"60%\"}}\n                        value={this.state.course}\n                        renderInput={(params => <TextField {...params} label={\"Course name\"} variant={\"outlined\"}/>)}\n                        onChange={(e, v) =>\n                            this.setState({course: v})}\n                    />\n                    {this.state.course !== null ? <IconButton onClick={() => this.handleCourseAdd()} >\n                        <AddBoxIcon fontSize={\"large\"} color={\"primary\"} />\n                    </IconButton> : null}\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport {\n    Accordion,\n    AccordionSummary,\n    AccordionDetails,\n    Typography,\n    FormControlLabel,\n    Checkbox,\n    Divider\n} from \"@material-ui/core\";\n\nimport \"./AdvancedSettings.css\"\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport TuneIcon from '@material-ui/icons/Tune';\n\nexport class AdvancedSettings extends React.Component {\n\n    handleSurnameCheck(){\n        this.props.onSettingsChange({\n            checkSurname: !this.props.settings.checkSurname,\n            checkDepartment: this.props.settings.checkDepartment,\n            checkCollision: this.props.settings.checkCollision\n        });\n    }\n    handleDepartmentCheck(){\n        this.props.onSettingsChange({\n            checkSurname: this.props.settings.checkSurname,\n            checkDepartment: !this.props.settings.checkDepartment,\n            checkCollision: this.props.settings.checkCollision\n        });\n    }\n    handleCollisionCheck(){\n        this.props.onSettingsChange({\n            checkSurname: this.props.settings.checkSurname,\n            checkDepartment: this.props.settings.checkDepartment,\n            checkCollision: !this.props.settings.checkCollision\n        });\n    }\n\n    render() {\n        return (\n            <div className={\"settings-wrapper\"}>\n                <Accordion style={{background: \"aliceblue\"}}>\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls={\"panel1a-content\"}>\n                        <div className={\"settings-row\"}>\n                            <TuneIcon color={\"primary\"} fontSize={\"large\"} />\n                            <div className={\"settings-typo\"}>\n                                <Typography>Advanced Settings</Typography>\n                            </div>\n                        </div>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                        <div className={\"settings-accordion\"}>\n                            <Divider />\n                            <div className={\"settings-row\"}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={this.props.settings.checkSurname}\n                                            onChange={() => this.handleSurnameCheck()}\n                                            color={\"primary\"}\n                                        />}\n                                    label={\"Check surname\"}/>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={this.props.settings.checkDepartment}\n                                            onChange={() => this.handleDepartmentCheck()}\n                                            color={\"primary\"}\n                                        />}\n                                    label={\"Check department\"}/>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={this.props.settings.checkCollision}\n                                            onChange={() => this.handleCollisionCheck()}\n                                            color={\"primary\"}\n                                        />}\n                                    label={\"Check collision\"}/>\n                            </div>\n                        </div>\n                    </AccordionDetails>\n                </Accordion>\n            </div>\n        )\n    }\n}","export class Colorset{\n    constructor() {\n        this.colors = [\n            {\n                main: \"#33CDE8\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#C3F6FF\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n            {\n                main: \"#FF38CB\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#F7DCFF\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n            {\n                main: \"#FFF040\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#F7F3C2\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n            {\n                main: \"#71F154\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#DDF7D7\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n            {\n                main: \"#E82A2A\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#FFA9A9\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n            {\n                main: \"#FF8F00\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#FFD39A\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n            {\n                main: \"#B59FF7\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#E9E2FE\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n            {\n                main: \"#8D969A\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#CAD2D5\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n        ]\n        this.iterator = -1;\n    }\n    getNextColor(){\n        if (this.colors.length <= 0){\n            return {main: 0, secondary: 0, ternary: 0};\n        }\n        this.iterator = (this.iterator+1)%this.colors.length;\n        return this.colors[this.iterator];\n    }\n}","import React from \"react\";\nimport {\n    TextField,\n    Select,\n    Button,\n    FormControl,\n    FormHelperText,\n    MenuItem,\n    InputLabel,\n    Snackbar,\n    Divider\n} from \"@material-ui/core\";\nimport MuiAlert from '@material-ui/lab/Alert';\nimport AddIcon from '@material-ui/icons/Add';\nimport EventAvailableIcon from '@material-ui/icons/EventAvailable';\nimport {isMobile} from \"react-device-detect\";\n\nimport {getAllCourses, getMusts} from \"./data/Course\";\nimport {compute_schedule} from \"./schedule\";\nimport {CourseCard} from \"./CourseCard\";\nimport {AddCourseWidget} from \"./AddCourseWidget\";\nimport {AdvancedSettings} from \"./AdvancedSettings\";\nimport {Colorset} from \"./Colorset\";\n\nimport \"./Controls.css\"\n\nexport class Controls extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            surname: \"\",\n            department: \"\",\n            semester: 0,\n            alertMsg: \"\",\n            errorDept: false,\n            errorSemester: false,\n            errorSurname: false,\n            selectedCourses: [],\n            allCourses: [],\n            settings: {\n                checkSurname: true,\n                checkDepartment: true,\n                checkCollision: true\n            },\n            scenarios: [],\n            colorset: new Colorset()\n        }\n    }\n    componentDidMount() {\n        document.title = \"Robot Değilim *-*\";\n        getAllCourses().then(data => this.setState({allCourses: data}));\n        if (isMobile){\n            document.body.style.zoom = \"60%\";\n        }\n    }\n\n    getCourseByCode(code){\n        for (let i = 0; i<this.state.allCourses.length; i++){\n            if (this.state.allCourses[i].code === code){\n                return this.state.allCourses[i];\n            }\n        }\n        return null;\n    }\n    getSectionByNumber(c, n){\n        for (let i = 0; i<c.sections.length; i++){\n            if (c.sections[i].sectionNumber === n){\n                return c.sections[i];\n            }\n        }\n        return null;\n    }\n    getColorByCourseCode(code){\n        for (let i = 0; i<this.state.selectedCourses.length; i++){\n            if (this.state.selectedCourses[i] === null){\n                continue;\n            }\n            if(this.state.selectedCourses[i].code === code){\n                return this.state.selectedCourses[i].color;\n            }\n        }\n        return null;\n    }\n    renderSemesterSelections(n){\n        const ret = Array(0);\n        ret.push(<MenuItem value={0}>---</MenuItem> )\n        for (let i = 0; i<n; i++){\n            ret.push(<MenuItem value={i+1}>{i+1}</MenuItem> );\n        }\n        return ret;\n    }\n\n    handleAddMustCourse(){\n        this.setState({alertMsg: \"\", errorDept: false, errorSemester: false, errorSurname: false});\n        if (this.state.department.length < 2){\n            this.setState({alertMsg: \"Please enter a correct department\", errorDept: true});\n            return;\n        }\n        if (this.state.semester < 1){\n            this.setState({alertMsg: \"Please choose a semester\", errorSemester: true});\n            return;\n        }\n        getMusts(this.state.department, this.state.semester).then(data => {\n            if (data !== undefined){\n                // eslint-disable-next-line\n                data.map(code => {\n                    this.handleAddCourse(this.getCourseByCode(code));\n                });\n            }\n        }).catch(_ => {\n            this.setState({alertMsg: \"Must courses for your department are not available\", errorDept: true});\n        });\n    }\n\n    handleAlertClose(){\n        this.setState({alertMsg: \"\"});\n    }\n    handleDeleteCourse(i){\n        const newSelectedCourses = this.state.selectedCourses.slice(0);\n        newSelectedCourses[i] = null;\n        this.setState({selectedCourses: newSelectedCourses});\n    }\n    handleToggle(i, sections){\n        const newSelectedCourses = this.state.selectedCourses.slice(0);\n        newSelectedCourses[i].sections = sections;\n        this.setState({selectedCourses: newSelectedCourses});\n        console.log(\"Course \" + i + \" sections:\" + sections);\n    }\n    handleAddCourse(c){\n        if (c === null){\n            return;\n        }\n        const newSelectedCourses = this.state.selectedCourses.slice(0);\n        newSelectedCourses.push({\n            code: c.code,\n            sections: Array(c.sections.length).fill(true),\n            color: this.state.colorset.getNextColor()\n        });\n        this.setState({selectedCourses: newSelectedCourses});\n    }\n    handleChangeSettings(s){\n        this.setState({settings: s});\n    }\n    handleScheduleComplete(scenarios){\n        if (scenarios.length <= 0){\n            console.log(\"Fail!\");\n            this.setState({alertMsg: \"There is no available schedule for this criteria.\"});\n        }\n        const scenariosToSubmit = Array(0);\n        scenarios.map(s => {\n            const scenarioToPush = Array(0);\n            s.map(c => {\n                const currentCourse = this.getCourseByCode(c.code);\n                const currentSection = this.getSectionByNumber(currentCourse, c.section);\n                const currentColor = this.getColorByCourseCode(c.code);\n                scenarioToPush.push({\n                    abbreviation: currentCourse.abbreviation,\n                    section: currentSection,\n                    color: currentColor\n                });\n            });\n            scenariosToSubmit.push(scenarioToPush);\n        });\n        this.props.onSchedule(scenariosToSubmit);\n    }\n    formatDf(df){\n        //           0123456789012345\n        //example : '2021-02-20T09:40'\n        return {\n            day: df.startDate.getDay(),\n            startHour: df.startDate.getHours(),\n            startMin: df.startDate.getMinutes(),\n            endHour: df.endDate.getHours(),\n            endMin: df.endDate.getMinutes() - 1\n        };\n    }\n    handleScheduleBegin(){\n        this.setState({alertMsg: \"\", errorDept: false, errorSemester: false, errorSurname: false});\n        if (this.state.department.length < 2){\n            this.setState({alertMsg: \"Please enter a correct department\", errorDept: true});\n            return;\n        }\n        if (this.state.surname.length < 2 && this.state.settings.checkSurname){\n            this.setState({alertMsg: \"Please enter at least 2 letters of your surname\", errorSurname: true});\n            return;\n        }\n        const courseData = Array(0);\n        const dontFills = Array(0);\n        // eslint-disable-next-line\n        this.state.selectedCourses.map(c => {\n            if (c === null){\n                return null;\n            }\n            const currentCourse = this.getCourseByCode(c.code);\n            const courseToPush = {\n                code: c.code,\n                category: currentCourse.category,\n                checkSurname: this.state.settings.checkSurname,\n                checkCollision: this.state.settings.checkCollision,\n                checkDepartment: this.state.settings.checkDepartment,\n                sections: Array(0)\n            };\n            for(let i = 0; i<currentCourse.sections.length; i++){\n                const sectionToPush = {\n                    sectionNumber: currentCourse.sections[i].sectionNumber,\n                    minYear: currentCourse.sections[i].minYear,\n                    maxYear: currentCourse.sections[i].maxYear,\n                    toggle: c.sections[i],\n                    criteria: currentCourse.sections[i].criteria,\n                    lectureTimes: Array(0)\n                };\n                currentCourse.sections[i].lectureTimes.map(t => sectionToPush.lectureTimes.push(t));\n                if (sectionToPush.criteria.length <= 0){\n                    sectionToPush.criteria = [{\n                        dept: \"ALL\",\n                        surnameStart: \"AA\",\n                        surnameEnd: \"ZZ\"\n                    }];\n                }\n                courseToPush.sections.push(sectionToPush);\n            }\n            courseData.push(courseToPush);\n        });\n        this.props.dontFills.map(df => {\n            const formattedDf = this.formatDf(df);\n            dontFills.push({\n                times: [formattedDf]\n            })\n        });\n        //console.log(courseData);\n        console.log(dontFills);\n        const calculatedSchedule = compute_schedule(\n            this.state.surname.slice(0,2),\n            this.state.department,\n            0,\n            courseData,\n            dontFills\n        );\n        //console.log(calculatedSchedule);\n        console.log(calculatedSchedule);\n        this.setState({scenario: calculatedSchedule});\n        this.handleScheduleComplete(calculatedSchedule);\n    }\n    render() {\n        return (\n            <div className={isMobile ? \"control-mobile\" : \"control-wrapper\"}>\n                <Snackbar\n                    open={this.state.alertMsg !== \"\"}\n                    autoHideDuration={5000}\n                    onClose={() => this.handleAlertClose()}\n                >\n                    <MuiAlert elevation={6} variant={\"filled\"} onClose={() => this.handleAlertClose()} severity={\"error\"}>\n                        {this.state.alertMsg}\n                    </MuiAlert>\n                </Snackbar>\n                <div className={\"control-row\"}>\n                    <div className={\"textfield-wrapper\"}>\n                        <TextField\n                            required={this.state.settings.checkSurname}\n                            error={this.state.errorSurname}\n                            label={\"Surname\"}\n                            value={this.state.surname}\n                            inputProps={{ maxLength: 12 }}\n                            variant={\"outlined\"}\n                            onChange={e => this.setState({surname: e.target.value.toUpperCase()})}\n                        />\n                    </div>\n                    <div className={\"textfield-wrapper\"}>\n                        <TextField\n                            required\n                            error={this.state.errorDept}\n                            label={\"Department\"}\n                            value={this.state.department}\n                            inputProps={{ maxLength: 12 }}\n                            variant={\"outlined\"}\n                            onChange={e => this.setState({department: e.target.value.toUpperCase()})}\n                        />\n                    </div>\n                </div>\n                <div className={\"control-row\"}>\n                    <div className={\"textfield-wrapper\"}>\n                        <FormControl className={\"form-control\"}>\n                            <InputLabel>Semester</InputLabel>\n                            <Select\n                                error={this.state.errorSemester}\n                                value={this.state.semester}\n                                onChange={e => this.setState({semester: e.target.value})}\n                            >\n                                {this.renderSemesterSelections(8)}\n                            </Select>\n                            <FormHelperText>Ex: 2nd year Fall semester -> 3</FormHelperText>\n                        </FormControl>\n                    </div>\n                    <div className={\"control-button\"}>\n                        <Button\n                            variant={\"contained\"}\n                            color={\"secondary\"}\n                            startIcon={<AddIcon />}\n                            onClick={() => this.handleAddMustCourse()}>\n                            Add Must Courses\n                        </Button>\n                    </div>\n                    <div className={\"control-button\"}>\n                        <Button\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                            startIcon={<EventAvailableIcon />}\n                            onClick={() => this.handleScheduleBegin()}>\n                            Schedule\n                        </Button>\n                    </div>\n                </div>\n                <AdvancedSettings settings={this.state.settings} onSettingsChange={s => this.handleChangeSettings(s)}/>\n                <Divider />\n                <div className={\"control-row\"}>\n                    <div className={\"centered-row\"}>\n                        Added Courses\n                    </div>\n                </div>\n                <Divider />\n                {this.state.selectedCourses.map((c, i) => {\n                    return (\n                        c !== null?\n                        <CourseCard course={this.getCourseByCode(c.code)}\n                                    onDelete={() => this.handleDeleteCourse(i)}\n                                    onToggle={sections => this.handleToggle(i, sections)}\n                                    color={c.color}/> : null\n                    );\n                })}\n                <AddCourseWidget\n                    courses={this.state.allCourses}\n                    onCourseAdd={c => this.handleAddCourse(c)}/>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Button\n} from \"@material-ui/core\";\n\nexport class WelcomeDialog extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: true\n        }\n    }\n    render() {\n        return (\n        <div className={\"dialog-wrapper\"}>\n            <Dialog open={this.state.open}\n                    onClose={() => this.setState({open: false})}\n                    aria-labelledby={\"alert-dialog-title\"}\n                    aria-describedby={\"alert-dialog-description\"}>\n                <DialogTitle id={\"alert-dialog-title\"}>\n                    Welcome!\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id={\"alert-dialog-description\"}>\n                        Siteyi ders seçimine yetiştirmek için hızlı bir şekilde yazdığımızdan,\n                        her türlü hata bildirimi bizim için çok faydalı olacaktır.\n                        Fark ettiğiniz herhangi bir sıkıntıda lütfen bizle iletişime geçin.\n                        <br/>\n                        Eren Erişken: erenerisken@gmail.com\n                        <br/>\n                        Alperen Keleş: alpkeles99@gmail.com\n                        <br/>\n                        Alp Eren Yılmaz: ylmz.alp.e@gmail.com\n                        <br/>\n                        <br/>\n                        doldur.xyz anısına! (Saygılar @baskinburak)\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => this.setState({open: false})}\n                            color={\"secondary\"}\n                            variant={\"contained\"}\n                            autoFocus={false}>\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>);\n    }\n}","import React from 'react';\nimport {isMobile} from \"react-device-detect\";\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport {WeeklyProgram} from \"./WeeklyProgram\";\nimport {Controls} from \"./Controls\";\nimport {WelcomeDialog} from \"./WelcomeDialog\";\n\nimport './App.css';\n\nconst theme = createMuiTheme({\n    palette: {\n        secondary: {\n            main: '#71F154'\n        }\n    }\n});\n\nclass App extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            scenarios: [],\n            dontFills: []\n        }\n    }\n    handleDontFillAdd(startDate, endDate){\n        const newDontFills = this.state.dontFills.slice(0);\n        newDontFills.push({\n            startDate: startDate,\n            endDate: endDate\n        });\n        this.setState({dontFills: newDontFills});\n    }\n    handleDontFillDelete(startDate){\n        this.setState({dontFills: this.state.dontFills.filter(df => df.startDate !== startDate)});\n    }\n    render() {\n        //console.log(this.state.scenarios);\n        return (\n          <MuiThemeProvider theme={theme}>\n            <div className=\"App\">\n                <WelcomeDialog />\n                <div className={isMobile ? \"column\" : \"row\"}>\n                    <WeeklyProgram dontFills={this.state.dontFills}\n                                   scenarios={this.state.scenarios}\n                                   onDontFillAdd={(startDate, endDate) => this.handleDontFillAdd(startDate, endDate)}\n                                   onDontFillDelete={startDate => this.handleDontFillDelete(startDate)}/>\n                    <Controls onSchedule={s => this.setState({scenarios: s})} dontFills={this.state.dontFills}/>\n                </div>\n            </div>\n          </MuiThemeProvider>\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}