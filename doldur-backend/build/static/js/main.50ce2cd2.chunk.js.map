{"version":3,"sources":["WeeklyProgram.js","Client.js","data/Course.js","schedule.js","SectionInfo.js","CourseCard.js","AddCourseWidget.js","AdvancedSettings.js","Colorset.js","Controls.js","CoursesToDisplay.js","App.js","serviceWorker.js","index.js"],"names":["DayScaleRow","className","React","Component","WeeklyProgram","props","AppointmentContent","data","restProps","style","background","color","main","text","title","section","classroom","state","currentScenario","delta","this","setState","Math","min","scenarios","length","max","day","hour","coursesToDisplay","Array","map","c","lectureTimes","lt","i","startHour","endHour","push","abbreviation","sectionNumber","undefined","startDate","convertTime","startMin","endDate","endMin","formatDate","AppointmentLayer","_","convertToEntry","isMobile","Paper","currentDate","startDayHour","endDayHour","cellDuration","dayScaleRowComponent","appointmentLayerComponent","CustomAppointment","appointmentContentComponent","IconButton","onClick","handleScenarioChange","fontSize","Typography","Client","coursesUrl","mustUrl","dept","semester","url","axios","get","courses","Object","keys","code","courseToPush","slice","search","name","category","sections","sn","s","sectionToPush","instructor","criteria","minYear","maxYear","t","parseInt","surnameStart","surnameEnd","getAllCourses","a","client","getCourses","getMusts","surnameCheck","surname","course_surname_start","course_surname_end","apply_criteria_sections","department","grade","course","section_passed","j","criterion","dept_passed","surn_passed","checkDepartment","checkSurname","toggle","splice","check_collision","section1","section2","lt1","lt2","s1_lt","s2_lt","compute_schedule","recursive_computation","depth","scenario","scenarioToPosh","collision","pop","apply_criteria_courses","SectionInfo","days","toString","ret","sectionDetails","times","ternary","formatTime","secondary","Divider","renderCriteria","renderTimes","CourseCard","selectedSections","fill","sectionCount","onToggle","boxes","FormControlLabel","control","Checkbox","checked","onChange","e","newSelectedSections","handleToggle","label","FormGroup","row","Button","toggleSections","sectionNo","size","onDelete","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","renderCheckBoxes","renderSectionDetails","AddCourseWidget","onCourseAdd","FormControl","variant","Select","value","target","inputProps","id","MenuItem","Autocomplete","options","filter","getOptionLabel","option","width","renderInput","params","TextField","v","handleCourseAdd","AdvancedSettings","onSettingsChange","settings","checkCollision","handleSurnameCheck","handleDepartmentCheck","handleCollisionCheck","Colorset","colors","textSection","iterator","Controls","alertMsg","errorDept","errorSemester","errorSurname","selectedCourses","allCourses","colorset","document","then","body","zoom","n","handleAddCourse","getCourseByCode","catch","newSelectedCourses","console","log","getNextColor","scenariosToSubmit","scenarioToPush","currentCourse","currentSection","getSectionByNumber","currentColor","getColorByCourseCode","onSchedule","courseData","calculatedSchedule","handleScheduleComplete","Snackbar","open","autoHideDuration","onClose","handleAlertClose","elevation","severity","required","error","maxLength","toUpperCase","InputLabel","renderSemesterSelections","FormHelperText","startIcon","handleAddMustCourse","handleScheduleBegin","handleChangeSettings","handleDeleteCourse","schedulerData","theme","createMuiTheme","palette","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.50ce2cd2.chunk.js","sourcesContent":["import React from \"react\";\nimport {Paper, IconButton, Typography} from \"@material-ui/core\";\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport {ViewState} from \"@devexpress/dx-react-scheduler\";\nimport {\n    Scheduler,\n    WeekView,\n    Appointments,\n} from '@devexpress/dx-react-scheduler-material-ui';\nimport {isMobile} from \"react-device-detect\";\n\nimport \"./WeeklyProgram.css\"\n\nconst currentDate = '2021-02-20';\n\n\n\nclass DayScaleRow extends React.Component{\n    render() {\n        return (\n            <div className={\"dayscale-row\"}>\n                <div className={\"dayscale-label\"}>\n                    Mon\n                </div>\n                <div className={\"dayscale-label\"}>\n                    Tue\n                </div>\n                <div className={\"dayscale-label\"}>\n                    Wed\n                </div>\n                <div className={\"dayscale-label\"}>\n                    Thu\n                </div>\n                <div className={\"dayscale-label\"}>\n                    Fri\n                </div>\n                <div className={\"dayscale-label\"}>\n                    Sat\n                </div>\n                <div className={\"dayscale-label\"}>\n                    Sun\n                </div>\n            </div>\n        )\n    }\n}\n\nexport class WeeklyProgram extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentScenario: 0\n        };\n    }\n\n    handleScenarioChange(delta){\n        this.setState({\n            currentScenario: Math.min(this.props.scenarios.length-1, Math.max(0,\n                this.state.currentScenario + delta))});\n    }\n    convertTime(day, hour, min){\n        //example : '2021-02-20T09:40'\n        return \"2021-02-\" + (14 + day) + \"T\" + (hour < 10 ? \"0\" : \"\") + hour + \":\" + (min < 10 ? \"0\" : \"\") + min;\n    }\n    convertToEntry(){\n        if (this.props.scenarios.length <= 0){\n            return [];\n        }\n        const coursesToDisplay = Array(0);\n        const scenario = this.props.scenarios[this.state.currentScenario];\n        scenario.map(c => {\n            //console.log(c);\n            c.section.lectureTimes.map(lt => {\n                for(let i = lt.startHour; i<lt.endHour; i++){\n                    coursesToDisplay.push({\n                        title: c.abbreviation,\n                        section: c.section.sectionNumber,\n                        classroom: lt.classroom !== undefined ? lt.classroom : \"-\",\n                        startDate: this.convertTime(lt.day, i, lt.startMin),\n                        endDate: this.convertTime(lt.day, i+1, lt.endMin),\n                        color: c.color\n                    })\n                }\n            });\n        });\n        return coursesToDisplay;\n    }\n    CustomAppointment({formatDate, ...restProps}){\n        return (\n            <WeekView.AppointmentLayer {...restProps} formatDate={(_) => \"\"} className={\"custom-appointment\"} />\n        )\n    }\n    AppointmentContent = ({data, ...restProps}) => {\n        return (\n            <Appointments.AppointmentContent data={data}\n                                             {...restProps}\n                                             className={\"program-appointment\"} style={{background: data.color.main}}>\n                <div className={\"program-text-container\"}>\n                    <div className={\"program-title\"} style={{color: data.color.text}}>\n                        {data.title + \"/\" + data.section}\n                    </div>\n                    <div className={\"program-title\"} style={{color: data.color.text}}>\n                        {data.classroom}\n                    </div>\n                </div>\n            </Appointments.AppointmentContent>\n        )\n    }\n    render() {\n        const data = this.convertToEntry();\n        //console.log(data);\n        return (\n            <div className={isMobile ? \"scheduler-mobile\" : \"scheduler-wrapper\"}>\n                <Paper>\n                    <Scheduler\n                        data={data}\n                    >\n                        <ViewState\n                            currentDate={currentDate}\n                        />\n                        <WeekView\n                            startDayHour={7.667}\n                            endDayHour={17.5}\n                            cellDuration={60}\n                            dayScaleRowComponent={DayScaleRow}\n                            appointmentLayerComponent={this.CustomAppointment}\n                        />\n                        <Appointments appointmentContentComponent={this.AppointmentContent}/>\n                    </Scheduler>\n                </Paper>\n                {this.props.scenarios.length > 0?\n                <div className={\"program-row\"}>\n                    <IconButton onClick={() => this.handleScenarioChange(-1)}>\n                        <KeyboardArrowLeftIcon fontSize={\"small\"} />\n                    </IconButton>\n                    <div className={\"program-typo-wrapper\"}>\n                        <Typography>\n                            {\"Scenario \" + (this.state.currentScenario+1) + \" of \" + this.props.scenarios.length}\n                        </Typography>\n                    </div>\n                    <IconButton onClick={() => this.handleScenarioChange(1)}>\n                        <KeyboardArrowRightIcon fontSize={\"small\"} />\n                    </IconButton>\n                </div> : null}\n            </div>\n        );\n    }\n}","import axios from \"axios\";\n\nexport class Client{\n    constructor() {\n        this.coursesUrl = \"https:\\\\robotdegilim.xyz/courses\";\n        this.mustUrl = \"https:\\\\robotdegilim.xyz/musts?\";\n    }\n    async getMusts(dept, semester){\n        const url = this.mustUrl + \"dept=\"+dept+\"&sem=\"+semester;\n        return (await axios.get(url)).data;\n    }\n    async getCourses(){\n        const data = (await axios.get(this.coursesUrl)).data;\n        const courses = Array(0);\n        // eslint-disable-next-line\n        Object.keys(data).map(code => {\n            const courseToPush = {\n                code: code,\n                abbreviation: data[code][\"Course Name\"].slice(0, data[code][\"Course Name\"].search(\" \")),\n                name: data[code][\"Course Name\"].slice(data[code][\"Course Name\"].search(\"-\")+2),\n                category: 0,\n                sections: Array(0)\n            };\n            const sectionNumbers = Object.keys(data[code][\"Sections\"]);\n            // eslint-disable-next-line\n            sectionNumbers.map(sn => {\n                const s = data[code][\"Sections\"][sn];\n                const sectionToPush = {\n                    instructor: s[\"i\"][0],\n                    sectionNumber: sn,\n                    criteria: Array(0),\n                    minYear: 0,\n                    maxYear: 0,\n                    lectureTimes: Array(0)\n                };\n                // eslint-disable-next-line\n                s[\"t\"].map(t => {\n                    sectionToPush.lectureTimes.push({\n                        classroom: t[\"p\"],\n                        day: t[\"d\"],\n                        startHour: parseInt(t[\"s\"].slice(0, t[\"s\"].search(\":\"))),\n                        startMin: parseInt(t[\"s\"].slice(t[\"s\"].search(\":\")+1)),\n                        endHour: parseInt(t[\"e\"].slice(0, t[\"e\"].search(\":\"))),\n                        endMin: parseInt(t[\"e\"].slice(t[\"e\"].search(\":\")+1)),\n                    });\n                });\n                // eslint-disable-next-line\n                s[\"c\"].map(c => {\n                    sectionToPush.criteria.push({\n                        dept: c[\"d\"],\n                        surnameStart: c[\"s\"],\n                        surnameEnd: c[\"e\"]\n                    });\n                });\n                courseToPush.sections.push(sectionToPush);\n            });\n            //console.log(courseToPush);\n            //console.log(data[code]);\n            courses.push(courseToPush);\n        });\n        return courses;\n    }\n}","import {Client} from \"../Client\";\n// eslint-disable-next-line\nconst exampleCourses = [\n    {\n        code: 5710213,\n        abbreviation: \"CENG213\",\n        name: \"Data Structures\",\n        category: 0,\n        sections: [\n            {\n                instructor: \"Yusuf Sahillioğlu\",\n                criteria: [\n                    {\n                        dept: \"CENG\",\n                        surnameStart: \"AA\",\n                        surnameEnd: \"FF\"\n                    },\n                    {\n                        dept: \"EE\",\n                        surnameStart: \"AA\",\n                        surnameEnd: \"ZZ\"\n                    }\n                ],\n                minYear: 0,\n                maxYear: 0,\n                lectureTimes: [\n                    {\n                        classroom: \"BMB-1\",\n                        day: 0,\n                        startHour: 8,\n                        startMin: 40,\n                        endHour: 10,\n                        endMin: 30\n                    },\n                    {\n                        classroom: \"BMB-4\",\n                        day: 2,\n                        startHour: 15,\n                        startMin: 40,\n                        endHour: 17,\n                        endMin: 30\n                    }\n                ]\n            },\n            {\n                instructor: \"Cevat Şener\",\n                criteria: [\n                    {\n                        dept: \"CENG\",\n                        surnameStart: \"FG\",\n                        surnameEnd: \"ZZ\"\n                    },\n                    {\n                        dept: \"ME\",\n                        surnameStart: \"AA\",\n                        surnameEnd: \"ZZ\"\n                    }\n                ],\n                minYear: 0,\n                maxYear: 0,\n                lectureTimes: [\n                    {\n                        classroom: \"U-3\",\n                        day: 2,\n                        startHour: 10,\n                        startMin: 40,\n                        endHour: 12,\n                        endMin: 30\n                    },\n                    {\n                        classroom: \"CZ-14\",\n                        day: 6,\n                        startHour: 15,\n                        startMin: 40,\n                        endHour: 17,\n                        endMin: 30\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        code: 5710140,\n        abbreviation: \"CENG140\",\n        name: \"C Programming\",\n        category: 1,\n        sections: [\n            {\n                instructor: \"Göktürk Üçoluk\",\n                criteria: [\n                    {\n                        dept: \"CENG\",\n                        surnameStart: \"AA\",\n                        surnameEnd: \"ZZ\"\n                    }\n                ],\n                minYear: 0,\n                maxYear: 0,\n                lectureTimes: [\n                    {\n                        classroom: \"BMB-1\",\n                        day: 0,\n                        startHour: 8,\n                        startMin: 40,\n                        endHour: 10,\n                        endMin: 30\n                    },\n                    {\n                        classroom: \"BMB-5\",\n                        day: 2,\n                        startHour: 15,\n                        startMin: 40,\n                        endHour: 17,\n                        endMin: 30\n                    }\n                ]\n            }\n        ]\n    }\n]\n\nexport async function getAllCourses(){\n    const client = new Client();\n    return await client.getCourses();\n}\nexport async function getMusts(dept, semester){\n    const client = new Client();\n    return client.getMusts(dept, semester);\n}\nexport function getCourseByCategory(category){\n    if (category < 0){\n        return getAllCourses();\n    }\n    return getAllCourses().filter(c => c.category === category);\n}\nexport function filterCourses(courses, category){\n    if (category < 0){\n        return courses;\n    }\n    return courses.filter(c => c.category === category);\n}\n","function apply_criteria_courses(surname, department, grade, courses) {\n    for (var i = 0 ; i < courses.length ; i++) {\n        courses[i] = apply_criteria_sections(surname, department, grade, courses[i]);\n\n        if(courses[i].sections.length === 0) {\n            // Drop Course\n            courses.splice(i, 1);\n            i--;\n        }\n    }\n    return courses;\n}\n\nfunction surnameCheck(surname, course_surname_start, course_surname_end) {\n    return ((course_surname_start <= surname) && (surname <= course_surname_end));\n}\nfunction departmentCheck(department, dept_list) {\n    for(var i = 0 ; i < dept_list.length ; i++) {\n        if(department === dept_list[i]) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction apply_criteria_sections(surname, department, grade, course) {\n    for(var i = 0 ; i < course.sections.length ; i++) {\n        var section_passed = false;\n        for(var j = 0 ; j < course.sections[i].criteria.length ; j++) {\n            let criterion = course.sections[i].criteria[j];\n            var dept_passed = false;\n            var surn_passed = false;\n            if(course.checkDepartment === false) {\n                dept_passed = true;\n            } else {\n                if(criterion.dept === \"ALL\" || criterion.dept === department) {\n                    dept_passed = true;\n                }\n            }\n            if(course.checkSurname === false) {\n                surn_passed = true;\n            } else {\n                if(surnameCheck(surname, criterion.surnameStart, criterion.surnameEnd) === true) {\n                    surn_passed = true;\n                }\n            }\n            \n            if(dept_passed === true && surn_passed === true) {\n                section_passed = true;\n            }\n        }\n        if(section_passed === false || !course.sections[i].toggle) {\n            course.sections.splice(i, 1);\n            i--;\n        }\n    }\n    return course;\n}\n\n\nfunction lectures_intersect(lt1, lt2) {\n    if (lt1.day !== lt2.day                      // Different Days\n        || lt1.startHour > lt2.endHour          // L1 starts after L2 ends by hour\n        || lt2.startHour > lt1.endHour          // L2 starts after L1 ends by hour\n        || (lt1.startHour === lt2.endHour        // L1 starts after L2 ends by min\n            && lt1.startMin > lt2.endMin)\n        || (lt2.startHour === lt1.endHour        // L2 starts after L1 ends by min\n            && lt2.startMin > lt1.endMin)\n            ) {\n        return false;\n    }\n    return true;\n}\n\nfunction check_collision(section1, section2) {\n    const s1_lt = section1.lectureTimes;\n    const s2_lt = section2.lectureTimes;\n\n    for (var i = 0 ; i < s1_lt.length ; i++) {\n        for (var j = 0 ; j < s2_lt.length ; j++) {\n            if(lectures_intersect(s1_lt[i], s2_lt[j]) === true) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nconst exampleScenario = {\n    sections: [\n        {\n            code: 5710140,\n            section: 2\n        },\n        {\n            code: 5710213,\n            section: 1\n        }\n    ]\n}\n\n// \n// \n// \n// \n// returns array of code + sections\nexport function compute_schedule(surname, department, grade, courses) {\n    courses = apply_criteria_courses(surname, department, grade, courses);\n\n    let scenarios = [];\n    recursive_computation(courses, 0, [], scenarios);\n\n    return scenarios;\n}\n\nfunction recursive_computation(courses, depth, scenario, scenarios) {\n    if(depth === courses.length) {\n        const scenarioToPosh = Array(0);\n        scenario.map(c => {\n            scenarioToPosh.push({\n                code: c.code,\n                section: c.section.sectionNumber\n            });\n        });\n        scenarios.push(scenarioToPosh);\n        return;\n    }\n    for(var i = 0 ; i < courses[depth].sections.length ; i++) {\n        var collision = false;\n        for(var j = 0 ; j < scenario.length ; j++) {\n            if(check_collision(courses[depth].sections[i], scenario[j].section) === true) {\n                collision = true;\n            }\n        }\n        if(collision === false) {\n            scenario.push({\n                code: courses[depth].code,\n                section: courses[depth].sections[i],\n            }\n            );\n            recursive_computation(courses, depth + 1, scenario, scenarios);\n            scenario.pop();\n        }\n        \n    }\n}\n","import React from \"react\";\nimport {Divider} from \"@material-ui/core\";\n\nimport \"./SectionInfo.css\"\n\nexport class SectionInfo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.days = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n    }\n    formatTime(t){\n        return t > 9 ? t.toString() : \"0\" + t.toString();\n    }\n    getDepartmentCriteria(){\n        let ret = \"\";\n        for (let i = 0; i<this.props.sectionDetails.dept.length; i++){\n            ret += this.props.sectionDetails.dept[i] + \" \";\n        }\n        return ret;\n    }\n    renderTimes(){\n        const times = Array(0);\n        // eslint-disable-next-line\n        this.props.sectionDetails.lectureTimes.map(t => {\n            times.push(\n                <div className={\"section-date\"} style={{background: this.props.color.ternary}}>\n                    <div className={\"time-row\"}>\n                        {this.days[t.day] + \" \" + t.startHour + \".\" + this.formatTime(t.startMin) + \"-\" +\n                            t.endHour + \".\" + this.formatTime(t.endMin)\n                        }\n                    </div>\n                    <div className={\"time-row\"}>\n                        {\"Classroom: \" + t.classroom}\n                    </div>\n                </div>);\n        });\n        return times;\n    }\n    renderCriteria(c){\n        return (\n            <div className={\"section-row\"}>\n                {\"Department: \" + c.dept + \" Surname: \" + c.surnameStart + \"-\" + c.surnameEnd}\n            </div>\n        )\n    }\n    render() {\n        return (\n            <div className={\"section-info\"} style={{background: this.props.color.secondary}}>\n                <div>\n                    {\"Section \" + this.props.sectionDetails.sectionNumber}\n                </div>\n                <Divider />\n                <div className={\"section-row\"}>\n                    {\"Instructor: \" + this.props.sectionDetails.instructor}\n                </div>\n                {this.props.sectionDetails.criteria.map(c => this.renderCriteria(c))}\n                <div className={\"section-row\"}>\n                    {this.renderTimes()}\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport {\n    Accordion,\n    AccordionDetails,\n    AccordionSummary,\n    Typography,\n    FormGroup,\n    FormControlLabel,\n    Checkbox,\n    Divider,\n    Button,\n    IconButton\n} from \"@material-ui/core\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport {SectionInfo} from \"./SectionInfo\";\n\nimport \"./CourseCard.css\"\n\nexport class CourseCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedSections: Array(props.course.sections.length).fill(true),\n            sectionCount: props.course.sections.length\n        }\n    }\n\n    handleToggle(sections){\n        this.props.onToggle(sections);\n    }\n\n    toggleSections(){\n        this.setState({selectedSections: Array(this.state.sectionCount).fill(!this.state.selectedSections[0])});\n    }\n\n    renderCheckBoxes() {\n        if (this.state.sectionCount <= 0){\n            return null;\n        }\n        const boxes = Array(0);\n        for (let i = 0; i < this.state.sectionCount; i++){\n            boxes.push(\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            checked={this.state.selectedSections[i]}\n                            onChange={e => {\n                                    const newSelectedSections = this.state.selectedSections.slice(0);\n                                    newSelectedSections[i] = !newSelectedSections[i];\n                                    this.setState({selectedSections: newSelectedSections});\n                                    this.handleToggle(newSelectedSections);\n                                }\n                            }\n                            color={\"primary\"}\n                        />\n                    }\n                    label={this.props.course.sections[i].sectionNumber}\n                />);\n        }\n        return (\n            <FormGroup row>\n                {boxes}\n                <Button\n                    color={\"primary\"}\n                    onClick={() => this.toggleSections()}\n                >\n                    Toggle\n                </Button>\n            </FormGroup>\n        )\n    }\n\n    renderSectionDetails(){\n        const ret = Array(0);\n        for (let i = 0; i<this.props.course.sections.length; i++){\n            ret.push(<SectionInfo\n                sectionNo={i+1}\n                sectionDetails={this.props.course.sections[i]}\n                color={this.props.color}\n            />);\n        }\n        return ret;\n    }\n\n    render() {\n        return (\n            <div className={\"course-card\"} style={{background: this.props.color.main}}>\n                <div className={\"course-row\"}>\n                    <IconButton size={\"small\"} onClick={() => this.props.onDelete()}>\n                        <DeleteIcon fontSize={\"inherit\"}/>\n                    </IconButton>\n                    <Accordion style={{background: this.props.color.main}}>\n                        <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls={\"panel1a-content\"}>\n                            <Typography style={{color: this.props.color.text}}>\n                                {this.props.course.abbreviation + \": \" + this.props.course.name}\n                            </Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <div className={\"course-details\"}>\n                                <Divider />\n                                <div className={\"course-centered-row\"}>\n                                    <div>\n                                        Sections\n                                    </div>\n                                </div>\n                                <Divider />\n                                <div className={\"course-row\"}>\n                                    {this.renderCheckBoxes()}\n                                </div>\n                                <Divider />\n                                {this.renderSectionDetails()}\n                            </div>\n                        </AccordionDetails>\n                    </Accordion>\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport {TextField, IconButton, FormControl, Select, MenuItem} from \"@material-ui/core\";\nimport {Autocomplete} from \"@material-ui/lab\";\nimport AddBoxIcon from '@material-ui/icons/AddBox';\n\nimport {filterCourses} from \"./data/Course\";\n\nimport \"./AddCourseWidget.css\"\n\nexport class AddCourseWidget extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            course: null,\n            category: -1,\n        }\n    }\n    handleCourseAdd(){\n        this.props.onCourseAdd(this.state.course);\n        this.setState({course: null, category: -1});\n    }\n    render() {\n        return (\n            <div className={\"add-course-wrapper\"}>\n                <div className={\"add-course-row\"}>\n                    <FormControl className={\"category-form\"} variant={\"outlined\"}>\n                        <Select\n                            className={\"category-select\"}\n                            value={this.state.category}\n                            onChange={e => this.setState({category: e.target.value, course: null})}\n                            inputProps={{id: \"category-select\"}}\n                        >\n                            <MenuItem value={-1}>All courses</MenuItem>\n                            <MenuItem value={0}>Must</MenuItem>\n                            <MenuItem value={1}>Technical</MenuItem>\n                            <MenuItem value={2}>Restricted</MenuItem>\n                            <MenuItem value={3}>Non-Tech</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <Autocomplete\n                        className={\"add-course-name\"}\n                        options={filterCourses(this.props.courses, this.state.category)}\n                        getOptionLabel={(option => option.abbreviation + \": \" + option.name)}\n                        style={{width: \"60%\"}}\n                        value={this.state.course}\n                        renderInput={(params => <TextField {...params} label={\"Course name\"} variant={\"outlined\"}/>)}\n                        onChange={(e, v) =>\n                            this.setState({course: v})}\n                    />\n                    {this.state.course !== null ? <IconButton onClick={() => this.handleCourseAdd()} >\n                        <AddBoxIcon fontSize={\"large\"} color={\"primary\"} />\n                    </IconButton> : null}\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport {\n    Accordion,\n    AccordionSummary,\n    AccordionDetails,\n    Typography,\n    FormControlLabel,\n    Checkbox,\n    Divider\n} from \"@material-ui/core\";\n\nimport \"./AdvancedSettings.css\"\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport TuneIcon from '@material-ui/icons/Tune';\n\nexport class AdvancedSettings extends React.Component {\n\n    handleSurnameCheck(){\n        this.props.onSettingsChange({\n            checkSurname: !this.props.settings.checkSurname,\n            checkDepartment: this.props.settings.checkDepartment,\n            checkCollision: this.props.settings.checkCollision\n        });\n    }\n    handleDepartmentCheck(){\n        this.props.onSettingsChange({\n            checkSurname: this.props.settings.checkSurname,\n            checkDepartment: !this.props.settings.checkDepartment,\n            checkCollision: this.props.settings.checkCollision\n        });\n    }\n    handleCollisionCheck(){\n        /*TODO*/\n        this.props.onSettingsChange({\n            checkSurname: this.props.settings.checkSurname,\n            checkDepartment: this.props.settings.checkDepartment,\n            checkCollision: this.props.settings.checkCollision\n        });\n    }\n\n    render() {\n        return (\n            <div className={\"settings-wrapper\"}>\n                <Accordion style={{background: \"aliceblue\"}}>\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls={\"panel1a-content\"}>\n                        <div className={\"settings-row\"}>\n                            <TuneIcon color={\"primary\"} fontSize={\"large\"} />\n                            <div className={\"settings-typo\"}>\n                                <Typography>Advanced Settings</Typography>\n                            </div>\n                        </div>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                        <div className={\"settings-accordion\"}>\n                            <Divider />\n                            <div className={\"settings-row\"}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={this.props.settings.checkSurname}\n                                            onChange={() => this.handleSurnameCheck()}\n                                            color={\"primary\"}\n                                        />}\n                                    label={\"Check surname\"}/>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={this.props.settings.checkDepartment}\n                                            onChange={() => this.handleDepartmentCheck()}\n                                            color={\"primary\"}\n                                        />}\n                                    label={\"Check department\"}/>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={this.props.settings.checkCollision}\n                                            onChange={() => this.handleCollisionCheck()}\n                                            color={\"primary\"}\n                                        />}\n                                    label={\"Check collision\"}/>\n                            </div>\n                        </div>\n                    </AccordionDetails>\n                </Accordion>\n            </div>\n        )\n    }\n}","export class Colorset{\n    constructor() {\n        this.colors = [\n            {\n                main: \"#33CDE8\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#C3F6FF\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n            {\n                main: \"#FF38CB\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#F7DCFF\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n            {\n                main: \"#FFF040\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#F7F3C2\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n            {\n                main: \"#71F154\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#DDF7D7\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n            {\n                main: \"#E82A2A\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#FFA9A9\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n            {\n                main: \"#FF8F00\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#FFD39A\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n            {\n                main: \"#B59FF7\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#E9E2FE\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n            {\n                main: \"#8D969A\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#CAD2D5\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n        ]\n        this.iterator = -1;\n    }\n    getNextColor(){\n        if (this.colors.length <= 0){\n            return {main: 0, secondary: 0, ternary: 0};\n        }\n        this.iterator = (this.iterator+1)%this.colors.length;\n        return this.colors[this.iterator];\n    }\n}","import React from \"react\";\nimport {\n    TextField,\n    Select,\n    Button,\n    FormControl,\n    FormHelperText,\n    MenuItem,\n    InputLabel,\n    Snackbar,\n    Divider\n} from \"@material-ui/core\";\nimport MuiAlert from '@material-ui/lab/Alert';\nimport AddIcon from '@material-ui/icons/Add';\nimport EventAvailableIcon from '@material-ui/icons/EventAvailable';\nimport {isMobile} from \"react-device-detect\";\n\nimport {getAllCourses, getMusts} from \"./data/Course\";\nimport {compute_schedule} from \"./schedule\";\nimport {CourseCard} from \"./CourseCard\";\nimport {AddCourseWidget} from \"./AddCourseWidget\";\nimport {AdvancedSettings} from \"./AdvancedSettings\";\nimport {Colorset} from \"./Colorset\";\n\nimport \"./Controls.css\"\n\nexport class Controls extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            surname: \"\",\n            department: \"\",\n            semester: 0,\n            alertMsg: \"\",\n            errorDept: false,\n            errorSemester: false,\n            errorSurname: false,\n            selectedCourses: [],\n            allCourses: [],\n            settings: {\n                checkSurname: true,\n                checkDepartment: true,\n                checkCollision: true\n            },\n            scenarios: [],\n            colorset: new Colorset()\n        }\n    }\n    componentDidMount() {\n        document.title = \"Robot Değilim *-*\";\n        getAllCourses().then(data => this.setState({allCourses: data}));\n        if (isMobile){\n            document.body.style.zoom = \"60%\";\n        }\n    }\n\n    getCourseByCode(code){\n        for (let i = 0; i<this.state.allCourses.length; i++){\n            if (this.state.allCourses[i].code === code){\n                return this.state.allCourses[i];\n            }\n        }\n        return null;\n    }\n    getSectionByNumber(c, n){\n        for (let i = 0; i<c.sections.length; i++){\n            if (c.sections[i].sectionNumber === n){\n                return c.sections[i];\n            }\n        }\n        return null;\n    }\n    getColorByCourseCode(code){\n        for (let i = 0; i<this.state.selectedCourses.length; i++){\n            if (this.state.selectedCourses[i] === null){\n                continue;\n            }\n            if(this.state.selectedCourses[i].code === code){\n                return this.state.selectedCourses[i].color;\n            }\n        }\n        return null;\n    }\n    renderSemesterSelections(n){\n        const ret = Array(0);\n        ret.push(<MenuItem value={0}>---</MenuItem> )\n        for (let i = 0; i<n; i++){\n            ret.push(<MenuItem value={i+1}>{i+1}</MenuItem> );\n        }\n        return ret;\n    }\n\n    handleAddMustCourse(){\n        this.setState({alertMsg: \"\", errorDept: false, errorSemester: false, errorSurname: false});\n        if (this.state.department.length < 2){\n            this.setState({alertMsg: \"Please enter a correct department\", errorDept: true});\n            return;\n        }\n        if (this.state.semester < 1){\n            this.setState({alertMsg: \"Please choose a semester\", errorSemester: true});\n            return;\n        }\n        getMusts(this.state.department, this.state.semester).then(data => {\n            if (data !== undefined){\n                // eslint-disable-next-line\n                data.map(code => {\n                    this.handleAddCourse(this.getCourseByCode(code));\n                });\n            }\n        }).catch(_ => {\n            this.setState({alertMsg: \"Must courses for your department are not available\", errorDept: true});\n        });\n    }\n\n    handleAlertClose(){\n        this.setState({alertMsg: \"\"});\n    }\n    handleDeleteCourse(i){\n        const newSelectedCourses = this.state.selectedCourses.slice(0);\n        newSelectedCourses[i] = null;\n        this.setState({selectedCourses: newSelectedCourses});\n    }\n    handleToggle(i, sections){\n        const newSelectedCourses = this.state.selectedCourses.slice(0);\n        newSelectedCourses[i].sections = sections;\n        this.setState({selectedCourses: newSelectedCourses});\n        console.log(\"Course \" + i + \" sections:\" + sections);\n    }\n    handleAddCourse(c){\n        if (c === null){\n            return;\n        }\n        const newSelectedCourses = this.state.selectedCourses.slice(0);\n        newSelectedCourses.push({\n            code: c.code,\n            sections: Array(c.sections.length).fill(true),\n            color: this.state.colorset.getNextColor()\n        });\n        this.setState({selectedCourses: newSelectedCourses});\n    }\n    handleChangeSettings(s){\n        this.setState({settings: s});\n    }\n    handleScheduleComplete(scenarios){\n        const scenariosToSubmit = Array(0);\n        scenarios.map(s => {\n            const scenarioToPush = Array(0);\n            s.map(c => {\n                const currentCourse = this.getCourseByCode(c.code);\n                const currentSection = this.getSectionByNumber(currentCourse, c.section);\n                const currentColor = this.getColorByCourseCode(c.code);\n                scenarioToPush.push({\n                    abbreviation: currentCourse.abbreviation,\n                    section: currentSection,\n                    color: currentColor\n                });\n            });\n            scenariosToSubmit.push(scenarioToPush);\n        });\n        this.props.onSchedule(scenariosToSubmit);\n    }\n    handleScheduleBegin(){\n        this.setState({alertMsg: \"\", errorDept: false, errorSemester: false, errorSurname: false});\n        if (this.state.department.length < 2){\n            this.setState({alertMsg: \"Please enter a correct department\", errorDept: true});\n            return;\n        }\n        if (this.state.surname.length < 2 && this.state.settings.checkSurname){\n            this.setState({alertMsg: \"Please enter at least 2 letters of your surname\", errorSurname: true});\n            return;\n        }\n        const courseData = Array(0);\n        // eslint-disable-next-line\n        this.state.selectedCourses.map(c => {\n            if (c === null){\n                return null;\n            }\n            const currentCourse = this.getCourseByCode(c.code);\n            const courseToPush = {\n                code: c.code,\n                category: currentCourse.category,\n                checkSurname: this.state.settings.checkSurname,\n                checkCollision: this.state.settings.checkCollision,\n                checkDepartment: this.state.settings.checkDepartment,\n                sections: Array(0)\n            };\n            for(let i = 0; i<currentCourse.sections.length; i++){\n                const sectionToPush = {\n                    sectionNumber: currentCourse.sections[i].sectionNumber,\n                    minYear: currentCourse.sections[i].minYear,\n                    maxYear: currentCourse.sections[i].maxYear,\n                    toggle: c.sections[i],\n                    criteria: currentCourse.sections[i].criteria,\n                    lectureTimes: Array(0)\n                };\n                currentCourse.sections[i].lectureTimes.map(t => sectionToPush.lectureTimes.push(t));\n                courseToPush.sections.push(sectionToPush);\n            }\n            courseData.push(courseToPush);\n        });\n        //console.log(courseData);\n        const calculatedSchedule = compute_schedule(\n            this.state.surname.slice(0,2),\n            this.state.department,\n            0,\n            courseData\n        );\n        //console.log(calculatedSchedule);\n        console.log(calculatedSchedule);\n        this.setState({scenario: calculatedSchedule});\n        this.handleScheduleComplete(calculatedSchedule);\n    }\n    render() {\n        return (\n            <div className={isMobile ? \"control-mobile\" : \"control-wrapper\"}>\n                <Snackbar\n                    open={this.state.alertMsg !== \"\"}\n                    autoHideDuration={5000}\n                    onClose={() => this.handleAlertClose()}\n                >\n                    <MuiAlert elevation={6} variant={\"filled\"} onClose={() => this.handleAlertClose()} severity={\"error\"}>\n                        {this.state.alertMsg}\n                    </MuiAlert>\n                </Snackbar>\n                <div className={\"control-row\"}>\n                    <div className={\"textfield-wrapper\"}>\n                        <TextField\n                            required={this.state.settings.checkSurname}\n                            error={this.state.errorSurname}\n                            label={\"Surname\"}\n                            value={this.state.surname}\n                            inputProps={{ maxLength: 12 }}\n                            variant={\"outlined\"}\n                            onChange={e => this.setState({surname: e.target.value.toUpperCase()})}\n                        />\n                    </div>\n                    <div className={\"textfield-wrapper\"}>\n                        <TextField\n                            required\n                            error={this.state.errorDept}\n                            label={\"Department\"}\n                            value={this.state.department}\n                            inputProps={{ maxLength: 12 }}\n                            variant={\"outlined\"}\n                            onChange={e => this.setState({department: e.target.value.toUpperCase()})}\n                        />\n                    </div>\n                </div>\n                <div className={\"control-row\"}>\n                    <div className={\"textfield-wrapper\"}>\n                        <FormControl className={\"form-control\"}>\n                            <InputLabel>Semester</InputLabel>\n                            <Select\n                                error={this.state.errorSemester}\n                                value={this.state.semester}\n                                onChange={e => this.setState({semester: e.target.value})}\n                            >\n                                {this.renderSemesterSelections(8)}\n                            </Select>\n                            <FormHelperText>Ex: 2nd year Fall semester -> 3</FormHelperText>\n                        </FormControl>\n                    </div>\n                    <div className={\"control-button\"}>\n                        <Button\n                            variant={\"contained\"}\n                            color={\"secondary\"}\n                            startIcon={<AddIcon />}\n                            onClick={() => this.handleAddMustCourse()}>\n                            Add Must Courses\n                        </Button>\n                    </div>\n                    <div className={\"control-button\"}>\n                        <Button\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                            startIcon={<EventAvailableIcon />}\n                            onClick={() => this.handleScheduleBegin()}>\n                            Schedule\n                        </Button>\n                    </div>\n                </div>\n                <AdvancedSettings settings={this.state.settings} onSettingsChange={s => this.handleChangeSettings(s)}/>\n                <Divider />\n                <div className={\"control-row\"}>\n                    <div className={\"centered-row\"}>\n                        Added Courses\n                    </div>\n                </div>\n                <Divider />\n                {this.state.selectedCourses.map((c, i) => {\n                    return (\n                        c !== null?\n                        <CourseCard course={this.getCourseByCode(c.code)}\n                                    onDelete={() => this.handleDeleteCourse(i)}\n                                    onToggle={sections => this.handleToggle(i, sections)}\n                                    color={c.color}/> : null\n                    );\n                })}\n                <AddCourseWidget\n                    courses={this.state.allCourses}\n                    onCourseAdd={c => this.handleAddCourse(c)}/>\n            </div>\n        )\n    }\n}","const schedulerData = [\n    { startDate: '2021-02-20T09:40', endDate: '2021-02-20T11:20', title: 'Meeting' },\n    { startDate: '2021-02-14T12:00', endDate: '2021-02-14T13:30', title: 'Go to\\n a gym' },\n];\n\nexport function getCoursesToDisplay(){\n    return schedulerData;\n}","import React from 'react';\nimport {isMobile} from \"react-device-detect\";\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport {WeeklyProgram} from \"./WeeklyProgram\";\nimport {Controls} from \"./Controls\";\nimport {getCoursesToDisplay} from \"./CoursesToDisplay\";\n\nimport './App.css';\n\nconst theme = createMuiTheme({\n    palette: {\n        secondary: {\n            main: '#71F154'\n        }\n    }\n});\n\nclass App extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            scenarios: []\n        }\n    }\n    render() {\n        //console.log(this.state.scenarios);\n        return (\n          <MuiThemeProvider theme={theme}>\n            <div className=\"App\">\n                <div className={isMobile ? \"column\" : \"row\"}>\n                    <WeeklyProgram coursesToDisplay={getCoursesToDisplay()} scenarios={this.state.scenarios}/>\n                    <Controls onSchedule={s => this.setState({scenarios: s})}/>\n                </div>\n            </div>\n          </MuiThemeProvider>\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}