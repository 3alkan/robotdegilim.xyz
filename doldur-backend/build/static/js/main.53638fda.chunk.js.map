{"version":3,"sources":["img/logo.png","img/title.gif","Colorset.js","ExportCalendar.js","WeeklyProgram.js","Client.js","data/Course.js","schedule.js","SectionInfo.js","CourseAdvancedSettings.js","CourseCard.js","AddCourseWidget.js","AddDontFillWidget.js","AdvancedSettings.js","LoadingDialog/LoadingDialog.js","Controls.js","WelcomeDialog.js","Banner.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Colorset","this","colors","main","secondary","ternary","text","textSection","blackDontFill","iterator","length","console","log","ExportCalendar","props","gapi","window","CLIENT_ID","API_KEY","DISCOVERY_DOCS","SCOPES","date","day","parseInt","slice","hour","min","events","Array","undefined","map","e","type","push","summary","title","start","timeZone","dateTime","convertDay","startDate","end","endDate","recurrence","convertEvents","popUped","load","client","init","apiKey","clientId","discoveryDocs","scope","auth2","getAuthInstance","signIn","then","event","calendar","insert","execute","htmlLink","open","className","Button","variant","color","startIcon","onClick","handleExport","React","Component","DayScaleRow","DontFillBlock","handleOpenColorPalette","setState","anchorEl","currentTarget","handleColorSelect","selectedColor","onChangeDontFillColor","handleClose","state","editing","colorset","onChangeDontFillDescription","target","value","keyCode","Boolean","IconButton","onDontFillDelete","style","padding","fontSize","data","TextField","InputProps","onChange","handleDescriptionChange","onKeyDown","handleTextFieldKeyDown","onBlur","id","aria-controls","aria-haspopup","aria-expanded","Menu","onClose","MenuListProps","PaperProps","backgroundColor","display","gridTemplateColumns","gap","paddingTop","paddingBottom","MenuItem","key","width","height","borderRadius","WeeklyProgram","AppointmentContent","restProps","background","section","classroom","handleChangeDontFillColor","newDescription","handleChangeDontFillDescription","TimeTableCell","onDontFillAdd","getDay","handleDontFillAdd","currentScenario","scrollTo","html2canvas","document","getElementById","canvas","toDataURL","a","createElement","body","appendChild","href","download","click","removeChild","delta","Math","scenarios","max","val","newCurrentScenario","isNaN","coursesToDisplay","scenario","currentScenarioChanged","c","lectureTimes","lt","i","startHour","endHour","abbreviation","sectionNumber","convertTime","startMin","endMin","dontFills","df","description","formatDate","AppointmentLayer","_","convertToEntry","isMobile","styles","mobile","desktop","Paper","currentDate","startDayHour","endDayHour","cellDuration","dayScaleRowComponent","appointmentLayerComponent","CustomAppointment","timeTableCellComponent","appointmentContentComponent","handleScenarioChange","Typography","handleScenarioChangeAbsolute","margin","doCapture","Client","coursesUrl","lastUpdatedUrl","mustUrl","departmentsUrl","statusUrl","scrapeUrl","axios","get","dept","semester","toString","courses","Object","keys","code","courseToPush","search","name","category","sections","sn","s","sectionToPush","instructor","criteria","minYear","maxYear","t","surnameStart","surnameEnd","statusResponse","status","updateResponse","updateData","error","getAllCourses","getCourses","getMusts","surnameCheck","surname","course_surname_start","course_surname_end","alphabet","A","B","C","Ç","D","E","F","G","Ğ","H","I","İ","J","K","L","M","N","O","Ö","P","Q","R","S","Ş","T","U","Ü","V","W","X","Y","Z","surFirstVal","surSecondVal","surStartFirstVal","surStartSecondVal","surEndFirstVal","surEndSecondVal","apply_criteria_sections","department","grade","course","section_passed","toggle","j","criterion","dept_passed","surn_passed","checkDepartment","checkSurname","splice","lectures_intersect","lt1","lt2","check_collision","section1","section2","s1_lt","s2_lt","check_collision_df","df_t","times","compute_schedule","courseNumber","recursive_computation","depth","scenarioToPosh","collision","checkCollision","pop","apply_criteria_courses","SectionInfo","days","ret","sectionDetails","formatTime","Divider","renderCriteria","renderTimes","CourseAdvancedSettings","onSettingsChange","settings","disableCourse","Accordion","AccordionSummary","expandIcon","AccordionDetails","FormControlLabel","control","Checkbox","checked","handleSurnameCheck","label","handleDepartmentCheck","handleCollisionCheck","handleDisableCourse","marginTop","onPreviousColor","marginLeft","onNextColor","CourseCard","selectedSections","sectionCount","expanded","onToggle","onColorChange","getNextColor","getPreviousColor","newSelectedSections","fill","handleToggle","boxes","FormGroup","row","toggleSections","sectionNo","size","onDelete","renderCheckBoxes","handleSettingsChange","handleNextColor","handlePreviousColor","renderSectionDetails","AddCourseWidget","onCourseAdd","paper","FormControl","Select","inputProps","Autocomplete","options","filter","getOptionLabel","option","renderInput","params","v","handleCourseAdd","whiteBackground","AddDontFillWidget","dropdown","labelId","menuItems","Date","renderDayPick","renderHourPick","renderMinPick","maxLength","handleAddDontFill","marginBottom","AdvancedSettings","LoadingDialog","Dialog","DialogContent","CircularProgress","Controls","alertMsg","errorDept","errorSemester","errorSurname","restoreAvailable","restoredInfo","selectedCourses","restoredCourses","allCourses","restoredSettings","lastUpdated","loading","loadingMessage","sendUpdateRequest","restoreData","onLoadingCompleted","getLastUpdated","zoom","innerWidth","outerWidth","ls","n","exists","handleAddCourse","getCourseByCode","catch","newSelectedCourses","scenariosToSubmit","scenarioToPush","currentCourse","currentSection","getSectionByNumber","currentColor","getColorByCourseCode","onSchedule","getHours","getMinutes","set","courseData","formattedDf","formatDf","setTimeout","calculatedSchedule","handleScheduleComplete","Snackbar","autoHideDuration","handleAlertClose","elevation","severity","required","toUpperCase","InputLabel","renderSemesterSelections","FormHelperText","handleAddMustCourse","handleScheduleBegin","handleClearCourses","handleChangeSettings","saveData","loadRestoredData","handleDeleteCourse","handleCourseSettings","handleCourseColor","desc","u","split","WelcomeDialog","aria-labelledby","aria-describedby","DialogTitle","DialogContentText","DialogActions","autoFocus","Banner","src","logo","alt","theme","createMuiTheme","palette","App","loaded","dontFillColorset","newDontFills","getBlack","handleDontFillDelete","handleLoadingCompleted","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.53638fda.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.11e9845d.png\";","module.exports = __webpack_public_path__ + \"static/media/title.81beaf28.gif\";","export class Colorset{\r\n    constructor() {\r\n        this.colors = [\r\n            {\r\n                main: \"#33CDE8\",\r\n                secondary: \"#FFFFFF\",\r\n                ternary: \"#C3F6FF\",\r\n                text: \"#000000\",\r\n                textSection: \"#FFFFFF\"\r\n            },\r\n            {\r\n                main: \"#FF38CB\",\r\n                secondary: \"#FFFFFF\",\r\n                ternary: \"#F7DCFF\",\r\n                text: \"#000000\",\r\n                textSection: \"#FFFFFF\"\r\n            },\r\n            {\r\n                main: \"#FFF040\",\r\n                secondary: \"#FFFFFF\",\r\n                ternary: \"#F7F3C2\",\r\n                text: \"#000000\",\r\n                textSection: \"#FFFFFF\"\r\n            },\r\n            {\r\n                main: \"#71F154\",\r\n                secondary: \"#FFFFFF\",\r\n                ternary: \"#DDF7D7\",\r\n                text: \"#000000\",\r\n                textSection: \"#FFFFFF\"\r\n            },\r\n            {\r\n                main: \"#E82A2A\",\r\n                secondary: \"#FFFFFF\",\r\n                ternary: \"#FFA9A9\",\r\n                text: \"#FFFFFF\",\r\n                textSection: \"#FFFFFF\"\r\n            },\r\n            {\r\n                main: \"#FF8F00\",\r\n                secondary: \"#FFFFFF\",\r\n                ternary: \"#FFD39A\",\r\n                text: \"#000000\",\r\n                textSection: \"#FFFFFF\"\r\n            },\r\n            {\r\n                main: \"#B59FF7\",\r\n                secondary: \"#FFFFFF\",\r\n                ternary: \"#E9E2FE\",\r\n                text: \"#000000\",\r\n                textSection: \"#FFFFFF\"\r\n            },\r\n            {\r\n                main: \"#8D969A\",\r\n                secondary: \"#FFFFFF\",\r\n                ternary: \"#CAD2D5\",\r\n                text: \"#000000\",\r\n                textSection: \"#FFFFFF\"\r\n            },\r\n            {\r\n                main: \"#2CFFD9\",\r\n                secondary: \"#FFFFFF\",\r\n                ternary: \"#CCFFF6\",\r\n                text: \"#000000\",\r\n                textSection: \"#FFFFFF\"\r\n            },\r\n            {\r\n                main: \"#C3F6FF\",\r\n                secondary: \"#FFFFFF\",\r\n                ternary: \"#C3F6FF\",\r\n                text: \"#000000\",\r\n                textSection: \"#FFFFFF\"\r\n            },\r\n            {\r\n                main: \"#F7DCFF\",\r\n                secondary: \"#FFFFFF\",\r\n                ternary: \"#F7DCFF\",\r\n                text: \"#000000\",\r\n                textSection: \"#FFFFFF\"\r\n            },\r\n            {\r\n                main: \"#F7F3C2\",\r\n                secondary: \"#FFFFFF\",\r\n                ternary: \"#F7F3C2\",\r\n                text: \"#000000\",\r\n                textSection: \"#FFFFFF\"\r\n            },\r\n            {\r\n                main: \"#DDF7D7\",\r\n                secondary: \"#FFFFFF\",\r\n                ternary: \"#DDF7D7\",\r\n                text: \"#000000\",\r\n                textSection: \"#FFFFFF\"\r\n            },\r\n            {\r\n                main: \"#FFA9A9\",\r\n                secondary: \"#FFFFFF\",\r\n                ternary: \"#FFA9A9\",\r\n                text: \"#000000\",\r\n                textSection: \"#FFFFFF\"\r\n            },\r\n            {\r\n                main: \"#FFD39A\",\r\n                secondary: \"#FFFFFF\",\r\n                ternary: \"#FFD39A\",\r\n                text: \"#000000\",\r\n                textSection: \"#FFFFFF\"\r\n            },\r\n            {\r\n                main: \"#B6C5FB\",\r\n                secondary: \"#FFFFFF\",\r\n                ternary: \"#B6C5FB\",\r\n                text: \"#000000\",\r\n                textSection: \"#FFFFFF\"\r\n            },\r\n            {\r\n                main: \"#CAD2D5\",\r\n                secondary: \"#FFFFFF\",\r\n                ternary: \"#CAD2D5\",\r\n                text: \"#000000\",\r\n                textSection: \"#FFFFFF\"\r\n            },\r\n            {\r\n                main: \"#CCFFF6\",\r\n                secondary: \"#FFFFFF\",\r\n                ternary: \"#CCFFF6\",\r\n                text: \"#000000\",\r\n                textSection: \"#FFFFFF\"\r\n            },\r\n        ]\r\n        this.blackDontFill = {\r\n            main: \"#000000\",\r\n            secondary: \"#FFFFFF\",\r\n            ternary: \"#000000\",\r\n            text: \"#FFFFFF\",\r\n            textSection: \"#FFFFFF\"\r\n        };\r\n        this.iterator = -1;\r\n    }\r\n    getBlack() {\r\n        return this.blackDontFill;\r\n    }\r\n    getNextColor() {\r\n        if (this.colors.length <= 0){\r\n            return {main: 0, secondary: 0, ternary: 0};\r\n        }\r\n        console.log(\"next color\");\r\n        \r\n        this.iterator = (this.iterator+1)%this.colors.length;\r\n        return this.colors[this.iterator];\r\n    }\r\n\r\n    getPreviousColor() {\r\n        if (this.colors.length <= 0){\r\n            return {main: 0, secondary: 0, ternary: 0};\r\n        }\r\n        this.iterator = this.iterator > 0 ? this.iterator - 1 : this.colors.length - 1;\r\n        return this.colors[this.iterator];\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\nimport {gapi} from \"gapi-script\";\r\n\r\nexport class ExportCalendar extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.gapi = window.gapi;\r\n        this.CLIENT_ID = \"531687826330-d2raf921gt5ur2q5lspcv25ceak6v7e7.apps.googleusercontent.com\";\r\n        this.API_KEY = \"AIzaSyC1JqJ83f1CZ8Otm-lDrpCX443r7OWewbw\";\r\n        this.DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"];\r\n        this.SCOPES = \"https://www.googleapis.com/auth/calendar.events\";\r\n    }\r\n    convertDay(date){\r\n        //           0123456789012345\r\n        //example : '2021-02-20T09:40'\r\n        //2020-10-15T16:30:00+03:00\r\n        //console.log(date);\r\n        //console.log(typeof date);\r\n        const day = parseInt(date.slice(8, 10)) - 14;\r\n        const hour = parseInt(date.slice(11, 13));\r\n        const min = parseInt(date.slice(14));\r\n        return \"2020-10-\" + (12 + day) + \"T\" +\r\n            (hour < 10 ? \"0\" : \"\") + hour + \":\" + (min < 10 ? \"0\" : \"\") + min + \":00+03:00\";\r\n    }\r\n    convertEvents(){\r\n        /*\r\n        * var event = {\r\n            'summary': info[curr].summary,\r\n            'start': {\r\n              'dateTime': info[curr].start.dateTime,\r\n              'timeZone': info[curr].start.timeZone\r\n            },\r\n            'end': {\r\n              'dateTime': info[curr].end.dateTime,\r\n              'timeZone': info[curr].end.timeZone\r\n            },\r\n            'recurrence': [\r\n              'RRULE:FREQ=WEEKLY;COUNT=14'\r\n            ]\r\n          }\r\n        * */\r\n        const events = Array(0);\r\n        if (this.props.events === undefined){\r\n            return [];\r\n        }\r\n        this.props.events.map(e => {\r\n            if (e.type === \"course\"){\r\n                events.push({\r\n                    summary: e.title,\r\n                    start: {\r\n                        timeZone: \"Turkey\",\r\n                        dateTime: this.convertDay(e.startDate)\r\n                    },\r\n                    end: {\r\n                        timeZone: \"Turkey\",\r\n                        dateTime: this.convertDay(e.endDate)\r\n                    },\r\n                    recurrence: [\r\n                        'RRULE:FREQ=WEEKLY;COUNT=14'\r\n                    ]\r\n                });\r\n            }\r\n        });\r\n        return events;\r\n    }\r\n\r\n    handleExport(){\r\n        const events = this.convertEvents();\r\n        let popUped = false;\r\n        events.map(e => console.log(e));\r\n        gapi.load('client:auth2', () => {\r\n            gapi.client.init({\r\n                apiKey: this.API_KEY,\r\n                clientId: this.CLIENT_ID,\r\n                discoveryDocs: this.DISCOVERY_DOCS,\r\n                scope: this.SCOPES,\r\n            });\r\n            gapi.client.load('calendar', 'v3', () => console.log('added to calendar!'))\r\n\r\n            gapi.auth2.getAuthInstance().signIn().then(() => {\r\n                events.map(event => {\r\n                    let request = gapi.client.calendar.events.insert({\r\n                        'calendarId': 'primary',\r\n                        'resource': event,\r\n                    });\r\n                    request.execute(e => {\r\n                        console.log(e);\r\n                        if (e.htmlLink !== undefined && !popUped){\r\n                            popUped = true;\r\n                            window.open(e.htmlLink);\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={\"export-calendar-wrapper\"}>\r\n                <Button variant={\"contained\"}\r\n                        color={\"secondary\"}\r\n                        startIcon={<BackupIcon />} onClick={() => this.handleExport()}>\r\n                    Export to Google\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { Paper, IconButton, Typography, TextField, Button, Menu, MenuItem } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport FastRewindIcon from '@material-ui/icons/FastRewind';\r\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\r\nimport FastForwardIcon from '@material-ui/icons/FastForward';\r\nimport PaletteIcon from '@material-ui/icons/Palette';\r\nimport { ViewState } from \"@devexpress/dx-react-scheduler\";\r\nimport {\r\n    Scheduler,\r\n    WeekView,\r\n    Appointments,\r\n} from '@devexpress/dx-react-scheduler-material-ui';\r\nimport { isMobile } from \"react-device-detect\";\r\nimport { Colorset } from \"./Colorset\";\r\nimport { ExportCalendar } from \"./ExportCalendar\";\r\n\r\nimport \"./WeeklyProgram.css\"\r\nimport html2canvas from 'html2canvas';\r\nimport { selectedGridRowsCountSelector } from \"@material-ui/data-grid\";\r\n\r\nconst currentDate = '2021-02-20';\r\n\r\nclass DayScaleRow extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={\"dayscale-row\"}>\r\n                <div className={\"dayscale-label\"}>\r\n                    Mon\r\n                </div>\r\n                <div className={\"dayscale-label\"}>\r\n                    Tue\r\n                </div>\r\n                <div className={\"dayscale-label\"}>\r\n                    Wed\r\n                </div>\r\n                <div className={\"dayscale-label\"}>\r\n                    Thu\r\n                </div>\r\n                <div className={\"dayscale-label\"}>\r\n                    Fri\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass DontFillBlock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editing: false,\r\n            anchorEl: null,\r\n            selectedColor: null,\r\n        };\r\n        this.colorset = new Colorset;\r\n    }\r\n\r\n    handleOpenColorPalette = (event) => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleColorSelect = (color) => {\r\n        this.setState({ selectedColor: color });\r\n        this.props.onChangeDontFillColor(color);\r\n        this.handleClose();\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleDescriptionChange(e) {\r\n        this.props.onChangeDontFillDescription(e.target.value);\r\n    }\r\n\r\n    handleTextFieldKeyDown(e) {\r\n        if (e.keyCode === 13) {\r\n            this.setState({ editing: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const open = Boolean(this.state.anchorEl);\r\n        const colors = this.colorset.colors;\r\n        return (\r\n            <div className={\"program-text-container-df\"}>\r\n                <div className={\"program-row-df\"}>\r\n                    <IconButton\r\n                        onClick={() => this.props.onDontFillDelete()}\r\n                        style={{ padding: 0 }}\r\n                    >\r\n                        <CloseIcon fontSize={\"small\"} style={{ color: this.props.data.color.text }} />\r\n                    </IconButton>\r\n                    {\r\n                        this.state.editing ?\r\n                            <TextField value={this.props.data.title}\r\n                                className={\"df-description-text-field\"}\r\n                                InputProps={{ style: { color: this.props.data.color.text } }}\r\n                                onChange={e => this.handleDescriptionChange(e)}\r\n                                onKeyDown={e => this.handleTextFieldKeyDown(e)}\r\n                                onBlur={() => this.setState({ editing: false })}\r\n                            /> :\r\n                            <div className={\"program-title-dont-fill\"}\r\n                                style={{ color: this.props.data.color.text }}\r\n                                onClick={() => this.setState({ editing: true })}\r\n                            >\r\n                                {this.props.data.title}\r\n                            </div>\r\n                    }\r\n                    <IconButton style={{ padding: 0 }}\r\n                        id=\"palette-button\"\r\n                        aria-controls={open ? \"palette-menu\" : undefined}\r\n                        aria-haspopup=\"true\"\r\n                        aria-expanded={open ? \"true\" : undefined}\r\n                        onClick={this.handleOpenColorPalette}\r\n                    >\r\n                        <PaletteIcon fontSize={\"small\"} style={{ color: this.props.data.color.text }} />\r\n                    </IconButton>\r\n                    <Menu\r\n                        id=\"palette-menu\"\r\n                        open={open}\r\n                        anchorEl={this.state.anchorEl}\r\n                        onClose={this.handleClose}\r\n                        MenuListProps={{\r\n                            'aria-labelledby': 'palette-button',\r\n                        }}\r\n                        PaperProps={{\r\n                            style: {\r\n                                backgroundColor: \"black\",\r\n                            }\r\n                        }}\r\n                    >\r\n                        <div\r\n                            style={{\r\n                                display: 'grid',\r\n                                gridTemplateColumns: 'repeat(3, 1fr)',\r\n                                gap: '5px',\r\n                                padding: '5px',\r\n                                paddingTop: \"0px\",\r\n                                paddingBottom: \"0px\",\r\n                                backgroundColor: \"black\",\r\n                            }}\r\n                        >\r\n                            {colors.map((color) => (\r\n                                <MenuItem key={color.main} onClick={() => this.handleColorSelect(color)} style={{ padding: 0 }}>\r\n                                    <div style={{\r\n                                        width: '30px',\r\n                                        height: '30px',\r\n                                        backgroundColor: color.main,\r\n                                        borderRadius: '4px'\r\n                                    }}></div>\r\n                                </MenuItem>\r\n                            ))}\r\n                        </div>\r\n                    </Menu>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport class WeeklyProgram extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentScenario: 0\r\n        };\r\n    }\r\n\r\n\r\n    doCapture() {\r\n        window.scrollTo(0, 0);\r\n\r\n        // Convert the div to image (canvas)\r\n        html2canvas(document.getElementById(\"screenshot\")).then(function (canvas) {\r\n\r\n            // Get the image data as JPEG and 0.9 quality (0.0 - 1.0)\r\n            console.log(canvas.toDataURL(\"image/jpeg\", 0.9));\r\n            const a = document.createElement('a');\r\n            document.body.appendChild(a);\r\n            a.href = canvas.toDataURL(\"image/jpeg\", 0.9);\r\n            a.download = \"schedule.jpeg\";\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        });\r\n    }\r\n\r\n    handleScenarioChange(delta) {\r\n        this.setState({\r\n            currentScenario: Math.min(this.props.scenarios.length - 1, Math.max(0,\r\n                this.state.currentScenario + delta))\r\n        });\r\n    }\r\n    handleScenarioChangeAbsolute(val) {\r\n        const newCurrentScenario = isNaN(val) ? 1 : val;\r\n        this.setState({\r\n            currentScenario: Math.min(this.props.scenarios.length - 1, Math.max(0,\r\n                newCurrentScenario - 1))\r\n        });\r\n    }\r\n    handleDontFillAdd(startDate, endDate) {\r\n        this.props.onDontFillAdd(startDate, endDate, \"FULL\");\r\n    }\r\n    handleChangeDontFillColor(startDate, color) {\r\n        this.props.onChangeDontFillColor(startDate, color);\r\n    }\r\n    handleChangeDontFillDescription(startDate, newDescription) {\r\n        this.props.onChangeDontFillDescription(startDate, newDescription);\r\n    }\r\n    convertTime(day, hour, min) {\r\n        //example : '2021-02-20T09:40'\r\n        return \"2021-02-\" + (14 + day) + \"T\" + (hour < 10 ? \"0\" : \"\") + hour + \":\" + (min < 10 ? \"0\" : \"\") + min;\r\n    }\r\n    convertToEntry() {\r\n        /*if (this.props.scenarios.length <= 0){\r\n            return [];\r\n        }*/\r\n        const coursesToDisplay = Array(0);\r\n        let scenario = Array(0);\r\n        let currentScenarioChanged = false;\r\n        if (this.props.scenarios.length > 0 && this.state.currentScenario >= this.props.scenarios.length) {\r\n            this.setState({ currentScenario: 0 });\r\n            currentScenarioChanged = true;\r\n        }\r\n        scenario = currentScenarioChanged ? this.props.scenarios[0] :\r\n            this.props.scenarios[this.state.currentScenario];\r\n        if (this.props.scenarios.length === 0) {\r\n            scenario = [];\r\n        }\r\n        scenario.map(c => {\r\n            //console.log(c);\r\n            c.section.lectureTimes.map(lt => {\r\n                for (let i = lt.startHour; i < lt.endHour; i++) {\r\n                    coursesToDisplay.push({\r\n                        type: \"course\",\r\n                        title: c.abbreviation,\r\n                        section: c.section.sectionNumber,\r\n                        classroom: lt.classroom !== undefined ? lt.classroom : \"-\",\r\n                        startDate: this.convertTime(lt.day, i, lt.startMin + 3),\r\n                        endDate: this.convertTime(lt.day, i + 1, lt.endMin + 5),\r\n                        color: c.color\r\n                    })\r\n                }\r\n            });\r\n        });\r\n        this.props.dontFills.map(df => {\r\n            coursesToDisplay.push({\r\n                type: \"dontFill\",\r\n                title: df.description,\r\n                color: {\r\n                    main: df.color.main,\r\n                    text: df.color.text,\r\n                },\r\n                startDate: df.startDate,\r\n                endDate: df.endDate\r\n            });\r\n        });\r\n        return coursesToDisplay;\r\n    }\r\n    CustomAppointment({ formatDate, ...restProps }) {\r\n        return (\r\n            <WeekView.AppointmentLayer {...restProps} formatDate={(_) => \"\"} className={\"custom-appointment\"} />\r\n        )\r\n    }\r\n    AppointmentContent = ({ data, ...restProps }) => {\r\n        return (\r\n            <Appointments.AppointmentContent data={data}\r\n                {...restProps}\r\n                className={\"program-appointment\"}\r\n                style={{ background: data.color.main }}>\r\n                {data.type === \"course\" ?\r\n                    <div className={\"program-text-container\"}>\r\n                        <div className={\"program-title\"} style={{ color: data.color.text }}>\r\n                            {data.title + \"/\" + data.section}\r\n                        </div>\r\n                        <div className={\"program-title-bottom\"} style={{ color: data.color.text }}>\r\n                            {data.classroom}\r\n                        </div>\r\n                    </div> :\r\n                    <DontFillBlock\r\n                        data={data}\r\n                        onDontFillDelete={() => this.props.onDontFillDelete(data.startDate)}\r\n                        onChangeDontFillColor={(color) => this.handleChangeDontFillColor(data.startDate, color)}\r\n                        onChangeDontFillDescription={(newDescription) =>\r\n                            this.handleChangeDontFillDescription(data.startDate, newDescription)}\r\n                    />\r\n                }\r\n            </Appointments.AppointmentContent>\r\n        )\r\n    }\r\n    TimeTableCell = ({ startDate, endDate, onDontFillAdd, ...restProps }) => {\r\n        if (startDate.getDay() > 4) {\r\n            return <WeekView.TimeTableCell {...restProps} style={{ width: \"0\" }} />\r\n        }\r\n        return (\r\n            <WeekView.TimeTableCell\r\n                {...restProps}\r\n                onClick={() => this.handleDontFillAdd(startDate, endDate)} />\r\n        )\r\n    }\r\n    render() {\r\n        const data = this.convertToEntry();\r\n        return (\r\n            <div style={isMobile ? styles.mobile : styles.desktop}>\r\n                <Paper id=\"screenshot\">\r\n                    <Scheduler\r\n                        id={\"scheduler\"}\r\n                        data={data}\r\n                    >\r\n                        <ViewState\r\n                            currentDate={currentDate}\r\n                        />\r\n                        <WeekView\r\n                            startDayHour={7.667}\r\n                            endDayHour={17.5}\r\n                            cellDuration={60}\r\n                            dayScaleRowComponent={DayScaleRow}\r\n                            appointmentLayerComponent={this.CustomAppointment}\r\n                            timeTableCellComponent={this.TimeTableCell}\r\n                        />\r\n                        <Appointments appointmentContentComponent={this.AppointmentContent} />\r\n                    </Scheduler>\r\n                </Paper>\r\n                <div className={\"program-vertical\"}>\r\n                    {this.props.scenarios.length > 0 ?\r\n                        <div className={\"program-row\"}>\r\n                            <IconButton onClick={() => this.handleScenarioChange(-10)}>\r\n                                <FastRewindIcon fontSize={\"small\"} />\r\n                            </IconButton>\r\n                            <IconButton onClick={() => this.handleScenarioChange(-1)}>\r\n                                <KeyboardArrowLeftIcon fontSize={\"small\"} />\r\n                            </IconButton>\r\n                            <div className={\"program-typo-wrapper\"}>\r\n                                <Typography>\r\n                                    {\"Scenario \"}\r\n                                </Typography>\r\n                            </div>\r\n                            <div className={\"program-textfield-wrapper\"}>\r\n                                <TextField className={\"program-textfield\"}\r\n                                    type={\"number\"}\r\n                                    value={this.state.currentScenario + 1}\r\n                                    onChange={e => this.handleScenarioChangeAbsolute(parseInt(e.target.value))} />\r\n                            </div>\r\n                            <div className={\"program-typo-wrapper\"}>\r\n                                <Typography>\r\n                                    {\" of \" + this.props.scenarios.length}\r\n                                </Typography>\r\n                            </div>\r\n                            <IconButton onClick={() => this.handleScenarioChange(1)}>\r\n                                <KeyboardArrowRightIcon fontSize={\"small\"} />\r\n                            </IconButton>\r\n                            <IconButton onClick={() => this.handleScenarioChange(10)}>\r\n                                <FastForwardIcon fontSize={\"small\"} />\r\n                            </IconButton>\r\n                        </div> : null}\r\n                    {this.props.scenarios.length > 0 && !isMobile ? <div className={\"program-calendar-wrapper\"}>\r\n                        <ExportCalendar events={data} />\r\n                    </div> : null}\r\n                    <Button\r\n                        variant={\"contained\"}\r\n                        color={\"primary\"}\r\n                        style={{ margin: \"6pt\" }}\r\n                        startIcon={<PhotoCameraIcon />}\r\n                        onClick={() => this.doCapture()}\r\n                    >\r\n                        Save as image\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    mobile: {\r\n        margin: 12,\r\n        width: \"100%\",\r\n    },\r\n    desktop: {\r\n        margin: 12,\r\n        width: \"60%\",\r\n    },\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport class Client {\r\n    constructor() {\r\n        // S3 urls\r\n        this.coursesUrl = \"https://s3.amazonaws.com/cdn.robotdegilim.xyz/data.json\";\r\n        this.lastUpdatedUrl = \"https://s3.amazonaws.com/cdn.robotdegilim.xyz/lastUpdated.json\";\r\n        this.mustUrl = \"https://s3.amazonaws.com/cdn.robotdegilim.xyz/musts.json\";\r\n        this.departmentsUrl = \"https://s3.amazonaws.com/cdn.robotdegilim.xyz/departments.json\"\r\n        this.statusUrl = \"https://s3.amazonaws.com/cdn.robotdegilim.xyz/status.json\"\r\n        this.scrapeUrl=\"https://robotdegilim-xyz.fly.dev/run-scrape\"\r\n    }\r\n    async getLastUpdated() {\r\n        const data = (await axios.get(this.lastUpdatedUrl)).data;\r\n        console.log(\"Last updated = \" + data);\r\n        return data;\r\n    }\r\n    async getMusts(dept, semester) {\r\n        const data = (await axios.get(this.mustUrl)).data;\r\n        console.log(data);\r\n        return data[dept][semester.toString()];\r\n    }\r\n    async getCourses() {\r\n        const data = (await axios.get(this.coursesUrl)).data;\r\n        const courses = Array(0);\r\n        // eslint-disable-next-line\r\n        Object.keys(data).map(code => {\r\n            const courseToPush = {\r\n                code: code,\r\n                abbreviation: data[code][\"Course Name\"].slice(0, data[code][\"Course Name\"].search(\" \")),\r\n                name: data[code][\"Course Name\"].slice(data[code][\"Course Name\"].search(\"-\") + 2),\r\n                category: 0,\r\n                sections: Array(0)\r\n            };\r\n            const sectionNumbers = Object.keys(data[code][\"Sections\"]);\r\n            // eslint-disable-next-line\r\n            sectionNumbers.map(sn => {\r\n                const s = data[code][\"Sections\"][sn];\r\n                const sectionToPush = {\r\n                    instructor: s[\"i\"][0],\r\n                    sectionNumber: sn,\r\n                    criteria: Array(0),\r\n                    minYear: 0,\r\n                    maxYear: 0,\r\n                    lectureTimes: Array(0)\r\n                };\r\n                // eslint-disable-next-line\r\n                s[\"t\"].map(t => {\r\n                    sectionToPush.lectureTimes.push({\r\n                        classroom: t[\"p\"],\r\n                        day: t[\"d\"],\r\n                        startHour: parseInt(t[\"s\"].slice(0, t[\"s\"].search(\":\"))),\r\n                        startMin: parseInt(t[\"s\"].slice(t[\"s\"].search(\":\") + 1)),\r\n                        endHour: parseInt(t[\"e\"].slice(0, t[\"e\"].search(\":\"))),\r\n                        endMin: parseInt(t[\"e\"].slice(t[\"e\"].search(\":\") + 1)),\r\n                    });\r\n                });\r\n                // eslint-disable-next-line\r\n                s[\"c\"].map(c => {\r\n                    sectionToPush.criteria.push({\r\n                        dept: c[\"d\"],\r\n                        surnameStart: c[\"s\"],\r\n                        surnameEnd: c[\"e\"]\r\n                    });\r\n                });\r\n                courseToPush.sections.push(sectionToPush);\r\n            });\r\n            //console.log(courseToPush);\r\n            //console.log(data[code]);\r\n            courses.push(courseToPush);\r\n        });\r\n        return courses;\r\n    }\r\n\r\n    async sendUpdateRequest() {\r\n        try {\r\n            // Fetch the status from S3\r\n            const statusResponse = await axios.get(this.statusUrl);\r\n            const statusData = statusResponse.data;\r\n    \r\n            // Check if the status is 'idle'\r\n            if (statusData.status === 'idle') {\r\n                // Send request to the backend to start the scraping\r\n                const updateResponse = await axios.get(this.scrapeUrl);\r\n                const updateData = updateResponse.data; // No need for .json() with axios\r\n                console.log('Response of Update request:', updateData);\r\n                // Handle response data or update component state if needed\r\n            } else {\r\n                console.log('Status is not idle. No update request sent.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Failed to send update request:', error);\r\n            // Handle errors\r\n        }\r\n    }    \r\n\r\n}\r\n","import {Client} from \"../Client\";\r\n// eslint-disable-next-line\r\nconst exampleCourses = [\r\n    {\r\n        code: 5710213,\r\n        abbreviation: \"CENG213\",\r\n        name: \"Data Structures\",\r\n        category: 0,\r\n        sections: [\r\n            {\r\n                instructor: \"Yusuf Sahillioğlu\",\r\n                criteria: [\r\n                    {\r\n                        dept: \"CENG\",\r\n                        surnameStart: \"AA\",\r\n                        surnameEnd: \"FF\"\r\n                    },\r\n                    {\r\n                        dept: \"EE\",\r\n                        surnameStart: \"AA\",\r\n                        surnameEnd: \"ZZ\"\r\n                    }\r\n                ],\r\n                minYear: 0,\r\n                maxYear: 0,\r\n                lectureTimes: [\r\n                    {\r\n                        classroom: \"BMB-1\",\r\n                        day: 0,\r\n                        startHour: 8,\r\n                        startMin: 40,\r\n                        endHour: 10,\r\n                        endMin: 30\r\n                    },\r\n                    {\r\n                        classroom: \"BMB-4\",\r\n                        day: 2,\r\n                        startHour: 15,\r\n                        startMin: 40,\r\n                        endHour: 17,\r\n                        endMin: 30\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                instructor: \"Cevat Şener\",\r\n                criteria: [\r\n                    {\r\n                        dept: \"CENG\",\r\n                        surnameStart: \"FG\",\r\n                        surnameEnd: \"ZZ\"\r\n                    },\r\n                    {\r\n                        dept: \"ME\",\r\n                        surnameStart: \"AA\",\r\n                        surnameEnd: \"ZZ\"\r\n                    }\r\n                ],\r\n                minYear: 0,\r\n                maxYear: 0,\r\n                lectureTimes: [\r\n                    {\r\n                        classroom: \"U-3\",\r\n                        day: 2,\r\n                        startHour: 10,\r\n                        startMin: 40,\r\n                        endHour: 12,\r\n                        endMin: 30\r\n                    },\r\n                    {\r\n                        classroom: \"CZ-14\",\r\n                        day: 6,\r\n                        startHour: 15,\r\n                        startMin: 40,\r\n                        endHour: 17,\r\n                        endMin: 30\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        code: 5710140,\r\n        abbreviation: \"CENG140\",\r\n        name: \"C Programming\",\r\n        category: 1,\r\n        sections: [\r\n            {\r\n                instructor: \"Göktürk Üçoluk\",\r\n                criteria: [\r\n                    {\r\n                        dept: \"CENG\",\r\n                        surnameStart: \"AA\",\r\n                        surnameEnd: \"ZZ\"\r\n                    }\r\n                ],\r\n                minYear: 0,\r\n                maxYear: 0,\r\n                lectureTimes: [\r\n                    {\r\n                        classroom: \"BMB-1\",\r\n                        day: 0,\r\n                        startHour: 8,\r\n                        startMin: 40,\r\n                        endHour: 10,\r\n                        endMin: 30\r\n                    },\r\n                    {\r\n                        classroom: \"BMB-5\",\r\n                        day: 2,\r\n                        startHour: 15,\r\n                        startMin: 40,\r\n                        endHour: 17,\r\n                        endMin: 30\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\nexport async function getAllCourses(){\r\n    const client = new Client();\r\n    return await client.getCourses();\r\n}\r\nexport async function getMusts(dept, semester){\r\n    const client = new Client();\r\n    return client.getMusts(dept, semester);\r\n}\r\nexport function getCourseByCategory(category){\r\n    if (category < 0){\r\n        return getAllCourses();\r\n    }\r\n    return getAllCourses().filter(c => c.category === category);\r\n}\r\nexport function filterCourses(courses, category){\r\n    if (category < 0){\r\n        return courses;\r\n    }\r\n    return courses.filter(c => c.category === category);\r\n}\r\n","function apply_criteria_courses(surname, department, grade, courses) {\r\n    for (var i = courses.length - 1 ; i >= 0 ; i--) {\r\n        courses[i] = apply_criteria_sections(surname, department, grade, courses[i]);\r\n\r\n        if(courses[i].sections.length === 0) {\r\n            // Drop Course\r\n            courses.splice(i, 1);\r\n        }\r\n    }\r\n    return courses;\r\n}\r\n\r\nfunction surnameCheck(surname, course_surname_start, course_surname_end) {\r\n    var alphabet = {\r\n        A : 1,\r\n        B : 2,\r\n        C : 3,\r\n        Ç : 4,\r\n        D : 5,\r\n        E : 6,\r\n        F : 7,\r\n        G : 8,\r\n        Ğ : 9,\r\n        H : 10,\r\n        I : 11,\r\n        İ : 12,\r\n        J : 13,\r\n        K : 14,\r\n        L : 15,\r\n        M : 16,\r\n        N : 17,\r\n        O : 18,\r\n        Ö : 19,\r\n        P : 20,\r\n        Q : 21,\r\n        R : 22,\r\n        S : 23,\r\n        Ş : 24,\r\n        T : 25,\r\n        U : 26,\r\n        Ü : 27,\r\n        V : 28,\r\n        W : 29,\r\n        X : 30,\r\n        Y : 31,\r\n        Z : 32\r\n    }\r\n    \r\n    var surFirstVal = alphabet[surname[0]];\r\n    var surSecondVal = alphabet[surname[1]];\r\n    var surStartFirstVal = alphabet[course_surname_start[0]];\r\n    var surStartSecondVal = alphabet[course_surname_start[1]];\r\n    var surEndFirstVal = alphabet[course_surname_end[0]];\r\n    var surEndSecondVal = alphabet[course_surname_end[1]];\r\n\r\n    if(surStartFirstVal < surFirstVal && surFirstVal < surEndFirstVal) {\r\n        return true;\r\n    }\r\n    if((surStartFirstVal === surFirstVal && surFirstVal < surEndFirstVal)\r\n        && (surStartSecondVal <= surStartSecondVal)) {\r\n        return true;\r\n    }\r\n    if((surStartFirstVal < surFirstVal && surFirstVal === surEndFirstVal)\r\n        && (surSecondVal <= surEndSecondVal)) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction apply_criteria_sections(surname, department, grade, course) {\r\n    for(var i = course.sections.length - 1; i >= 0 ; i--) {\r\n        var section_passed = false;\r\n        if(course.sections[i].toggle === true) {\r\n            for(var j = 0 ; j < course.sections[i].criteria.length ; j++) {\r\n                let criterion = course.sections[i].criteria[j];\r\n                var dept_passed = false;\r\n                var surn_passed = false;\r\n                if(course.checkDepartment === false) {\r\n                    dept_passed = true;\r\n                } else {\r\n                    if(criterion.dept === \"ALL\" || criterion.dept === department) {\r\n                        dept_passed = true;\r\n                    }\r\n                }\r\n                if(course.checkSurname === false) {\r\n                    surn_passed = true;\r\n                } else {\r\n                    if(surnameCheck(surname, criterion.surnameStart, criterion.surnameEnd) === true) {\r\n                        surn_passed = true;\r\n                    }\r\n                }\r\n                \r\n                if(dept_passed === true && surn_passed === true) {\r\n                    section_passed = true;\r\n                }\r\n            }\r\n        }\r\n        \r\n        if(section_passed === false) {\r\n            course.sections.splice(i, 1);\r\n        }\r\n    }\r\n    return course;\r\n}\r\n\r\n\r\nfunction lectures_intersect(lt1, lt2) {\r\n    if (lt1.day !== lt2.day                      // Different Days\r\n        || lt1.startHour > lt2.endHour          // L1 starts after L2 ends by hour\r\n        || lt2.startHour > lt1.endHour          // L2 starts after L1 ends by hour\r\n        || (lt1.startHour === lt2.endHour        // L1 starts after L2 ends by min\r\n            && lt1.startMin > lt2.endMin)\r\n        || (lt2.startHour === lt1.endHour        // L2 starts after L1 ends by min\r\n            && lt2.startMin > lt1.endMin)\r\n            ) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction check_collision(section1, section2) {\r\n    const s1_lt = section1.lectureTimes;\r\n    const s2_lt = section2.lectureTimes;\r\n\r\n    for (var i = 0 ; i < s1_lt.length ; i++) {\r\n        for (var j = 0 ; j < s2_lt.length ; j++) {\r\n            if(lectures_intersect(s1_lt[i], s2_lt[j]) === true) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction check_collision_df(section1, df) {\r\n    const s1_lt = section1.lectureTimes;\r\n    const df_t = df.times;\r\n\r\n    for (var i = 0 ; i < s1_lt.length ; i++) {\r\n        for (var j = 0 ; j < df_t.length ; j++) {\r\n            if(lectures_intersect(s1_lt[i], df_t[j]) === true) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\n\r\n// returns array of code + sections\r\nexport function compute_schedule(surname, department, grade, courses, dontFills) {\r\n    let courseNumber = courses.length;\r\n    courses = apply_criteria_courses(surname, department, grade, courses);\r\n    let scenarios = [];\r\n    recursive_computation(courses, dontFills, 0, [], scenarios, courseNumber);\r\n\r\n    return scenarios;\r\n}\r\n\r\nfunction recursive_computation(courses, dontFills, depth, scenario, scenarios, courseNumber) {\r\n    if(depth === courses.length) {\r\n        const scenarioToPosh = Array(0);\r\n        scenario.map(c => {\r\n            scenarioToPosh.push({\r\n                code: c.code,\r\n                section: c.section.sectionNumber,\r\n            });\r\n        });\r\n        if(scenarioToPosh.length == courseNumber) {\r\n            scenarios.push(scenarioToPosh);\r\n        }\r\n        return;\r\n    }\r\n    for(var i = 0 ; i < courses[depth].sections.length ; i++) {\r\n        var collision = false;\r\n        for(var j = 0 ; j < scenario.length ; j++) {\r\n            if(courses[depth].checkCollision == true && scenario[j].collision == true\r\n                && check_collision(courses[depth].sections[i], scenario[j].section) === true) {\r\n                collision = true;\r\n            }\r\n        }\r\n        for(var j = 0 ; j < dontFills.length ; j++) {\r\n            if(check_collision_df(courses[depth].sections[i], dontFills[j]) === true) {\r\n                collision = true;\r\n            }  \r\n        }\r\n        if(collision === false) {\r\n            scenario.push({\r\n                code: courses[depth].code,\r\n                section: courses[depth].sections[i],\r\n                collision: courses[depth].checkCollision\r\n            }\r\n            );\r\n            recursive_computation(courses, dontFills, depth + 1, scenario, scenarios, courseNumber);\r\n            scenario.pop();\r\n        }\r\n        \r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {Divider} from \"@material-ui/core\";\r\n\r\nimport \"./SectionInfo.css\"\r\n\r\nexport class SectionInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.days = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\r\n    }\r\n    formatTime(t){\r\n        return t > 9 ? t.toString() : \"0\" + t.toString();\r\n    }\r\n    getDepartmentCriteria(){\r\n        let ret = \"\";\r\n        for (let i = 0; i<this.props.sectionDetails.dept.length; i++){\r\n            ret += this.props.sectionDetails.dept[i] + \" \";\r\n        }\r\n        return ret;\r\n    }\r\n    renderTimes(){\r\n        const times = Array(0);\r\n        // eslint-disable-next-line\r\n        this.props.sectionDetails.lectureTimes.map(t => {\r\n            times.push(\r\n                <div className={\"section-date\"} style={{background: this.props.color.ternary}}>\r\n                    <div className={\"time-row\"}>\r\n                        {this.days[t.day] + \" \" + t.startHour + \".\" + this.formatTime(t.startMin) + \"-\" +\r\n                            t.endHour + \".\" + this.formatTime(t.endMin)\r\n                        }\r\n                    </div>\r\n                    <div className={\"time-row\"}>\r\n                        {\"Classroom: \" + t.classroom}\r\n                    </div>\r\n                </div>);\r\n        });\r\n        return times;\r\n    }\r\n    renderCriteria(c){\r\n        return (\r\n            <div className={\"section-row\"}>\r\n                {\"Department: \" + c.dept + \" Surname: \" + c.surnameStart + \"-\" + c.surnameEnd}\r\n            </div>\r\n        )\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={\"section-info\"} style={{background: this.props.color.secondary}}>\r\n                <div>\r\n                    {\"Section \" + this.props.sectionDetails.sectionNumber}\r\n                </div>\r\n                <Divider />\r\n                <div className={\"section-row\"}>\r\n                    {\"Instructor: \" + this.props.sectionDetails.instructor}\r\n                </div>\r\n                {this.props.sectionDetails.criteria.map(c => this.renderCriteria(c))}\r\n                <div className={\"section-row\"}>\r\n                    {this.renderTimes()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport {\r\n    Accordion,\r\n    AccordionSummary,\r\n    AccordionDetails,\r\n    Typography,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    Divider,\r\n    Button\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport PaletteIcon from '@material-ui/icons/Palette';\r\nimport TuneIcon from '@material-ui/icons/Tune';\r\n\r\nimport \"./CourseAdvancedSettings.css\"\r\n\r\nexport class CourseAdvancedSettings extends React.Component{\r\n    handleSurnameCheck(){\r\n        this.props.onSettingsChange({\r\n            checkSurname: !this.props.settings.checkSurname,\r\n            checkDepartment: this.props.settings.checkDepartment,\r\n            checkCollision: this.props.settings.checkCollision,\r\n            disableCourse: this.props.settings.disableCourse,\r\n        });\r\n    }\r\n    handleDepartmentCheck(){\r\n        this.props.onSettingsChange({\r\n            checkSurname: this.props.settings.checkSurname,\r\n            checkDepartment: !this.props.settings.checkDepartment,\r\n            checkCollision: this.props.settings.checkCollision,\r\n            disableCourse: this.props.settings.disableCourse,\r\n        });\r\n    }\r\n    handleCollisionCheck(){\r\n        this.props.onSettingsChange({\r\n            checkSurname: this.props.settings.checkSurname,\r\n            checkDepartment: this.props.settings.checkDepartment,\r\n            checkCollision: !this.props.settings.checkCollision,\r\n            disableCourse: this.props.settings.disableCourse,\r\n        });\r\n    }\r\n    handleDisableCourse(){\r\n        this.props.onSettingsChange({\r\n            checkSurname: this.props.settings.checkSurname,\r\n            checkDepartment: this.props.settings.checkDepartment,\r\n            checkCollision: this.props.settings.checkCollision,\r\n            disableCourse: !this.props.settings.disableCourse,\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className={\"course-settings-wrapper\"}>\r\n                <Accordion style={{background: this.props.color.secondary}}>\r\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls={\"panel1a-content\"}>\r\n                        <div className={\"course-settings-row\"}>\r\n                            <TuneIcon color={\"primary\"} fontSize={\"large\"} />\r\n                            <div className={\"settings-typo\"}>\r\n                                <Typography>Advanced Settings</Typography>\r\n                            </div>\r\n                        </div>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <div className={\"settings-accordion\"}>\r\n                            <Divider />\r\n                            <div className={\"settings-row\"}>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={this.props.settings.checkSurname}\r\n                                            onChange={() => this.handleSurnameCheck()}\r\n                                            color={\"primary\"}\r\n                                        />}\r\n                                    label={\"Check surname\"}/>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={this.props.settings.checkDepartment}\r\n                                            onChange={() => this.handleDepartmentCheck()}\r\n                                            color={\"primary\"}\r\n                                        />}\r\n                                    label={\"Check department\"}/>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={this.props.settings.checkCollision}\r\n                                            onChange={() => this.handleCollisionCheck()}\r\n                                            color={\"primary\"}\r\n                                        />}\r\n                                    label={\"Check collision\"}/>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={this.props.settings.disableCourse}\r\n                                            onChange={() => this.handleDisableCourse()}\r\n                                            color={\"primary\"}\r\n                                        />}\r\n                                    label={\"Disable course\"}/>\r\n                            </div>\r\n                            <Divider />\r\n                            <div className={\"settings-row\"}>\r\n                                <Button variant={\"contained\"}\r\n                                        color={\"primary\"}\r\n                                        startIcon={<PaletteIcon />}\r\n                                        style={{marginTop: \"6pt\"}}\r\n                                        onClick={() => this.props.onPreviousColor()}>\r\n                                    Prev Color\r\n                                </Button>\r\n                                <Button variant={\"contained\"}\r\n                                        color={\"primary\"}\r\n                                        startIcon={<PaletteIcon />}\r\n                                        style={{marginTop: \"6pt\", marginLeft: \"6pt\"}}\r\n                                        onClick={() => this.props.onNextColor()}>\r\n                                    Next Color\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n    Accordion,\r\n    AccordionDetails,\r\n    AccordionSummary,\r\n    Typography,\r\n    FormGroup,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    Divider,\r\n    Button,\r\n    IconButton\r\n} from \"@material-ui/core\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport {Colorset} from \"./Colorset\";\r\nimport {SectionInfo} from \"./SectionInfo\";\r\nimport {CourseAdvancedSettings} from \"./CourseAdvancedSettings\";\r\n\r\nimport \"./CourseCard.css\"\r\n\r\nexport class CourseCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedSections: this.props.sections.slice(0),\r\n            sectionCount: props.course.sections.length,\r\n            colorset: new Colorset(),\r\n\r\n            expanded: false,\r\n        }\r\n    }\r\n\r\n    handleToggle(sections){\r\n        this.props.onToggle(sections);\r\n    }\r\n    handleSettingsChange(settings){\r\n        this.props.onSettingsChange(settings);\r\n    }\r\n    handleNextColor(){\r\n        this.props.onColorChange(this.state.colorset.getNextColor());\r\n    }\r\n    handlePreviousColor(){\r\n        this.props.onColorChange(this.state.colorset.getPreviousColor());\r\n    }\r\n    toggleSections(){\r\n        const newSelectedSections = Array(this.state.sectionCount).fill(!this.state.selectedSections[0]);\r\n        this.setState({selectedSections: newSelectedSections});\r\n        this.handleToggle(newSelectedSections);\r\n    }\r\n\r\n    renderCheckBoxes() {\r\n        if (this.state.sectionCount <= 0){\r\n            return null;\r\n        }\r\n        const boxes = Array(0);\r\n        for (let i = 0; i < this.state.sectionCount; i++){\r\n            boxes.push(\r\n                <FormControlLabel\r\n                    control={\r\n                        <Checkbox\r\n                            checked={this.state.selectedSections[i]}\r\n                            onChange={_ => {\r\n                                    const newSelectedSections = this.state.selectedSections.slice(0);\r\n                                    newSelectedSections[i] = !newSelectedSections[i];\r\n                                    this.setState({selectedSections: newSelectedSections});\r\n                                    this.handleToggle(newSelectedSections);\r\n                                }\r\n                            }\r\n                            color={\"primary\"}\r\n                        />\r\n                    }\r\n                    label={this.props.course.sections[i].sectionNumber}\r\n                />);\r\n        }\r\n        return (\r\n            <FormGroup row>\r\n                {boxes}\r\n                <Button\r\n                    color={\"primary\"}\r\n                    onClick={() => this.toggleSections()}\r\n                >\r\n                    Toggle\r\n                </Button>\r\n            </FormGroup>\r\n        )\r\n    }\r\n\r\n    renderSectionDetails(){\r\n        if (!this.state.expanded) {\r\n            return [];\r\n        }\r\n\r\n        const ret = Array(0);\r\n        for (let i = 0; i<this.props.course.sections.length; i++){\r\n            ret.push(<SectionInfo\r\n                sectionNo={i+1}\r\n                sectionDetails={this.props.course.sections[i]}\r\n                color={this.props.color}\r\n            />);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"course-card\"} style={{background: this.props.color.main}}>\r\n                <div className={\"course-row\"}>\r\n                    <IconButton size={\"small\"} onClick={() => this.props.onDelete()}>\r\n                        <DeleteIcon fontSize={\"inherit\"}/>\r\n                    </IconButton>\r\n                    <Accordion className={\"course-accordion\"}\r\n                               style={{background: this.props.color.main, width: \"100%\"}}\r\n                               onChange={() => this.setState({expanded: !this.state.expanded})}\r\n                    >\r\n                        <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls={\"panel1a-content\"}>\r\n                            <div className={\"course-row\"}>\r\n                                <Typography style={{color: this.props.color.text}}>\r\n                                    {this.props.course.abbreviation + \": \" + this.props.course.name}\r\n                                </Typography>\r\n                            </div>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                            <div className={\"course-details\"}>\r\n                                <div className={\"course-left-row\"}>\r\n                                    <Typography style={{color: this.props.color.text}}>\r\n                                        {\"Course code: \" + this.props.course.code}\r\n                                    </Typography>\r\n                                </div>\r\n                                <Divider />\r\n                                <div className={\"course-centered-row\"}>\r\n                                    <div>\r\n                                        Sections\r\n                                    </div>\r\n                                </div>\r\n                                <Divider />\r\n                                <div className={\"course-row\"}>\r\n                                    {this.renderCheckBoxes()}\r\n                                </div>\r\n                                <div>\r\n                                    <CourseAdvancedSettings color={this.props.color}\r\n                                                            onSettingsChange={(s) => this.handleSettingsChange(s)}\r\n                                                            onNextColor={() => this.handleNextColor()}\r\n                                                            onPreviousColor={() => this.handlePreviousColor()}\r\n                                                            settings={this.props.settings}/>\r\n                                </div>\r\n                                <Divider />\r\n                                <div className={\"course-sections\"}>\r\n                                    {this.renderSectionDetails()}\r\n                                </div>\r\n                            </div>\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n    TextField,\r\n    IconButton,\r\n    FormControl,\r\n    Paper,\r\n    Select,\r\n    MenuItem\r\n} from \"@material-ui/core\";\r\nimport {Autocomplete} from \"@material-ui/lab\";\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\n\r\nimport {filterCourses} from \"./data/Course\";\r\n\r\nimport \"./AddCourseWidget.css\"\r\n\r\nexport class AddCourseWidget extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            course: null,\r\n            category: -1,\r\n        }\r\n    }\r\n    handleCourseAdd(){\r\n        this.props.onCourseAdd(this.state.course);\r\n        this.setState({course: null, category: -1});\r\n    }\r\n    render() {\r\n        return (\r\n            <Paper style={styles.paper}>\r\n                <div className={\"add-course-row\"}>\r\n                    <FormControl className={\"category-form\"} variant={\"outlined\"} size={\"small\"}>\r\n                        <Select\r\n                            className={\"category-select\"}\r\n                            value={this.state.category}\r\n                            onChange={e => this.setState({category: e.target.value, course: null})}\r\n                            inputProps={{id: \"category-select\"}}\r\n                        >\r\n                            <MenuItem value={-1}>All courses</MenuItem>\r\n                            <MenuItem value={0}>Must</MenuItem>\r\n                            <MenuItem value={1}>Technical</MenuItem>\r\n                            <MenuItem value={2}>Restricted</MenuItem>\r\n                            <MenuItem value={3}>Non-Tech</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <Autocomplete\r\n                        className={\"add-course-name\"}\r\n                        options={filterCourses(this.props.courses, this.state.category)}\r\n                        getOptionLabel={(option => option.abbreviation + \": \" + option.name)}\r\n                        style={{width: \"60%\"}}\r\n                        value={this.state.course}\r\n                        size={\"small\"}\r\n                        renderInput={(params => <TextField {...params} label={\"Course name\"} variant={\"outlined\"}/>)}\r\n                        onChange={(e, v) =>\r\n                            this.setState({course: v})}\r\n                    />\r\n                    {this.state.course !== null ? <IconButton onClick={() => this.handleCourseAdd()} >\r\n                        <AddBoxIcon fontSize={\"large\"} color={\"primary\"} />\r\n                    </IconButton> : null}\r\n                </div>\r\n            </Paper>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    paper: {\r\n        backgroundColor: 'aliceblue',\r\n        margin: 15,\r\n        padding: 9,\r\n    },\r\n    whiteBackground: {\r\n        backgroundColor: 'white',\r\n    },\r\n}\r\n","import React from \"react\";\r\nimport {\r\n    MenuItem,\r\n    FormControl,\r\n    Paper,\r\n    Select,\r\n    Typography,\r\n    IconButton,\r\n    TextField\r\n} from \"@material-ui/core\";\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\n\r\nimport \"./AddDontFillWidget.css\"\r\n\r\nexport class AddDontFillWidget extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            day: 0,\r\n            startHour: this.props.startHour,\r\n            startMin: this.props.startMin,\r\n            endHour: this.props.endHour,\r\n            endMin: this.props.endMin,\r\n            description: \"FULL\"\r\n        };\r\n    }\r\n\r\n    renderDayPick(val, onChange){\r\n        return (\r\n            <div className={\"df-widget-select\"}>\r\n                <FormControl style={styles.dropdown} variant={\"outlined\"} size={\"small\"}>\r\n                    <Select labelId={\"df-select-label-day\"}\r\n                            id={\"df-select-day\"}\r\n                            value={val}\r\n                            onChange={e => onChange(e.target.value)}\r\n                            style={{background: \"#FFFFFF\"}}>\r\n                        <MenuItem value={0}>Monday</MenuItem>\r\n                        <MenuItem value={1}>Tuesday</MenuItem>\r\n                        <MenuItem value={2}>Wednesday</MenuItem>\r\n                        <MenuItem value={3}>Thursday</MenuItem>\r\n                        <MenuItem value={4}>Friday</MenuItem>\r\n                        <MenuItem value={5}>Saturday</MenuItem>\r\n                        <MenuItem value={6}>Sunday</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderHourPick(val, onChange){\r\n        const menuItems = Array(0);\r\n        for (let i = this.props.startHour; i <= this.props.endHour; i++){\r\n            menuItems.push(<MenuItem value={i}>{i < 10? \"0\"+i : i}</MenuItem> );\r\n        }\r\n        return (\r\n            <div className={\"df-widget-select\"}>\r\n                <FormControl style={styles.dropdown} variant={\"outlined\"} size={\"small\"}>\r\n                    <Select labelId={\"df-select-label-min\"}\r\n                            id={\"df-select-min\"}\r\n                            value={val}\r\n                            onChange={e => onChange(e.target.value)}\r\n                            style={{background: \"#FFFFFF\"}}>\r\n                        {menuItems}\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderMinPick(val, onChange){\r\n        const menuItems = Array(0);\r\n        for (let i = 0; i <= 59; i+=10){\r\n            menuItems.push(<MenuItem value={i}>{i < 10 ? \"0\"+i : i}</MenuItem> );\r\n        }\r\n        return (\r\n            <div className={\"df-widget-select\"}>\r\n                <FormControl style={styles.dropdown} variant={\"outlined\"} size={\"small\"}>\r\n                    <Select labelId={\"df-select-label-min\"}\r\n                            id={\"df-select-min\"}\r\n                            value={val}\r\n                            onChange={e => onChange(e.target.value)}\r\n                            style={{background: \"#FFFFFF\"}}>\r\n                        {menuItems}\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleAddDontFill(){\r\n        this.props.onDontFillAdd(\r\n            this.convertTime(this.state.day, this.state.startHour, this.state.startMin),\r\n            this.convertTime(this.state.day, this.state.endHour, this.state.endMin),\r\n            this.state.description\r\n        );\r\n        this.setState({\r\n            day: 0,\r\n            startHour: this.props.startHour,\r\n            startMin: this.props.startMin,\r\n            endHour: this.props.endHour,\r\n            endMin: this.props.endMin,\r\n            description: \"FULL\"\r\n        });\r\n    }\r\n    convertTime(day, hour, min){\r\n        //example : '2021-02-20T09:40'\r\n        return new Date(\"2021-02-\" + (14 + day) + \"T\" + (hour < 10 ? \"0\" : \"\") +\r\n            hour + \":\" + (min < 10 ? \"0\" : \"\") + min);\r\n    }\r\n    render() {\r\n        return (\r\n            <Paper style={styles.paper}>\r\n                <div className={\"add-df-row\"}>\r\n                    {this.renderDayPick(this.state.day, val => this.setState({day: val}))}\r\n                    {this.renderHourPick(this.state.startHour,val => this.setState({startHour: val}))}\r\n                    <div className={\"df-typo\"}>\r\n                        <Typography>:</Typography>\r\n                    </div>\r\n                    {this.renderMinPick(this.state.startMin,val => this.setState({startMin: val}))}\r\n                    <div className={\"df-typo\"}>\r\n                        <Typography>-</Typography>\r\n                    </div>\r\n                    {this.renderHourPick(this.state.endHour,val => this.setState({endHour: val}))}\r\n                    <div className={\"df-typo\"}>\r\n                        <Typography>:</Typography>\r\n                    </div>\r\n                    {this.renderMinPick(this.state.endMin,val => this.setState({endMin: val}))}\r\n                    <div className={\"df-typo\"}>\r\n                        <Typography>is</Typography>\r\n                    </div>\r\n                    <div className={\"df-textfield\"}>\r\n                        <TextField\r\n                            label={\"Event\"}\r\n                            value={this.state.description}\r\n                            inputProps={{ maxLength: 8 }}\r\n                            variant={\"outlined\"}\r\n                            size={\"small\"}\r\n                            onChange={e => this.setState({description: e.target.value})}\r\n                        />\r\n                    </div>\r\n                    <IconButton onClick={() => this.handleAddDontFill()}>\r\n                        <AddBoxIcon fontSize={\"large\"} color={\"primary\"} />\r\n                    </IconButton>\r\n                </div>\r\n            </Paper>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    paper: {\r\n        backgroundColor: 'aliceblue',\r\n        margin: 15,\r\n        padding: 3,\r\n    },\r\n    dropdown: {\r\n        marginTop: 'auto',\r\n        marginBottom: 'auto',\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n    Accordion,\r\n    AccordionSummary,\r\n    AccordionDetails,\r\n    Typography,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    Divider\r\n} from \"@material-ui/core\";\r\n\r\nimport \"./AdvancedSettings.css\"\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport TuneIcon from '@material-ui/icons/Tune';\r\n\r\nexport class AdvancedSettings extends React.Component {\r\n\r\n    handleSurnameCheck(){\r\n        this.props.onSettingsChange({\r\n            checkSurname: !this.props.settings.checkSurname,\r\n            checkDepartment: this.props.settings.checkDepartment,\r\n            checkCollision: this.props.settings.checkCollision\r\n        });\r\n    }\r\n    handleDepartmentCheck(){\r\n        this.props.onSettingsChange({\r\n            checkSurname: this.props.settings.checkSurname,\r\n            checkDepartment: !this.props.settings.checkDepartment,\r\n            checkCollision: this.props.settings.checkCollision\r\n        });\r\n    }\r\n    handleCollisionCheck(){\r\n        this.props.onSettingsChange({\r\n            checkSurname: this.props.settings.checkSurname,\r\n            checkDepartment: this.props.settings.checkDepartment,\r\n            checkCollision: !this.props.settings.checkCollision\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"course-settings-wrapper\"}>\r\n                <Accordion style={{background: \"aliceblue\"}}>\r\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls={\"panel1a-content\"}>\r\n                        <div className={\"course-settings-row\"}>\r\n                            <TuneIcon color={\"primary\"} fontSize={\"large\"} />\r\n                            <div className={\"course-settings-typo\"}>\r\n                                <Typography>Advanced Settings</Typography>\r\n                            </div>\r\n                        </div>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <div className={\"course-settings-accordion\"}>\r\n                            <Divider />\r\n                            <div className={\"course-settings-row\"}>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={this.props.settings.checkSurname}\r\n                                            onChange={() => this.handleSurnameCheck()}\r\n                                            color={\"primary\"}\r\n                                        />}\r\n                                    label={\"Check surname\"}/>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={this.props.settings.checkDepartment}\r\n                                            onChange={() => this.handleDepartmentCheck()}\r\n                                            color={\"primary\"}\r\n                                        />}\r\n                                    label={\"Check department\"}/>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={this.props.settings.checkCollision}\r\n                                            onChange={() => this.handleCollisionCheck()}\r\n                                            color={\"primary\"}\r\n                                        />}\r\n                                    label={\"Check collision\"}/>\r\n                            </div>\r\n                        </div>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\n\r\nimport {\r\n    CircularProgress,\r\n    Dialog,\r\n    DialogContent,\r\n} from \"@material-ui/core\";\r\n\r\nimport \"./LoadingDialog.css\"\r\n\r\nexport class LoadingDialog extends React.Component {\r\n    render() {\r\n        return (\r\n            <Dialog open={true}>\r\n                <DialogContent>\r\n                    <div className={\"loading-circle\"}>\r\n                        <CircularProgress />\r\n                    </div>\r\n                    <div className={\"loading-text\"}>\r\n                        {\r\n                            this.props.text === undefined ? \"Loading!\" : this.props.text\r\n                        }\r\n                    </div>\r\n                </DialogContent>\r\n            </Dialog>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport {\r\n    TextField,\r\n    Select,\r\n    Button,\r\n    FormControl,\r\n    FormHelperText,\r\n    MenuItem,\r\n    InputLabel,\r\n    Paper,\r\n    Snackbar,\r\n    Typography,\r\n    Divider,\r\n} from \"@material-ui/core\";\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EventAvailableIcon from '@material-ui/icons/EventAvailable';\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport { isMobile } from \"react-device-detect\";\r\nimport ls from \"local-storage\";\r\n\r\nimport { getAllCourses, getMusts } from \"./data/Course\";\r\nimport { compute_schedule } from \"./schedule\";\r\nimport { Client } from \"./Client\";\r\nimport { CourseCard } from \"./CourseCard\";\r\nimport { AddCourseWidget } from \"./AddCourseWidget\";\r\nimport { AddDontFillWidget } from \"./AddDontFillWidget\";\r\nimport { AdvancedSettings } from \"./AdvancedSettings\";\r\nimport { Colorset } from \"./Colorset\";\r\nimport { LoadingDialog } from \"./LoadingDialog/LoadingDialog\";\r\n\r\nimport \"./Controls.css\"\r\n\r\nexport class Controls extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            surname: \"\",\r\n            department: \"\",\r\n            semester: 0,\r\n            alertMsg: \"\",\r\n            errorDept: false,\r\n            errorSemester: false,\r\n            errorSurname: false,\r\n            restoreAvailable: false,\r\n            restoredInfo: {\r\n                surname: \"\",\r\n                department: \"\",\r\n                semester: 0\r\n            },\r\n            selectedCourses: [],\r\n            restoredCourses: [],\r\n            allCourses: [],\r\n            settings: {\r\n                checkSurname: true,\r\n                checkDepartment: true,\r\n                checkCollision: true\r\n            },\r\n            restoredSettings: {\r\n                checkSurname: true,\r\n                checkDepartment: true,\r\n                checkCollision: true\r\n            },\r\n            scenarios: [],\r\n            colorset: new Colorset(),\r\n\r\n            lastUpdated: 0,\r\n\r\n            loading: false,\r\n            loadingMessage: \"Loading...\",\r\n        }\r\n\r\n        this.client = new Client();\r\n    }\r\n    componentDidMount() {\r\n        this.client.sendUpdateRequest();\r\n        document.title = \"Robot Değilim *-*\";\r\n        this.setState({ loading: true, loadingMessage: \"Loading...\" });\r\n        getAllCourses().then(data => {\r\n            this.setState({ allCourses: data });\r\n            this.restoreData();\r\n            this.setState({ loading: false });\r\n            this.props.onLoadingCompleted();\r\n        });\r\n        this.client.getLastUpdated().then(lastUpdated => this.setState({ lastUpdated: lastUpdated }));\r\n        if (isMobile) {\r\n            document.body.style.zoom = \"60%\";\r\n        }\r\n        else {\r\n            console.log(window.innerWidth);\r\n            console.log(((window.outerWidth - 10) / window.innerWidth) * 100);\r\n            document.body.style.zoom = parseInt(100 * window.innerWidth / 1920) + \"%\";\r\n        }\r\n    }\r\n    loadRestoredData() {\r\n        this.setState({\r\n            selectedCourses: this.state.restoredCourses,\r\n            settings: this.state.restoredSettings,\r\n            surname: this.state.restoredInfo.surname,\r\n            semester: this.state.restoredInfo.semester,\r\n            department: this.state.restoredInfo.department,\r\n        });\r\n    }\r\n    restoreData() {\r\n        const restoredCourses = ls.get(\"restoredCourses\");\r\n        const restoredInfo = ls.get(\"restoredInfo\");\r\n        const restoredSettings = ls.get(\"restoredSettings\");\r\n        console.log(restoredCourses);\r\n        this.setState({\r\n            restoredCourses: restoredCourses !== null ? restoredCourses : [],\r\n            restoredSettings: restoredSettings !== null ? restoredSettings : {\r\n                checkSurname: true,\r\n                checkDepartment: true,\r\n                checkCollision: true,\r\n                disableCourse: false\r\n            },\r\n            restoredInfo: restoredInfo !== null ? {\r\n                surname: restoredInfo.surname,\r\n                department: restoredInfo.department,\r\n                semester: restoredInfo.semester\r\n            } : {\r\n                surname: \"\",\r\n                department: \"\",\r\n                semester: 0\r\n            },\r\n            restoreAvailable: restoredSettings !== null\r\n        });\r\n        console.log(restoredSettings);\r\n        console.log(restoredInfo);\r\n    }\r\n    getCourseByCode(code) {\r\n        for (let i = 0; i < this.state.allCourses.length; i++) {\r\n            if (this.state.allCourses[i].code === code) {\r\n                return this.state.allCourses[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    getSectionByNumber(c, n) {\r\n        for (let i = 0; i < c.sections.length; i++) {\r\n            if (c.sections[i].sectionNumber === n) {\r\n                return c.sections[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    getColorByCourseCode(code) {\r\n        for (let i = 0; i < this.state.selectedCourses.length; i++) {\r\n            if (this.state.selectedCourses[i] === null) {\r\n                continue;\r\n            }\r\n            if (this.state.selectedCourses[i].code === code) {\r\n                return this.state.selectedCourses[i].color;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    renderSemesterSelections(n) {\r\n        const ret = Array(0);\r\n        ret.push(<MenuItem value={0}>---</MenuItem>)\r\n        for (let i = 0; i < n; i++) {\r\n            ret.push(<MenuItem value={i + 1}>{i + 1}</MenuItem>);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    handleAddMustCourse() {\r\n        this.setState({ alertMsg: \"\", errorDept: false, errorSemester: false, errorSurname: false });\r\n        if (this.state.department.length < 2) {\r\n            this.setState({ alertMsg: \"Please enter a correct department\", errorDept: true });\r\n            return;\r\n        }\r\n        if (this.state.semester < 1) {\r\n            this.setState({ alertMsg: \"Please choose a semester\", errorSemester: true });\r\n            return;\r\n        }\r\n        getMusts(this.state.department, this.state.semester).then(data => {\r\n            if (data !== undefined) {\r\n                // eslint-disable-next-line\r\n                data.map(code => {\r\n                    let exists = false;\r\n                    this.state.selectedCourses.map(c => {\r\n                        if (c !== null && c.code === code) {\r\n                            exists = true;\r\n                            return;\r\n                        }\r\n                    });\r\n                    if (!exists) {\r\n                        this.handleAddCourse(this.getCourseByCode(code));\r\n                    }\r\n                });\r\n            }\r\n        }).catch(_ => {\r\n            this.setState({ alertMsg: \"Must courses for your department are not available\", errorDept: true });\r\n        });\r\n    }\r\n\r\n    handleAlertClose() {\r\n        this.setState({ alertMsg: \"\" });\r\n    }\r\n    handleDeleteCourse(i) {\r\n        const newSelectedCourses = this.state.selectedCourses.slice(0);\r\n        newSelectedCourses[i] = null;\r\n        this.setState({ selectedCourses: newSelectedCourses });\r\n    }\r\n    handleToggle(i, sections) {\r\n        const newSelectedCourses = this.state.selectedCourses.slice(0);\r\n        newSelectedCourses[i].sections = sections;\r\n        this.setState({ selectedCourses: newSelectedCourses });\r\n        console.log(\"Course \" + i + \" sections:\" + sections);\r\n    }\r\n    handleAddCourse(c) {\r\n        if (c === null) {\r\n            return;\r\n        }\r\n        const newSelectedCourses = this.state.selectedCourses.slice(0);\r\n        newSelectedCourses.push({\r\n            code: c.code,\r\n            sections: Array(c.sections.length).fill(true),\r\n            color: this.state.colorset.getNextColor(),\r\n            settings: {\r\n                checkSurname: true,\r\n                checkDepartment: true,\r\n                checkCollision: true,\r\n                disableCourse: false\r\n            }\r\n        });\r\n        this.setState({ selectedCourses: newSelectedCourses });\r\n    }\r\n    handleCourseSettings(i, s) {\r\n        const newSelectedCourses = this.state.selectedCourses.slice(0);\r\n        newSelectedCourses[i].settings = s;\r\n        this.setState({ selectedCourses: newSelectedCourses });\r\n    }\r\n    handleCourseColor(i, c) {\r\n        const newSelectedCourses = this.state.selectedCourses.slice(0);\r\n        newSelectedCourses[i].color = c;\r\n        this.setState({ selectedCourses: newSelectedCourses });\r\n    }\r\n    handleChangeSettings(s) {\r\n        this.setState({ settings: s });\r\n    }\r\n    handleScheduleComplete(scenarios) {\r\n        if (scenarios.length <= 0) {\r\n            console.log(\"Fail!\");\r\n            this.setState({ alertMsg: \"There is no available schedule for this criteria.\" });\r\n        }\r\n        const scenariosToSubmit = Array(0);\r\n        scenarios.map(s => {\r\n            const scenarioToPush = Array(0);\r\n            s.map(c => {\r\n                const currentCourse = this.getCourseByCode(c.code);\r\n                const currentSection = this.getSectionByNumber(currentCourse, c.section);\r\n                const currentColor = this.getColorByCourseCode(c.code);\r\n                scenarioToPush.push({\r\n                    abbreviation: currentCourse.abbreviation,\r\n                    section: currentSection,\r\n                    color: currentColor\r\n                });\r\n            });\r\n            scenariosToSubmit.push(scenarioToPush);\r\n        });\r\n        this.props.onSchedule(scenariosToSubmit);\r\n    }\r\n    formatDf(df) {\r\n        //           0123456789012345\r\n        //example : '2021-02-20T09:40'\r\n        return {\r\n            day: df.startDate.getDay(),\r\n            startHour: df.startDate.getHours(),\r\n            startMin: df.startDate.getMinutes(),\r\n            endHour: df.endDate.getHours(),\r\n            endMin: df.endDate.getMinutes() - 1\r\n        };\r\n    }\r\n    saveData() {\r\n        ls.set(\"restoredCourses\", this.state.selectedCourses);\r\n        ls.set(\"restoredSettings\", this.state.settings);\r\n        ls.set(\"restoredInfo\", {\r\n            surname: this.state.surname,\r\n            department: this.state.department,\r\n            semester: this.state.semester\r\n        });\r\n    }\r\n    handleScheduleBegin() {\r\n        this.setState({ alertMsg: \"\", errorDept: false, errorSemester: false, errorSurname: false });\r\n        if (this.state.department.length < 2) {\r\n            this.setState({ alertMsg: \"Please enter a correct department\", errorDept: true });\r\n            return;\r\n        }\r\n        if (this.state.surname.length < 2 && this.state.settings.checkSurname) {\r\n            this.setState({ alertMsg: \"Please enter at least 2 letters of your surname\", errorSurname: true });\r\n            return;\r\n        }\r\n        const courseData = Array(0);\r\n        const dontFills = Array(0);\r\n        // eslint-disable-next-line\r\n        this.state.selectedCourses.map(c => {\r\n            if (c === null || c.settings.disableCourse) {\r\n                return null;\r\n            }\r\n            const currentCourse = this.getCourseByCode(c.code);\r\n            const courseToPush = {\r\n                code: c.code,\r\n                category: currentCourse.category,\r\n                checkSurname: this.state.settings.checkSurname && c.settings.checkSurname,\r\n                checkCollision: this.state.settings.checkCollision && c.settings.checkCollision,\r\n                checkDepartment: this.state.settings.checkDepartment && c.settings.checkDepartment,\r\n                sections: Array(0)\r\n            };\r\n            for (let i = 0; i < currentCourse.sections.length; i++) {\r\n                const sectionToPush = {\r\n                    sectionNumber: currentCourse.sections[i].sectionNumber,\r\n                    minYear: currentCourse.sections[i].minYear,\r\n                    maxYear: currentCourse.sections[i].maxYear,\r\n                    toggle: c.sections[i],\r\n                    criteria: currentCourse.sections[i].criteria,\r\n                    lectureTimes: Array(0)\r\n                };\r\n                currentCourse.sections[i].lectureTimes.map(t => sectionToPush.lectureTimes.push(t));\r\n                if (sectionToPush.criteria.length <= 0) {\r\n                    sectionToPush.criteria = [{\r\n                        dept: \"ALL\",\r\n                        surnameStart: \"AA\",\r\n                        surnameEnd: \"ZZ\"\r\n                    }];\r\n                }\r\n                if (sectionToPush.lectureTimes && sectionToPush.lectureTimes[0])\r\n                    courseToPush.sections.push(sectionToPush);\r\n            }\r\n            if (courseToPush.sections && courseToPush.sections.length > 0) {\r\n                console.log(courseToPush.code);\r\n\r\n                courseData.push(courseToPush)\r\n            }\r\n\r\n        });\r\n        this.props.dontFills.map(df => {\r\n            const formattedDf = this.formatDf(df);\r\n            dontFills.push({\r\n                times: [formattedDf]\r\n            })\r\n        });\r\n        //console.log(courseData);\r\n        console.log(dontFills);\r\n        this.setState({ loading: true, loadingMessage: \"Computing schedule...\" });\r\n        setTimeout(() => {\r\n            const calculatedSchedule = compute_schedule(\r\n                this.state.surname.slice(0, 2),\r\n                this.state.department,\r\n                0,\r\n                courseData,\r\n                dontFills\r\n            );\r\n            //console.log(calculatedSchedule);\r\n            this.setState({ scenario: calculatedSchedule, loading: false });\r\n            this.handleScheduleComplete(calculatedSchedule);\r\n        }, 500);\r\n    }\r\n    handleClearCourses() {\r\n        this.setState({ selectedCourses: [] });\r\n    }\r\n    render() {\r\n        return (\r\n            <Paper style={isMobile ? styles.mobile : styles.desktop}>\r\n                <Snackbar\r\n                    open={this.state.alertMsg !== \"\"}\r\n                    autoHideDuration={5000}\r\n                    onClose={() => this.handleAlertClose()}\r\n                >\r\n                    <MuiAlert elevation={6} variant={\"filled\"} onClose={() => this.handleAlertClose()} severity={\"error\"}>\r\n                        {this.state.alertMsg}\r\n                    </MuiAlert>\r\n                </Snackbar>\r\n                <div className={\"control-row\"}>\r\n                    <div className={\"textfield-wrapper\"}>\r\n                        <TextField\r\n                            required={this.state.settings.checkSurname}\r\n                            error={this.state.errorSurname}\r\n                            label={\"Surname\"}\r\n                            value={this.state.surname}\r\n                            inputProps={{ maxLength: 12 }}\r\n                            variant={\"outlined\"}\r\n                            size={'small'}\r\n                            onChange={e => this.setState({ surname: e.target.value.toUpperCase() })}\r\n                        />\r\n                    </div>\r\n                    <div className={\"textfield-wrapper\"}>\r\n                        <TextField\r\n                            required\r\n                            error={this.state.errorDept}\r\n                            label={\"Department\"}\r\n                            value={this.state.department}\r\n                            inputProps={{ maxLength: 12 }}\r\n                            variant={\"outlined\"}\r\n                            size={'small'}\r\n                            onChange={e => this.setState({ department: e.target.value.toUpperCase() })}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className={\"control-row\"}>\r\n                    <div className={\"textfield-wrapper\"}>\r\n                        <FormControl className={\"form-control\"} variant={\"outlined\"} size={\"small\"}>\r\n                            <InputLabel style={{ background: 'white' }}>Semester</InputLabel>\r\n                            <Select\r\n                                error={this.state.errorSemester}\r\n                                value={this.state.semester}\r\n                                onChange={e => this.setState({ semester: e.target.value })}\r\n                            >\r\n                                {this.renderSemesterSelections(8)}\r\n                            </Select>\r\n                            <FormHelperText>Ex: 2nd year Fall semester -{\">\"} 3</FormHelperText>\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className={\"control-button\"}>\r\n                        <Button\r\n                            variant={\"contained\"}\r\n                            color={\"secondary\"}\r\n                            startIcon={<AddIcon />}\r\n                            onClick={() => this.handleAddMustCourse()}>\r\n                            Add Must Courses\r\n                        </Button>\r\n                    </div>\r\n                    <div className={\"control-button\"}>\r\n                        <Button\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                            startIcon={<EventAvailableIcon />}\r\n                            onClick={() => this.handleScheduleBegin()}>\r\n                            Schedule\r\n                        </Button>\r\n                    </div>\r\n                    <div className={\"control-button\"}>\r\n                        <Button\r\n                            variant={\"contained\"}\r\n                            style={{ backgroundColor: \"red\", color: \"white\" }}\r\n                            startIcon={<Delete style={{ color: \"white\" }} />}\r\n                            onClick={() => this.handleClearCourses()}>\r\n                            Clear\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <AdvancedSettings settings={this.state.settings} onSettingsChange={s => this.handleChangeSettings(s)} />\r\n                <div className={\"control-row\"}>\r\n                    <Button variant={\"contained\"}\r\n                        color={\"primary\"}\r\n                        onClick={() => this.saveData()}\r\n                        startIcon={<SaveIcon />} style={{ margin: \"6pt\" }}>\r\n                        Save\r\n                    </Button>\r\n                    {this.state.restoreAvailable ?\r\n                        <Button\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                            onClick={() => this.loadRestoredData()}\r\n                            startIcon={<SaveAltIcon />} style={{ margin: \"6pt\" }}>\r\n                            Load\r\n                        </Button> : null}\r\n                </div>\r\n                <Divider />\r\n                <div className={\"control-row\"}>\r\n                    <div className={\"centered-row\"}>\r\n                        Added Courses\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n                <div className={\"control-courses\"}>\r\n                    {this.state.selectedCourses.map((c, i) => {\r\n                        return (\r\n                            c !== null ?\r\n                                <CourseCard course={this.getCourseByCode(c.code)}\r\n                                    onDelete={() => this.handleDeleteCourse(i)}\r\n                                    onToggle={sections => this.handleToggle(i, sections)}\r\n                                    color={c.color}\r\n                                    settings={c.settings}\r\n                                    sections={c.sections}\r\n                                    onSettingsChange={(s) => this.handleCourseSettings(i, s)}\r\n                                    onColorChange={(c) => this.handleCourseColor(i, c)} /> : null\r\n                        );\r\n                    })}\r\n                </div>\r\n                <AddCourseWidget\r\n                    courses={this.state.allCourses}\r\n                    onCourseAdd={c => this.handleAddCourse(c)} />\r\n                <AddDontFillWidget startHour={8}\r\n                    startMin={40}\r\n                    endHour={17}\r\n                    endMin={30}\r\n                    onDontFillAdd={(startDate, endDate, desc) =>\r\n                        this.props.onDontFillAdd(startDate, endDate, desc)} />\r\n                {\r\n                    this.state.loading ? <LoadingDialog text={this.state.loadingMessage} /> : null\r\n                }\r\n                {console.log(this.state.lastUpdated)}\r\n                {\r\n                    this.state.lastUpdated ?\r\n                        <Typography>\r\n                            {\r\n                                \"Course data is updated at \" +\r\n                                this.state?.lastUpdated?.u\r\n                            }\r\n                            <br />\r\n                            {\r\n                                \"   Last added Semester: \" +\r\n                                this.state?.lastUpdated?.t.split(\":\")[1]\r\n                            }\r\n                        </Typography> :\r\n                        null\r\n                }\r\n            </Paper>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    mobile: {\r\n        background: \"white\",\r\n        margin: 12,\r\n        width: \"100%\",\r\n        paddingBottom: 12,\r\n    },\r\n    desktop: {\r\n        background: \"white\",\r\n        margin: 12,\r\n        width: \"fit-content\",\r\n        height: \"fit-content\",\r\n        paddingBottom: 12,\r\n    },\r\n}\r\n","import React from \"react\";\r\nimport {\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    Button\r\n} from \"@material-ui/core\";\r\n\r\nexport class WelcomeDialog extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: true\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n        <div className={\"dialog-wrapper\"}>\r\n            <Dialog open={this.state.open}\r\n                    onClose={() => this.setState({open: false})}\r\n                    aria-labelledby={\"alert-dialog-title\"}\r\n                    aria-describedby={\"alert-dialog-description\"}>\r\n                <DialogTitle id={\"alert-dialog-title\"}>\r\n                    Welcome!\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id={\"alert-dialog-description\"}>\r\n                        Course data is updated for new semester 🙃\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => this.setState({open: false})}\r\n                            color={\"secondary\"}\r\n                            variant={\"contained\"}\r\n                            autoFocus={false}>\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>);\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nimport logo from \"./img/logo.png\"\r\nimport title from \"./img/title.gif\"\r\nimport \"./Banner.css\"\r\n\r\n\r\nexport class Banner extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={\"banner-wrapper\"}>\r\n                <img src={logo} width={90} height={90} alt=\"wrapper\"/>\r\n                <div className={\"banner-typo\"}>\r\n                    <img src={title} width={330} height={45} alt=\"banner\"/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {isMobile} from \"react-device-detect\";\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport {WeeklyProgram} from \"./WeeklyProgram\";\r\nimport {Controls} from \"./Controls\";\r\nimport {WelcomeDialog} from \"./WelcomeDialog\";\r\nimport {Banner} from \"./Banner\";\r\n\r\nimport './App.css';\r\nimport {Colorset} from \"./Colorset\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        secondary: {\r\n            main: '#71F154'\r\n        }\r\n    }\r\n});\r\n\r\nclass App extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            scenarios: [],\r\n            dontFills: [],\r\n\r\n            loaded: false,\r\n        }\r\n\r\n        this.dontFillColorset = new Colorset();\r\n    }\r\n    handleDontFillAdd(startDate, endDate, description){\r\n        const newDontFills = this.state.dontFills.slice(0);\r\n        newDontFills.push({\r\n            startDate: startDate,\r\n            endDate: endDate,\r\n            description: description,\r\n            color: this.dontFillColorset.getBlack(),\r\n        });\r\n        this.setState({dontFills: newDontFills});\r\n    }\r\n    handleDontFillDelete(startDate){\r\n        this.setState({dontFills: this.state.dontFills.filter(df => df.startDate !== startDate)});\r\n    }\r\n    handleLoadingCompleted() {\r\n        this.setState({loaded: true});\r\n    }\r\n    handleChangeDontFillColor(startDate,color) {\r\n        const dontFills = this.state.dontFills.slice(0);\r\n        this.setState({\r\n            dontFills: dontFills.map(df => {\r\n                if (df.startDate === startDate) {\r\n                    return {\r\n                        ...df,\r\n                        color: color,\r\n                    }\r\n                } else {\r\n                    return df;\r\n                }\r\n            })\r\n        });\r\n    }\r\n    handleChangeDontFillDescription(startDate, newDescription) {\r\n        const dontFills = this.state.dontFills.slice(0);\r\n        this.setState({\r\n            dontFills: dontFills.map(df => {\r\n                if (df.startDate === startDate) {\r\n                    return {\r\n                        ...df,\r\n                        description: newDescription,\r\n                    }\r\n                } else {\r\n                    return df;\r\n                }\r\n            })\r\n        });\r\n    }\r\n    render() {\r\n        //console.log(this.state.scenarios);\r\n        return (\r\n          <MuiThemeProvider theme={theme}>\r\n            <div className=\"App\">\r\n                <Banner />\r\n                { this.state.loaded ? <WelcomeDialog /> : null }\r\n                <div className={isMobile ? \"column\" : \"row\"}>\r\n                    <WeeklyProgram dontFills={this.state.dontFills}\r\n                                   scenarios={this.state.scenarios}\r\n                                   onDontFillAdd={(startDate, endDate, desc) =>\r\n                                       this.handleDontFillAdd(startDate, endDate, desc)}\r\n                                   onChangeDontFillColor = {(startDate,color) => this.handleChangeDontFillColor(startDate,color)}\r\n                                   onChangeDontFillDescription={(startDate, newDescription) =>\r\n                                       this.handleChangeDontFillDescription(startDate, newDescription)}\r\n                                   onDontFillDelete={startDate => this.handleDontFillDelete(startDate)}/>\r\n                    <Controls onSchedule={s => this.setState({scenarios: s})}\r\n                              dontFills={this.state.dontFills}\r\n                              onDontFillAdd={(startDate, endDate, desc) =>\r\n                                  this.handleDontFillAdd(startDate, endDate, desc)}\r\n                              onLoadingCompleted={() => this.handleLoadingCompleted()}\r\n                    />\r\n                </div>\r\n            </div>\r\n          </MuiThemeProvider>\r\n      );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}