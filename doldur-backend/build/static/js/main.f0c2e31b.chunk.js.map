{"version":3,"sources":["WeeklyProgram.js","Client.js","data/Course.js","schedule.js","SectionInfo.js","CourseCard.js","AddCourseWidget.js","AdvancedSettings.js","Colorset.js","Controls.js","CoursesToDisplay.js","App.js","serviceWorker.js","index.js"],"names":["DayScaleRow","className","React","Component","WeeklyProgram","props","AppointmentContent","data","restProps","style","background","color","main","text","title","section","classroom","state","currentScenario","delta","this","setState","Math","min","scenarios","length","max","day","hour","coursesToDisplay","Array","map","c","lectureTimes","lt","push","abbreviation","sectionNumber","undefined","startDate","convertTime","startHour","startMin","endDate","endHour","endMin","formatDate","AppointmentLayer","_","convertToEntry","console","log","isMobile","Paper","currentDate","startDayHour","endDayHour","cellDuration","dayScaleRowComponent","appointmentLayerComponent","CustomAppointment","appointmentContentComponent","IconButton","onClick","handleScenarioChange","fontSize","Typography","Client","coursesUrl","mustUrl","dept","semester","url","axios","get","courses","Object","keys","code","courseToPush","slice","search","name","category","sections","sn","s","sectionToPush","instructor","criteria","minYear","maxYear","t","parseInt","surnameStart","surnameEnd","getAllCourses","a","client","getCourses","getMusts","surnameCheck","surname","course_surname_start","course_surname_end","apply_criteria_sections","department","grade","course","i","section_passed","j","criterion","dept_passed","surn_passed","check_department","check_surname","splice","check_collision","section1","section2","lt1","lt2","s1_lt","s2_lt","compute_schedule","recursive_computation","depth","scenario","scenarioToPosh","collision","pop","apply_criteria_courses","SectionInfo","days","toString","ret","sectionDetails","times","ternary","formatTime","secondary","Divider","renderCriteria","renderTimes","CourseCard","selectedSections","fill","sectionCount","onToggle","boxes","FormControlLabel","control","Checkbox","checked","onChange","e","newSelectedSections","handleToggle","label","FormGroup","row","Button","toggleSections","sectionNo","size","onDelete","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","renderCheckBoxes","renderSectionDetails","AddCourseWidget","onCourseAdd","FormControl","variant","Select","value","target","inputProps","id","MenuItem","Autocomplete","options","filter","getOptionLabel","option","width","renderInput","params","TextField","v","handleCourseAdd","AdvancedSettings","onSettingsChange","checkSurname","settings","checkDepartment","checkCollision","handleSurnameCheck","handleDepartmentCheck","handleCollisionCheck","Colorset","colors","textSection","iterator","Controls","alertMsg","errorDept","errorSemester","errorSurname","selectedCourses","allCourses","colorset","document","then","body","zoom","n","handleAddCourse","getCourseByCode","newSelectedCourses","getNextColor","scenariosToSubmit","scenarioToPush","currentCourse","currentSection","getSectionByNumber","currentColor","getColorByCourseCode","onSchedule","courseData","toggle","calculatedSchedule","handleScheduleComplete","Snackbar","open","autoHideDuration","onClose","handleAlertClose","elevation","severity","required","error","maxLength","toUpperCase","InputLabel","renderSemesterSelections","FormHelperText","startIcon","handleAddMustCourse","handleScheduleBegin","handleChangeSettings","handleDeleteCourse","schedulerData","theme","createMuiTheme","palette","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.f0c2e31b.chunk.js","sourcesContent":["import React from \"react\";\nimport {Paper, IconButton, Typography} from \"@material-ui/core\";\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport {ViewState} from \"@devexpress/dx-react-scheduler\";\nimport {\n    Scheduler,\n    WeekView,\n    Appointments,\n} from '@devexpress/dx-react-scheduler-material-ui';\nimport {isMobile} from \"react-device-detect\";\n\nimport \"./WeeklyProgram.css\"\n\nconst currentDate = '2021-02-20';\n\n\n\nclass DayScaleRow extends React.Component{\n    render() {\n        return (\n            <div className={\"dayscale-row\"}>\n                <div className={\"dayscale-label\"}>\n                    Mon\n                </div>\n                <div className={\"dayscale-label\"}>\n                    Tue\n                </div>\n                <div className={\"dayscale-label\"}>\n                    Wed\n                </div>\n                <div className={\"dayscale-label\"}>\n                    Thu\n                </div>\n                <div className={\"dayscale-label\"}>\n                    Fri\n                </div>\n                <div className={\"dayscale-label\"}>\n                    Sat\n                </div>\n                <div className={\"dayscale-label\"}>\n                    Sun\n                </div>\n            </div>\n        )\n    }\n}\n\nexport class WeeklyProgram extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentScenario: 0\n        };\n    }\n\n    handleScenarioChange(delta){\n        this.setState({\n            currentScenario: Math.min(this.props.scenarios.length-1, Math.max(0,\n                this.state.currentScenario + delta))});\n    }\n    convertTime(day, hour, min){\n        //example : '2021-02-20T09:40'\n        return \"2021-02-\" + (14 + day) + \"T\" + (hour < 10 ? \"0\" : \"\") + hour + \":\" + (min < 10 ? \"0\" : \"\") + min;\n    }\n    convertToEntry(){\n        if (this.props.scenarios.length <= 0){\n            return [];\n        }\n        const coursesToDisplay = Array(0);\n        const scenario = this.props.scenarios[this.state.currentScenario];\n        scenario.map(c => {\n            //console.log(c);\n            c.section.lectureTimes.map(lt => {\n                coursesToDisplay.push({\n                    title: c.abbreviation,\n                    section: c.section.sectionNumber,\n                    classroom: lt.classroom !== undefined ? lt.classroom : \"-\",\n                    startDate: this.convertTime(lt.day, lt.startHour, lt.startMin),\n                    endDate: this.convertTime(lt.day, lt.endHour, lt.endMin),\n                    color: c.color\n                })\n            });\n        });\n        return coursesToDisplay;\n    }\n    CustomAppointment({formatDate, ...restProps}){\n        return (\n            <WeekView.AppointmentLayer {...restProps} formatDate={(_) => \"\"} className={\"custom-appointment\"} />\n        )\n    }\n    AppointmentContent = ({data, ...restProps}) => {\n        return (\n            <Appointments.AppointmentContent data={data}\n                                             {...restProps}\n                                             className={\"program-appointment\"} style={{background: data.color.main}}>\n                <div className={\"program-text-container\"}>\n                    <div className={\"program-title\"} style={{color: data.color.text}}>\n                        {data.title + \"/\" + data.section}\n                    </div>\n                    <div className={\"program-title\"} style={{color: data.color.text}}>\n                        {data.classroom}\n                    </div>\n                </div>\n            </Appointments.AppointmentContent>\n        )\n    }\n    render() {\n        const data = this.convertToEntry();\n        console.log(data);\n        return (\n            <div className={isMobile ? \"scheduler-mobile\" : \"scheduler-wrapper\"}>\n                <Paper>\n                    <Scheduler\n                        data={data}\n                    >\n                        <ViewState\n                            currentDate={currentDate}\n                        />\n                        <WeekView\n                            startDayHour={7.667}\n                            endDayHour={17.5}\n                            cellDuration={60}\n                            dayScaleRowComponent={DayScaleRow}\n                            appointmentLayerComponent={this.CustomAppointment}\n                        />\n                        <Appointments appointmentContentComponent={this.AppointmentContent}/>\n                    </Scheduler>\n                </Paper>\n                {this.props.scenarios.length > 0?\n                <div className={\"program-row\"}>\n                    <IconButton onClick={() => this.handleScenarioChange(-1)}>\n                        <KeyboardArrowLeftIcon fontSize={\"small\"} />\n                    </IconButton>\n                    <div className={\"program-typo-wrapper\"}>\n                        <Typography>\n                            {\"Scenario \" + (this.state.currentScenario+1) + \" of \" + this.props.scenarios.length}\n                        </Typography>\n                    </div>\n                    <IconButton onClick={() => this.handleScenarioChange(1)}>\n                        <KeyboardArrowRightIcon fontSize={\"small\"} />\n                    </IconButton>\n                </div> : null}\n            </div>\n        );\n    }\n}","import axios from \"axios\";\n\nexport class Client{\n    constructor() {\n        this.coursesUrl = \"https:\\\\robotdegilim.xyz/courses\";\n        this.mustUrl = \"https:\\\\robotdegilim.xyz/musts?\";\n    }\n    async getMusts(dept, semester){\n        const url = this.mustUrl + \"dept=\"+dept+\"&sem=\"+semester;\n        return (await axios.get(url)).data;\n    }\n    async getCourses(){\n        const data = (await axios.get(this.coursesUrl)).data;\n        const courses = Array(0);\n        // eslint-disable-next-line\n        Object.keys(data).map(code => {\n            const courseToPush = {\n                code: code,\n                abbreviation: data[code][\"Course Name\"].slice(0, data[code][\"Course Name\"].search(\" \")),\n                name: data[code][\"Course Name\"].slice(data[code][\"Course Name\"].search(\"-\")+2),\n                category: 0,\n                sections: Array(0)\n            };\n            const sectionNumbers = Object.keys(data[code][\"Sections\"]);\n            // eslint-disable-next-line\n            sectionNumbers.map(sn => {\n                const s = data[code][\"Sections\"][sn];\n                const sectionToPush = {\n                    instructor: s[\"i\"][0],\n                    sectionNumber: sn,\n                    criteria: Array(0),\n                    minYear: 0,\n                    maxYear: 0,\n                    lectureTimes: Array(0)\n                };\n                // eslint-disable-next-line\n                s[\"t\"].map(t => {\n                    sectionToPush.lectureTimes.push({\n                        classroom: t[\"p\"],\n                        day: t[\"d\"],\n                        startHour: parseInt(t[\"s\"].slice(0, t[\"s\"].search(\":\"))),\n                        startMin: parseInt(t[\"s\"].slice(t[\"s\"].search(\":\")+1)),\n                        endHour: parseInt(t[\"e\"].slice(0, t[\"e\"].search(\":\"))),\n                        endMin: parseInt(t[\"e\"].slice(t[\"e\"].search(\":\")+1)),\n                    });\n                });\n                // eslint-disable-next-line\n                s[\"c\"].map(c => {\n                    sectionToPush.criteria.push({\n                        dept: c[\"d\"],\n                        surnameStart: c[\"s\"],\n                        surnameEnd: c[\"e\"]\n                    });\n                });\n                courseToPush.sections.push(sectionToPush);\n            });\n            //console.log(courseToPush);\n            //console.log(data[code]);\n            courses.push(courseToPush);\n        });\n        return courses;\n    }\n}","import {Client} from \"../Client\";\n// eslint-disable-next-line\nconst exampleCourses = [\n    {\n        code: 5710213,\n        abbreviation: \"CENG213\",\n        name: \"Data Structures\",\n        category: 0,\n        sections: [\n            {\n                instructor: \"Yusuf Sahillioğlu\",\n                criteria: [\n                    {\n                        dept: \"CENG\",\n                        surnameStart: \"AA\",\n                        surnameEnd: \"FF\"\n                    },\n                    {\n                        dept: \"EE\",\n                        surnameStart: \"AA\",\n                        surnameEnd: \"ZZ\"\n                    }\n                ],\n                minYear: 0,\n                maxYear: 0,\n                lectureTimes: [\n                    {\n                        classroom: \"BMB-1\",\n                        day: 0,\n                        startHour: 8,\n                        startMin: 40,\n                        endHour: 10,\n                        endMin: 30\n                    },\n                    {\n                        classroom: \"BMB-4\",\n                        day: 2,\n                        startHour: 15,\n                        startMin: 40,\n                        endHour: 17,\n                        endMin: 30\n                    }\n                ]\n            },\n            {\n                instructor: \"Cevat Şener\",\n                criteria: [\n                    {\n                        dept: \"CENG\",\n                        surnameStart: \"FG\",\n                        surnameEnd: \"ZZ\"\n                    },\n                    {\n                        dept: \"ME\",\n                        surnameStart: \"AA\",\n                        surnameEnd: \"ZZ\"\n                    }\n                ],\n                minYear: 0,\n                maxYear: 0,\n                lectureTimes: [\n                    {\n                        classroom: \"U-3\",\n                        day: 2,\n                        startHour: 10,\n                        startMin: 40,\n                        endHour: 12,\n                        endMin: 30\n                    },\n                    {\n                        classroom: \"CZ-14\",\n                        day: 6,\n                        startHour: 15,\n                        startMin: 40,\n                        endHour: 17,\n                        endMin: 30\n                    }\n                ]\n            }\n        ]\n    },\n    {\n        code: 5710140,\n        abbreviation: \"CENG140\",\n        name: \"C Programming\",\n        category: 1,\n        sections: [\n            {\n                instructor: \"Göktürk Üçoluk\",\n                criteria: [\n                    {\n                        dept: \"CENG\",\n                        surnameStart: \"AA\",\n                        surnameEnd: \"ZZ\"\n                    }\n                ],\n                minYear: 0,\n                maxYear: 0,\n                lectureTimes: [\n                    {\n                        classroom: \"BMB-1\",\n                        day: 0,\n                        startHour: 8,\n                        startMin: 40,\n                        endHour: 10,\n                        endMin: 30\n                    },\n                    {\n                        classroom: \"BMB-5\",\n                        day: 2,\n                        startHour: 15,\n                        startMin: 40,\n                        endHour: 17,\n                        endMin: 30\n                    }\n                ]\n            }\n        ]\n    }\n]\n\nexport async function getAllCourses(){\n    const client = new Client();\n    return await client.getCourses();\n}\nexport async function getMusts(dept, semester){\n    const client = new Client();\n    return client.getMusts(dept, semester);\n}\nexport function getCourseByCategory(category){\n    if (category < 0){\n        return getAllCourses();\n    }\n    return getAllCourses().filter(c => c.category === category);\n}\nexport function filterCourses(courses, category){\n    if (category < 0){\n        return courses;\n    }\n    return courses.filter(c => c.category === category);\n}\n","function apply_criteria_courses(surname, department, grade, courses) {\n    for (var i = 0 ; i < courses.length ; i++) {\n        courses[i] = apply_criteria_sections(surname, department, grade, courses[i]);\n\n        if(courses[i].sections.length === 0) {\n            // Drop Course\n            courses.splice(i, 1);\n            i--;\n        }\n    }\n    return courses;\n}\n\nfunction surnameCheck(surname, course_surname_start, course_surname_end) {\n    return ((course_surname_start <= surname) && (surname <= course_surname_end));\n}\nfunction departmentCheck(department, dept_list) {\n    for(var i = 0 ; i < dept_list.length ; i++) {\n        if(department === dept_list[i]) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction apply_criteria_sections(surname, department, grade, course) {\n    for(var i = 0 ; i < course.sections.length ; i++) {\n        var section_passed = false;\n        for(var j = 0 ; j < course.sections[i].criteria.length ; j++) {\n            let criterion = course.sections[i].criteria[j];\n            var dept_passed = false;\n            var surn_passed = false;\n            if(course.check_department === false) {\n                dept_passed = true;\n            } else {\n                if(criterion.dept === \"ALL\" || criterion.dept === department) {\n                    dept_passed = true;\n                }\n            }\n            if(course.check_surname === false) {\n                surn_passed = true;\n            } else {\n                if(surnameCheck(surname, criterion.surnameStart, criterion.surnameEnd) === true) {\n                    surn_passed = true;\n                }\n            }\n            \n            if(dept_passed === true && surn_passed === true) {\n                section_passed = true;\n            }\n        }\n        if(section_passed === false) {\n            course.sections.splice(i, 1);\n            i--;\n        }\n    }\n    return course;\n}\n\n\nfunction lectures_intersect(lt1, lt2) {\n    if (lt1.day !== lt2.day                      // Different Days\n        || lt1.startHour > lt2.endHour          // L1 starts after L2 ends by hour\n        || lt2.startHour > lt1.endHour          // L2 starts after L1 ends by hour\n        || (lt1.startHour === lt2.endHour        // L1 starts after L2 ends by min\n            && lt1.startMin > lt2.endMin)\n        || (lt2.startHour === lt1.endHour        // L2 starts after L1 ends by min\n            && lt2.startMin > lt1.endMin)\n            ) {\n        return false;\n    }\n    return true;\n}\n\nfunction check_collision(section1, section2) {\n    const s1_lt = section1.lectureTimes;\n    const s2_lt = section2.lectureTimes;\n\n    for (var i = 0 ; i < s1_lt.length ; i++) {\n        for (var j = 0 ; j < s2_lt.length ; j++) {\n            if(lectures_intersect(s1_lt[i], s2_lt[j]) === true) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nconst exampleScenario = {\n    sections: [\n        {\n            code: 5710140,\n            section: 2\n        },\n        {\n            code: 5710213,\n            section: 1\n        }\n    ]\n}\n\n// \n// \n// \n// \n// returns array of code + sections\nexport function compute_schedule(surname, department, grade, courses) {\n    courses = apply_criteria_courses(surname, department, grade, courses);\n\n    let scenarios = [];\n    recursive_computation(courses, 0, [], scenarios);\n\n    return scenarios;\n}\n\nfunction recursive_computation(courses, depth, scenario, scenarios) {\n    if(depth === courses.length) {\n        const scenarioToPosh = Array(0);\n        scenario.map(c => {\n            scenarioToPosh.push({\n                code: c.code,\n                section: c.section.sectionNumber\n            });\n        });\n        scenarios.push(scenarioToPosh);\n        return;\n    }\n    for(var i = 0 ; i < courses[depth].sections.length ; i++) {\n        var collision = false;\n        for(var j = 0 ; j < scenario.length ; j++) {\n            if(check_collision(courses[depth].sections[i], scenario[j].section) === true) {\n                collision = true;\n            }\n        }\n        if(collision === false) {\n            scenario.push({\n                code: courses[depth].code,\n                section: courses[depth].sections[i],\n            }\n            );\n            recursive_computation(courses, depth + 1, scenario, scenarios);\n            scenario.pop();\n        }\n        \n    }\n}\n","import React from \"react\";\nimport {Divider} from \"@material-ui/core\";\n\nimport \"./SectionInfo.css\"\n\nexport class SectionInfo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.days = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n    }\n    formatTime(t){\n        return t > 9 ? t.toString() : \"0\" + t.toString();\n    }\n    getDepartmentCriteria(){\n        let ret = \"\";\n        for (let i = 0; i<this.props.sectionDetails.dept.length; i++){\n            ret += this.props.sectionDetails.dept[i] + \" \";\n        }\n        return ret;\n    }\n    renderTimes(){\n        const times = Array(0);\n        // eslint-disable-next-line\n        this.props.sectionDetails.lectureTimes.map(t => {\n            times.push(\n                <div className={\"section-date\"} style={{background: this.props.color.ternary}}>\n                    <div className={\"time-row\"}>\n                        {this.days[t.day] + \" \" + t.startHour + \".\" + this.formatTime(t.startMin) + \"-\" +\n                            t.endHour + \".\" + this.formatTime(t.endMin)\n                        }\n                    </div>\n                    <div className={\"time-row\"}>\n                        {\"Classroom: \" + t.classroom}\n                    </div>\n                </div>);\n        });\n        return times;\n    }\n    renderCriteria(c){\n        return (\n            <div className={\"section-row\"}>\n                {\"Department: \" + c.dept + \" Surname: \" + c.surnameStart + \"-\" + c.surnameEnd}\n            </div>\n        )\n    }\n    render() {\n        return (\n            <div className={\"section-info\"} style={{background: this.props.color.secondary}}>\n                <div>\n                    {\"Section \" + this.props.sectionDetails.sectionNumber}\n                </div>\n                <Divider />\n                <div className={\"section-row\"}>\n                    {\"Instructor: \" + this.props.sectionDetails.instructor}\n                </div>\n                {this.props.sectionDetails.criteria.map(c => this.renderCriteria(c))}\n                <div className={\"section-row\"}>\n                    {this.renderTimes()}\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport {\n    Accordion,\n    AccordionDetails,\n    AccordionSummary,\n    Typography,\n    FormGroup,\n    FormControlLabel,\n    Checkbox,\n    Divider,\n    Button,\n    IconButton\n} from \"@material-ui/core\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport {SectionInfo} from \"./SectionInfo\";\n\nimport \"./CourseCard.css\"\n\nexport class CourseCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedSections: Array(props.course.sections.length).fill(true),\n            sectionCount: props.course.sections.length\n        }\n    }\n\n    handleToggle(sections){\n        this.props.onToggle(sections);\n    }\n\n    toggleSections(){\n        this.setState({selectedSections: Array(this.state.sectionCount).fill(!this.state.selectedSections[0])});\n    }\n\n    renderCheckBoxes() {\n        if (this.state.sectionCount <= 0){\n            return null;\n        }\n        const boxes = Array(0);\n        for (let i = 0; i < this.state.sectionCount; i++){\n            boxes.push(\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            checked={this.state.selectedSections[i]}\n                            onChange={e => {\n                                    const newSelectedSections = this.state.selectedSections.slice(0);\n                                    newSelectedSections[i] = !newSelectedSections[i];\n                                    this.setState({selectedSections: newSelectedSections});\n                                    this.handleToggle(newSelectedSections);\n                                }\n                            }\n                            color={\"primary\"}\n                        />\n                    }\n                    label={this.props.course.sections[i].sectionNumber}\n                />);\n        }\n        return (\n            <FormGroup row>\n                {boxes}\n                <Button\n                    color={\"primary\"}\n                    onClick={() => this.toggleSections()}\n                >\n                    Toggle\n                </Button>\n            </FormGroup>\n        )\n    }\n\n    renderSectionDetails(){\n        const ret = Array(0);\n        for (let i = 0; i<this.props.course.sections.length; i++){\n            ret.push(<SectionInfo\n                sectionNo={i+1}\n                sectionDetails={this.props.course.sections[i]}\n                color={this.props.color}\n            />);\n        }\n        return ret;\n    }\n\n    render() {\n        return (\n            <div className={\"course-card\"} style={{background: this.props.color.main}}>\n                <div className={\"course-row\"}>\n                    <IconButton size={\"small\"} onClick={() => this.props.onDelete()}>\n                        <DeleteIcon fontSize={\"inherit\"}/>\n                    </IconButton>\n                    <Accordion style={{background: this.props.color.main}}>\n                        <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls={\"panel1a-content\"}>\n                            <Typography style={{color: this.props.color.text}}>\n                                {this.props.course.abbreviation + \": \" + this.props.course.name}\n                            </Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <div className={\"course-details\"}>\n                                <Divider />\n                                <div className={\"course-centered-row\"}>\n                                    <div>\n                                        Sections\n                                    </div>\n                                </div>\n                                <Divider />\n                                <div className={\"course-row\"}>\n                                    {this.renderCheckBoxes()}\n                                </div>\n                                <Divider />\n                                {this.renderSectionDetails()}\n                            </div>\n                        </AccordionDetails>\n                    </Accordion>\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport {TextField, IconButton, FormControl, Select, MenuItem} from \"@material-ui/core\";\nimport {Autocomplete} from \"@material-ui/lab\";\nimport AddBoxIcon from '@material-ui/icons/AddBox';\n\nimport {filterCourses} from \"./data/Course\";\n\nimport \"./AddCourseWidget.css\"\n\nexport class AddCourseWidget extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            course: null,\n            category: -1,\n        }\n    }\n    handleCourseAdd(){\n        this.props.onCourseAdd(this.state.course);\n        this.setState({course: null, category: -1});\n    }\n    render() {\n        return (\n            <div className={\"add-course-wrapper\"}>\n                <div className={\"add-course-row\"}>\n                    <FormControl className={\"category-form\"} variant={\"outlined\"}>\n                        <Select\n                            className={\"category-select\"}\n                            value={this.state.category}\n                            onChange={e => this.setState({category: e.target.value, course: null})}\n                            inputProps={{id: \"category-select\"}}\n                        >\n                            <MenuItem value={-1}>All courses</MenuItem>\n                            <MenuItem value={0}>Must</MenuItem>\n                            <MenuItem value={1}>Technical</MenuItem>\n                            <MenuItem value={2}>Restricted</MenuItem>\n                            <MenuItem value={3}>Non-Tech</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <Autocomplete\n                        className={\"add-course-name\"}\n                        options={filterCourses(this.props.courses, this.state.category)}\n                        getOptionLabel={(option => option.abbreviation + \": \" + option.name)}\n                        style={{width: \"60%\"}}\n                        value={this.state.course}\n                        renderInput={(params => <TextField {...params} label={\"Course name\"} variant={\"outlined\"}/>)}\n                        onChange={(e, v) =>\n                            this.setState({course: v})}\n                    />\n                    {this.state.course !== null ? <IconButton onClick={() => this.handleCourseAdd()} >\n                        <AddBoxIcon fontSize={\"large\"} color={\"primary\"} />\n                    </IconButton> : null}\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport {\n    Accordion,\n    AccordionSummary,\n    AccordionDetails,\n    Typography,\n    FormControlLabel,\n    Checkbox,\n    Divider\n} from \"@material-ui/core\";\n\nimport \"./AdvancedSettings.css\"\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport TuneIcon from '@material-ui/icons/Tune';\n\nexport class AdvancedSettings extends React.Component {\n\n    handleSurnameCheck(){\n        this.props.onSettingsChange({\n            checkSurname: !this.props.settings.checkSurname,\n            checkDepartment: this.props.settings.checkDepartment,\n            checkCollision: this.props.settings.checkCollision\n        });\n    }\n    handleDepartmentCheck(){\n        this.props.onSettingsChange({\n            checkSurname: this.props.settings.checkSurname,\n            checkDepartment: !this.props.settings.checkDepartment,\n            checkCollision: this.props.settings.checkCollision\n        });\n    }\n    handleCollisionCheck(){\n        /*TODO*/\n        this.props.onSettingsChange({\n            checkSurname: this.props.settings.checkSurname,\n            checkDepartment: this.props.settings.checkDepartment,\n            checkCollision: this.props.settings.checkCollision\n        });\n    }\n\n    render() {\n        return (\n            <div className={\"settings-wrapper\"}>\n                <Accordion style={{background: \"aliceblue\"}}>\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls={\"panel1a-content\"}>\n                        <div className={\"settings-row\"}>\n                            <TuneIcon color={\"primary\"} fontSize={\"large\"} />\n                            <div className={\"settings-typo\"}>\n                                <Typography>Advanced Settings</Typography>\n                            </div>\n                        </div>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                        <div className={\"settings-accordion\"}>\n                            <Divider />\n                            <div className={\"settings-row\"}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={this.props.settings.checkSurname}\n                                            onChange={() => this.handleSurnameCheck()}\n                                            color={\"primary\"}\n                                        />}\n                                    label={\"Check surname\"}/>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={this.props.settings.checkDepartment}\n                                            onChange={() => this.handleDepartmentCheck()}\n                                            color={\"primary\"}\n                                        />}\n                                    label={\"Check department\"}/>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={this.props.settings.checkCollision}\n                                            onChange={() => this.handleCollisionCheck()}\n                                            color={\"primary\"}\n                                        />}\n                                    label={\"Check collision\"}/>\n                            </div>\n                        </div>\n                    </AccordionDetails>\n                </Accordion>\n            </div>\n        )\n    }\n}","export class Colorset{\n    constructor() {\n        this.colors = [\n            {\n                main: \"#33CDE8\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#C3F6FF\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n            {\n                main: \"#E293FA\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#F7DCFF\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n            {\n                main: \"#FFF040\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#F7F3C2\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n            {\n                main: \"#71F154\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#DDF7D7\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n            {\n                main: \"#E82A2A\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#FFA9A9\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n            {\n                main: \"#F1951F\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#FFD39A\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n            {\n                main: \"#B59FF7\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#E9E2FE\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n            {\n                main: \"#8D969A\",\n                secondary: \"#FFFFFF\",\n                ternary: \"#CAD2D5\",\n                text: \"#000000\",\n                textSection: \"#FFFFFF\"\n            },\n        ]\n        this.iterator = -1;\n    }\n    getNextColor(){\n        if (this.colors.length <= 0){\n            return {main: 0, secondary: 0, ternary: 0};\n        }\n        this.iterator = (this.iterator+1)%this.colors.length;\n        return this.colors[this.iterator];\n    }\n}","import React from \"react\";\nimport {\n    TextField,\n    Select,\n    Button,\n    FormControl,\n    FormHelperText,\n    MenuItem,\n    InputLabel,\n    Snackbar,\n    Divider\n} from \"@material-ui/core\";\nimport MuiAlert from '@material-ui/lab/Alert';\nimport AddIcon from '@material-ui/icons/Add';\nimport EventAvailableIcon from '@material-ui/icons/EventAvailable';\nimport {isMobile} from \"react-device-detect\";\n\nimport {getAllCourses, getMusts} from \"./data/Course\";\nimport {compute_schedule} from \"./schedule\";\nimport {CourseCard} from \"./CourseCard\";\nimport {AddCourseWidget} from \"./AddCourseWidget\";\nimport {AdvancedSettings} from \"./AdvancedSettings\";\nimport {Colorset} from \"./Colorset\";\n\nimport \"./Controls.css\"\n\nexport class Controls extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            surname: \"\",\n            department: \"\",\n            semester: 0,\n            alertMsg: \"\",\n            errorDept: false,\n            errorSemester: false,\n            errorSurname: false,\n            selectedCourses: [],\n            allCourses: [],\n            settings: {\n                checkSurname: true,\n                checkDepartment: true,\n                checkCollision: true\n            },\n            scenarios: [],\n            colorset: new Colorset()\n        }\n    }\n    componentDidMount() {\n        document.title = \"Robot Değilim *-*\";\n        getAllCourses().then(data => this.setState({allCourses: data}));\n        if (isMobile){\n            document.body.style.zoom = \"60%\";\n        }\n    }\n\n    getCourseByCode(code){\n        for (let i = 0; i<this.state.allCourses.length; i++){\n            if (this.state.allCourses[i].code === code){\n                return this.state.allCourses[i];\n            }\n        }\n        return null;\n    }\n    getSectionByNumber(c, n){\n        for (let i = 0; i<c.sections.length; i++){\n            if (c.sections[i].sectionNumber === n){\n                return c.sections[i];\n            }\n        }\n        return null;\n    }\n    getColorByCourseCode(code){\n        for (let i = 0; i<this.state.selectedCourses.length; i++){\n            if (this.state.selectedCourses[i] === null){\n                continue;\n            }\n            if(this.state.selectedCourses[i].code === code){\n                return this.state.selectedCourses[i].color;\n            }\n        }\n        return null;\n    }\n    renderSemesterSelections(n){\n        const ret = Array(0);\n        ret.push(<MenuItem value={0}>---</MenuItem> )\n        for (let i = 0; i<n; i++){\n            ret.push(<MenuItem value={i+1}>{i+1}</MenuItem> );\n        }\n        return ret;\n    }\n\n    handleAddMustCourse(){\n        this.setState({alertMsg: \"\", errorDept: false, errorSemester: false, errorSurname: false});\n        if (this.state.department.length < 2){\n            this.setState({alertMsg: \"Please enter a correct department\", errorDept: true});\n            return;\n        }\n        if (this.state.semester < 1){\n            this.setState({alertMsg: \"Please choose a semester\", errorSemester: true});\n            return;\n        }\n        getMusts(this.state.department, this.state.semester).then(data => {\n            if (data !== undefined){\n                // eslint-disable-next-line\n                data.map(code => {\n                    this.handleAddCourse(this.getCourseByCode(code));\n                });\n            }\n        })\n    }\n\n    handleAlertClose(){\n        this.setState({alertMsg: \"\"});\n    }\n    handleDeleteCourse(i){\n        const newSelectedCourses = this.state.selectedCourses.slice(0);\n        newSelectedCourses[i] = null;\n        this.setState({selectedCourses: newSelectedCourses});\n    }\n    handleToggle(i, sections){\n        const newSelectedCourses = this.state.selectedCourses.slice(0);\n        newSelectedCourses[i].sections = sections;\n        this.setState({selectedCourses: newSelectedCourses});\n        console.log(\"Course \" + i + \" sections:\" + sections);\n    }\n    handleAddCourse(c){\n        if (c === null){\n            return;\n        }\n        const newSelectedCourses = this.state.selectedCourses.slice(0);\n        newSelectedCourses.push({\n            code: c.code,\n            sections: Array(c.sections.length).fill(true),\n            color: this.state.colorset.getNextColor()\n        });\n        this.setState({selectedCourses: newSelectedCourses});\n    }\n    handleChangeSettings(s){\n        this.setState({settings: s});\n    }\n    handleScheduleComplete(scenarios){\n        const scenariosToSubmit = Array(0);\n        scenarios.map(s => {\n            const scenarioToPush = Array(0);\n            s.map(c => {\n                const currentCourse = this.getCourseByCode(c.code);\n                const currentSection = this.getSectionByNumber(currentCourse, c.section);\n                const currentColor = this.getColorByCourseCode(c.code);\n                scenarioToPush.push({\n                    abbreviation: currentCourse.abbreviation,\n                    section: currentSection,\n                    color: currentColor\n                });\n            });\n            scenariosToSubmit.push(scenarioToPush);\n        });\n        this.props.onSchedule(scenariosToSubmit);\n    }\n    handleScheduleBegin(){\n        this.setState({alertMsg: \"\", errorDept: false, errorSemester: false, errorSurname: false});\n        if (this.state.department.length < 2){\n            this.setState({alertMsg: \"Please enter a correct department\", errorDept: true});\n            return;\n        }\n        if (this.state.surname.length < 2 && this.state.settings.checkSurname){\n            this.setState({alertMsg: \"Please enter at least 2 letters of your surname\", errorSurname: true});\n            return;\n        }\n        const courseData = Array(0);\n        // eslint-disable-next-line\n        this.state.selectedCourses.map(c => {\n            if (c === null){\n                return null;\n            }\n            const currentCourse = this.getCourseByCode(c.code);\n            const courseToPush = {\n                code: c.code,\n                category: currentCourse.category,\n                checkSurname: this.state.settings.checkSurname,\n                checkCollision: this.state.settings.checkCollision,\n                checkDepartment: this.state.settings.checkDepartment,\n                sections: Array(0)\n            };\n            for(let i = 0; i<currentCourse.sections.length; i++){\n                const sectionToPush = {\n                    sectionNumber: currentCourse.sections[i].sectionNumber,\n                    minYear: currentCourse.sections[i].minYear,\n                    maxYear: currentCourse.sections[i].maxYear,\n                    toggle: c.sections[i],\n                    criteria: currentCourse.sections[i].criteria,\n                    lectureTimes: Array(0)\n                };\n                currentCourse.sections[i].lectureTimes.map(t => sectionToPush.lectureTimes.push(t));\n                courseToPush.sections.push(sectionToPush);\n            }\n            courseData.push(courseToPush);\n        });\n        const calculatedSchedule = compute_schedule(\n            this.state.surname.slice(0,2),\n            this.state.department,\n            0,\n            courseData\n        );\n        console.log(calculatedSchedule);\n        this.setState({scenario: calculatedSchedule});\n        this.handleScheduleComplete(calculatedSchedule);\n    }\n    render() {\n        return (\n            <div className={isMobile ? \"control-mobile\" : \"control-wrapper\"}>\n                <Snackbar\n                    open={this.state.alertMsg !== \"\"}\n                    autoHideDuration={5000}\n                    onClose={() => this.handleAlertClose()}\n                >\n                    <MuiAlert elevation={6} variant={\"filled\"} onClose={() => this.handleAlertClose()} severity={\"error\"}>\n                        {this.state.alertMsg}\n                    </MuiAlert>\n                </Snackbar>\n                <div className={\"control-row\"}>\n                    <div className={\"textfield-wrapper\"}>\n                        <TextField\n                            required={this.state.settings.checkSurname}\n                            error={this.state.errorSurname}\n                            label={\"Surname\"}\n                            value={this.state.surname}\n                            inputProps={{ maxLength: 12 }}\n                            variant={\"outlined\"}\n                            onChange={e => this.setState({surname: e.target.value.toUpperCase()})}\n                        />\n                    </div>\n                    <div className={\"textfield-wrapper\"}>\n                        <TextField\n                            required\n                            error={this.state.errorDept}\n                            label={\"Department\"}\n                            value={this.state.department}\n                            inputProps={{ maxLength: 12 }}\n                            variant={\"outlined\"}\n                            onChange={e => this.setState({department: e.target.value.toUpperCase()})}\n                        />\n                    </div>\n                </div>\n                <div className={\"control-row\"}>\n                    <div className={\"textfield-wrapper\"}>\n                        <FormControl className={\"form-control\"}>\n                            <InputLabel>Semester</InputLabel>\n                            <Select\n                                error={this.state.errorSemester}\n                                value={this.state.semester}\n                                onChange={e => this.setState({semester: e.target.value})}\n                            >\n                                {this.renderSemesterSelections(8)}\n                            </Select>\n                            <FormHelperText>Ex: 2nd year Fall semester -> 3</FormHelperText>\n                        </FormControl>\n                    </div>\n                    <div className={\"control-button\"}>\n                        <Button\n                            variant={\"contained\"}\n                            color={\"secondary\"}\n                            startIcon={<AddIcon />}\n                            onClick={() => this.handleAddMustCourse()}>\n                            Add Must Courses\n                        </Button>\n                    </div>\n                    <div className={\"control-button\"}>\n                        <Button\n                            variant={\"contained\"}\n                            color={\"primary\"}\n                            startIcon={<EventAvailableIcon />}\n                            onClick={() => this.handleScheduleBegin()}>\n                            Schedule\n                        </Button>\n                    </div>\n                </div>\n                <AdvancedSettings settings={this.state.settings} onSettingsChange={s => this.handleChangeSettings(s)}/>\n                <Divider />\n                <div className={\"control-row\"}>\n                    <div className={\"centered-row\"}>\n                        Added Courses\n                    </div>\n                </div>\n                <Divider />\n                {this.state.selectedCourses.map((c, i) => {\n                    return (\n                        c !== null?\n                        <CourseCard course={this.getCourseByCode(c.code)}\n                                    onDelete={() => this.handleDeleteCourse(i)}\n                                    onToggle={sections => this.handleToggle(i, sections)}\n                                    color={c.color}/> : null\n                    );\n                })}\n                <AddCourseWidget\n                    courses={this.state.allCourses}\n                    onCourseAdd={c => this.handleAddCourse(c)}/>\n            </div>\n        )\n    }\n}","const schedulerData = [\n    { startDate: '2021-02-20T09:40', endDate: '2021-02-20T11:20', title: 'Meeting' },\n    { startDate: '2021-02-14T12:00', endDate: '2021-02-14T13:30', title: 'Go to\\n a gym' },\n];\n\nexport function getCoursesToDisplay(){\n    return schedulerData;\n}","import React from 'react';\nimport {isMobile} from \"react-device-detect\";\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport {WeeklyProgram} from \"./WeeklyProgram\";\nimport {Controls} from \"./Controls\";\nimport {getCoursesToDisplay} from \"./CoursesToDisplay\";\n\nimport './App.css';\n\nconst theme = createMuiTheme({\n    palette: {\n        secondary: {\n            main: '#71F154'\n        }\n    }\n});\n\nclass App extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            scenarios: []\n        }\n    }\n    render() {\n        console.log(this.state.scenarios);\n        return (\n          <MuiThemeProvider theme={theme}>\n            <div className=\"App\">\n                <div className={isMobile ? \"column\" : \"row\"}>\n                    <WeeklyProgram coursesToDisplay={getCoursesToDisplay()} scenarios={this.state.scenarios}/>\n                    <Controls onSchedule={s => this.setState({scenarios: s})}/>\n                </div>\n            </div>\n          </MuiThemeProvider>\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}